// ta_Dump File v3.0 -- code v8.1.1.0 rev11050
BpProject .projects[0] { 
 Doc_Group @.docs = [1] {
  taDoc @[0] { };
 };

 Wizard_Group @.wizards = [0] {
 };

 ControlPanel_Group @.ctrl_panels = [1] {
  ClusterRun @[0] { 
   UserDataItem_List @*(.user_data_) {
    UserDataItem @[0] { };
   };

   ControlPanelMember_Group @.mbrs = [0] {
   };

   ControlPanelMethod_Group @.mths = [0] {
   };

   ParamSearchAlgo_List @.search_algos = [0] {
   };
  };
 };

 ParamSet_Group @.active_params = [0] {
 };

 ArchivedParams_Group @.archived_params = [0] {
 };

 DataTable_Group @.data = [0] {
  DataTable_Group @.gp[0] = [2] { 
   DataTable @[0] { 
    DataTableCols @.data = [3] {
     String_Data @[0] { };
     float_Data @[1] { };
     float_Data @[2] { };
    };

    DataOpList @.last_sort_spec.ops = [0] {
    };
   };
   DataTable @[1] { 
    DataTableCols @.data = [3] {
     String_Data @[0] { };
     float_Data @[1] { };
     float_Data @[2] { };
    };

    DataOpList @.last_sort_spec.ops = [0] {
    };
   };
  };
  DataTable_Group @.gp[1] = [4] { 
   DataTable @[0] { 
    DataTableCols @.data = [6] {
     int_Data @[0] { 
      UserDataItem_List @*(.user_data_) {
       UserDataItem @[0] { };
      };
     };
     int_Data @[1] { 
      UserDataItem_List @*(.user_data_) {
       UserDataItem @[0] { };
      };
     };
     int_Data @[2] { 
      UserDataItem_List @*(.user_data_) {
       UserDataItem @[0] { };
      };
     };
     String_Data @[3] { };
     String_Data @[4] { };
     float_Data @[5] { };
    };

    DataOpList @.last_sort_spec.ops = [0] {
    };
   };
   DataTable @[1] { 
    DataTableCols @.data = [6] {
     int_Data @[0] { 
      UserDataItem_List @*(.user_data_) {
       UserDataItem @[0] { };
      };
     };
     int_Data @[1] { 
      UserDataItem_List @*(.user_data_) {
       UserDataItem @[0] { };
      };
     };
     float_Data @[2] { };
     float_Data @[3] { };
     float_Data @[4] { };
     float_Data @[5] { };
    };

    DataOpList @.last_sort_spec.ops = [0] {
    };
   };
   DataTable @[2] { 
    DataTableCols @.data = [9] {
     int_Data @[0] { 
      UserDataItem_List @*(.user_data_) {
       UserDataItem @[0] { };
      };
     };
     int_Data @[1] { 
      UserDataItem_List @*(.user_data_) {
       UserDataItem @[0] { };
      };
     };
     int_Data @[2] { 
      UserDataItem_List @*(.user_data_) {
       UserDataItem @[0] { };
      };
     };
     String_Data @[3] { };
     String_Data @[4] { };
     float_Data @[5] { };
     float_Data @[6] { };
     float_Data @[7] { };
     float_Data @[8] { };
    };

    DataOpList @.last_sort_spec.ops = [0] {
    };
   };
   DataTable @[3] { 
    DataTableCols @.data = [6] {
     int_Data @[0] { 
      UserDataItem_List @*(.user_data_) {
       UserDataItem @[0] { };
      };
     };
     int_Data @[1] { 
      UserDataItem_List @*(.user_data_) {
       UserDataItem @[0] { };
      };
     };
     float_Data @[2] { };
     float_Data @[3] { };
     float_Data @[4] { };
     float_Data @[5] { };
    };

    DataOpList @.last_sort_spec.ops = [0] {
    };
   };
  };
  DataTable_Group @.gp[2] { 
  };
 };

 Program_TopGroup @.programs = [1] {
  Program @[0] { 
   UserDataItem_List @*(.user_data_) {
    UserData_DocLink @[0] { };
   };

   ProgObjList @.objs = [0] {
   };

   ProgVar_List @.objs_vars = [0] {
   };

   ProgType_List @.types = [0] {
   };

   ProgVar_List @.args = [2] {
    ProgVar @[0] { };
    ProgVar @[1] { };
   };

   ProgVar_List @.vars = [14] {
    ProgVar @[0] { };
    ProgVar @[1] { };
    ProgVar @[2] { };
    ProgVar @[3] { };
    ProgVar @[4] { };
    ProgVar @[5] { };
    ProgVar @[6] { };
    ProgVar @[7] { };
    ProgVar @[8] { };
    ProgVar @[9] { };
    ProgVar @[10] { };
    ProgVar @[11] { };
    ProgVar @[12] { };
    ProgVar @[13] { };
   };

   Function_List @.functions = [0] {
   };

   ProgEl_List @.init_code = [0] {
   };

   ProgEl_List @.prog_code = [46] {
    LocalVars @[0] { 
     ProgVar_List @.local_vars = [0] {
     };
    };
    ReturnExpr @[1] { };
    RegisterArgs @[2] { };
    PrintExpr @[3] { };
    PrintExpr @[4] { };
    PrintExpr @[5] { };
    PrintExpr @[6] { };
    PrintExpr @[7] { };
    PrintExpr @[8] { };
    PrintExpr @[9] { };
    Comment @[10] { };
    ProgVarFmArg @[11] { };
    ProgVarFmArg @[12] { };
    ProgVarFmArg @[13] { };
    ProgVarFmArg @[14] { };
    ProgVarFmArg @[15] { };
    ProgVarFmArg @[16] { };
    ProgVarFmArg @[17] { };
    ProgVarFmArg @[18] { };
    ProgVarFmArg @[19] { };
    ProgVarFmArg @[20] { };
    ProgVarFmArg @[21] { };
    ProgVarFmArg @[22] { };
    ProgVarFmArg @[23] { };
    PrintExpr @[24] { };
    PrintExpr @[25] { };
    AssignExpr @[26] { };
    PrintExpr @[27] { };
    If @[28] { 
     ProgEl_List @.true_code = [7] {
      PrintExpr @[0] { };
      PrintExpr @[1] { };
      MethodCall @[2] { 
       ProgArg_List @.meth_args = [2] {
	ProgArg @[0] { };
	ProgArg @[1] { };
       };
      };
      PrintExpr @[3] { };
      ProgramCall @[4] { 
       ProgArg_List @.prog_args = [2] {
	ProgArg @[0] { };
	ProgArg @[1] { };
       };
      };
      ProgramCall @[5] { 
       ProgArg_List @.prog_args = [1] {
	ProgArg @[0] { };
       };
      };
      ProgramCall @[6] { 
       ProgArg_List @.prog_args = [2] {
	ProgArg @[0] { };
	ProgArg @[1] { };
       };
      };
     };
    };
    Else @[29] { 
     ProgEl_List @.true_code = [6] {
      PrintExpr @[0] { };
      PrintExpr @[1] { };
      PrintExpr @[2] { };
      PrintExpr @[3] { };
      ProgramCall @[4] { 
       ProgArg_List @.prog_args = [2] {
	ProgArg @[0] { };
	ProgArg @[1] { };
       };
      };
      MiscCall @[5] { 
       ProgArg_List @.meth_args = [1] {
	ProgArg @[0] { };
       };
      };
     };
    };
    Comment @[30] { };
    Comment @[31] { };
    MethodCall @[32] { 
     ProgArg_List @.meth_args = [3] {
      ProgArg @[0] { };
      ProgArg @[1] { };
      ProgArg @[2] { };
     };
    };
    PrintVar @[33] { };
    Comment @[34] { };
    MethodCall @[35] { 
     ProgArg_List @.meth_args = [3] {
      ProgArg @[0] { };
      ProgArg @[1] { };
      ProgArg @[2] { };
     };
    };
    PrintVar @[36] { };
    OtherProgramVar @[37] { };
    PrintExpr @[38] { };
    ProgramCall @[39] { 
     ProgArg_List @.prog_args = [3] {
      ProgArg @[0] { };
      ProgArg @[1] { };
      ProgArg @[2] { };
     };
    };
    PrintVar @[40] { };
    PrintExpr @[41] { };
    ProgramCall @[42] { 
     ProgArg_List @.prog_args = [1] {
      ProgArg @[0] { };
     };
    };
    PrintExpr @[43] { };
    PrintExpr @[44] { };
    ProgramCall @[45] { 
     ProgArg_List @.prog_args = [2] {
      ProgArg @[0] { };
      ProgArg @[1] { };
     };
    };
   };
  };
  Program_Group @.gp[0] = [11] { 
   Program @[0] { 
    UserDataItem_List @*(.user_data_) {
     UserData_DocLink @[0] { };
    };

    ProgObjList @.objs = [0] {
    };

    ProgVar_List @.objs_vars = [0] {
    };

    ProgType_List @.types = [0] {
    };

    ProgVar_List @.args = [3] {
     ProgVar @[0] { };
     ProgVar @[1] { };
     ProgVar @[2] { };
    };

    ProgVar_List @.vars = [1] {
     ProgVar @[0] { };
    };

    Function_List @.functions = [0] {
    };

    ProgEl_List @.init_code = [1] {
     NetCounterInit @[0] { };
    };

    ProgEl_List @.prog_code = [2] {
     NetCounterInit @[0] { };
     WhileLoop @[1] { 
      ProgEl_List @.loop_code = [2] {
       ProgramCall @[0] { 
	ProgArg_List @.prog_args = [3] {
	 ProgArg @[0] { };
	 ProgArg @[1] { };
	 ProgArg @[2] { };
	};
       };
       NetCounterIncr @[1] { };
      };
     };
    };
   };
   Program @[1] { 
    UserDataItem_List @*(.user_data_) {
     UserData_DocLink @[0] { };
    };

    ProgObjList @.objs = [2] {
     RndSeed_List @[0] { 
      taList @.seeds = [25] {
       RndSeed @[0] { };
       RndSeed @[1] { };
       RndSeed @[2] { };
       RndSeed @[3] { };
       RndSeed @[4] { };
       RndSeed @[5] { };
       RndSeed @[6] { };
       RndSeed @[7] { };
       RndSeed @[8] { };
       RndSeed @[9] { };
       RndSeed @[10] { };
       RndSeed @[11] { };
       RndSeed @[12] { };
       RndSeed @[13] { };
       RndSeed @[14] { };
       RndSeed @[15] { };
       RndSeed @[16] { };
       RndSeed @[17] { };
       RndSeed @[18] { };
       RndSeed @[19] { };
       RndSeed @[20] { };
       RndSeed @[21] { };
       RndSeed @[22] { };
       RndSeed @[23] { };
       RndSeed @[24] { };
      };
     };
     RndSeed @[1] { };
    };

    ProgVar_List @.objs_vars = [2] {
     ProgVar @[0] { };
     ProgVar @[1] { };
    };

    ProgType_List @.types = [1] {
     DynEnumType @[0] { 
      DynEnumItem_List @.enums = [3] {
       DynEnumItem @[0] { };
       DynEnumItem @[1] { };
       DynEnumItem @[2] { };
      };
     };
    };

    ProgVar_List @.args = [3] {
     ProgVar @[0] { };
     ProgVar @[1] { };
     ProgVar @[2] { };
    };

    ProgVar_List @.vars = [10] {
     ProgVar @[0] { };
     ProgVar @[1] { };
     ProgVar @[2] { };
     ProgVar @[3] { };
     ProgVar @[4] { };
     ProgVar @[5] { };
     ProgVar @[6] { };
     ProgVar @[7] { };
     ProgVar @[8] { };
     ProgVar @[9] { };
    };

    Function_List @.functions = [1] {
     Function @[0] { 
      ProgVar_List @.args = [0] {
      };

      ProgEl_List @.fun_code = [2] {
       LocalVars @[0] { 
	ProgVar_List @.local_vars = [0] {
	};
       };
       Switch @[1] { 
	ProgEl_List @.cases = [3] {
	 CaseBlock @[0] { 
	  ProgEl_List @.prog_code = [1] {
	   MethodCall @[0] { 
	    ProgArg_List @.meth_args = [0] {
	    };
	   };
	  };
	 };
	 CaseBlock @[1] { 
	  ProgEl_List @.prog_code = [1] {
	   MethodCall @[0] { 
	    ProgArg_List @.meth_args = [0] {
	    };
	   };
	  };
	 };
	 CaseBlock @[2] { 
	  ProgEl_List @.prog_code = [1] {
	   MethodCall @[0] { 
	    ProgArg_List @.meth_args = [1] {
	     ProgArg @[0] { };
	    };
	   };
	  };
	 };
	};
       };
      };
     };
    };

    ProgEl_List @.init_code = [7] {
     AssignExpr @[0] { };
     MethodCall @[1] { 
      ProgArg_List @.meth_args = [1] {
       ProgArg @[0] { };
      };
     };
     AssignExpr @[2] { };
     AssignExpr @[3] { };
     FunctionCall @[4] { 
      ProgArg_List @.fun_args = [0] {
      };
     };
     WtInitPrompt @[5] { 
      ProgEl_List @.yes_code = [2] {
       MethodCall @[0] { 
	ProgArg_List @.meth_args = [0] {
	};
       };
       PrintExpr @[1] { };
      };
     };
     AssignExpr @[6] { };
    };

    ProgEl_List @.prog_code = [10] {
     AssignExpr @[0] { };
     MethodCall @[1] { 
      ProgArg_List @.meth_args = [1] {
       ProgArg @[0] { };
      };
     };
     AssignExpr @[2] { };
     MemberAssign @[3] { };
     FunctionCall @[4] { 
      ProgArg_List @.fun_args = [0] {
      };
     };
     If @[5] { 
      ProgEl_List @.true_code = [2] {
       MethodCall @[0] { 
	ProgArg_List @.meth_args = [0] {
	};
       };
       PrintExpr @[1] { };
      };
     };
     AssignExpr @[6] { };
     WhileLoop @[7] { 
      ProgEl_List @.loop_code = [5] {
       ProgramCall @[0] { 
	ProgArg_List @.prog_args = [2] {
	 ProgArg @[0] { };
	 ProgArg @[1] { };
	};
       };
       NetCounterIncr @[1] { };
       If @[2] { 
	ProgEl_List @.true_code = [2] {
	 VarIncr @[0] { };
	 IfBreak @[1] { };
	};
       };
       Else @[3] { 
	ProgEl_List @.true_code = [1] {
	 AssignExpr @[0] { };
	};
       };
       If @[4] { 
	ProgEl_List @.true_code = [1] {
	 If @[0] { 
	  ProgEl_List @.true_code = [1] {
	   ProgramCall @[0] { 
	    ProgArg_List @.prog_args = [1] {
	     ProgArg @[0] { };
	    };
	   };
	  };
	 };
	};
       };
      };
     };
     If @[8] { 
      ProgEl_List @.true_code = [1] {
       ProgramCall @[0] { 
	ProgArg_List @.prog_args = [1] {
	 ProgArg @[0] { };
	};
       };
      };
     };
     MethodCall @[9] { 
      ProgArg_List @.meth_args = [0] {
      };
     };
    };
   };
   Program @[2] { 
    UserDataItem_List @*(.user_data_) {
     UserData_DocLink @[0] { };
    };

    ProgObjList @.objs = [0] {
    };

    ProgVar_List @.objs_vars = [0] {
    };

    ProgType_List @.types = [0] {
    };

    ProgVar_List @.args = [2] {
     ProgVar @[0] { };
     ProgVar @[1] { };
    };

    ProgVar_List @.vars = [5] {
     ProgVar @[0] { };
     ProgVar @[1] { };
     ProgVar @[2] { };
     ProgVar @[3] { };
     ProgVar @[4] { };
    };

    Function_List @.functions = [0] {
    };

    ProgEl_List @.init_code = [2] {
     NetCounterInit @[0] { };
     AssignExpr @[1] { };
    };

    ProgEl_List @.prog_code = [9] {
     NetCounterInit @[0] { };
     AssignExpr @[1] { };
     MethodCall @[2] { 
      ProgArg_List @.meth_args = [1] {
       ProgArg @[0] { };
      };
     };
     MethodCall @[3] { 
      ProgArg_List @.meth_args = [0] {
      };
     };
     NetDataLoop @[4] { 
      ProgEl_List @.loop_code = [2] {
       ProgramCall @[0] { 
	ProgArg_List @.prog_args = [2] {
	 ProgArg @[0] { };
	 ProgArg @[1] { };
	};
       };
       If @[1] { 
	ProgEl_List @.true_code = [1] {
	 MethodCall @[0] { 
	  ProgArg_List @.meth_args = [0] {
	  };
	 };
	};
       };
      };
     };
     If @[5] { 
      ProgEl_List @.true_code = [1] {
       MethodCall @[0] { 
	ProgArg_List @.meth_args = [0] {
	};
       };
      };
     };
     MethodCall @[6] { 
      ProgArg_List @.meth_args = [0] {
      };
     };
     MethodCall @[7] { 
      ProgArg_List @.meth_args = [0] {
      };
     };
     ProgramCall @[8] { 
      ProgArg_List @.prog_args = [1] {
       ProgArg @[0] { };
      };
     };
    };
   };
   Program @[3] { 
    UserDataItem_List @*(.user_data_) {
     UserData_DocLink @[0] { };
    };

    ProgObjList @.objs = [0] {
    };

    ProgVar_List @.objs_vars = [0] {
    };

    ProgType_List @.types = [0] {
    };

    ProgVar_List @.args = [2] {
     ProgVar @[0] { };
     ProgVar @[1] { };
    };

    ProgVar_List @.vars = [1] {
     ProgVar @[0] { };
    };

    Function_List @.functions = [0] {
    };

    ProgEl_List @.init_code = [0] {
    };

    ProgEl_List @.prog_code = [6] {
     MethodCall @[0] { 
      ProgArg_List @.meth_args = [0] {
      };
     };
     ProgramCall @[1] { 
      ProgArg_List @.prog_args = [2] {
       ProgArg @[0] { };
       ProgArg @[1] { };
      };
     };
     MethodCall @[2] { 
      ProgArg_List @.meth_args = [0] {
      };
     };
     MethodCall @[3] { 
      ProgArg_List @.meth_args = [0] {
      };
     };
     ProgramCall @[4] { 
      ProgArg_List @.prog_args = [1] {
       ProgArg @[0] { };
      };
     };
     NetUpdateView @[5] { };
    };
   };
   Program @[4] { 
    UserDataItem_List @*(.user_data_) {
     UserData_DocLink @[0] { };
    };

    ProgObjList @.objs = [1] {
     LayerWriter @[0] { 
      LayerDataEl_List @.layer_data = [3] {
       LayerWriterEl @[0] { };
       LayerWriterEl @[1] { };
       LayerWriterEl @[2] { };
      };
     };
    };

    ProgVar_List @.objs_vars = [1] {
     ProgVar @[0] { };
    };

    ProgType_List @.types = [0] {
    };

    ProgVar_List @.args = [2] {
     ProgVar @[0] { };
     ProgVar @[1] { };
    };

    ProgVar_List @.vars = [0] {
    };

    Function_List @.functions = [0] {
    };

    ProgEl_List @.init_code = [2] {
     MethodCall @[0] { 
      ProgArg_List @.meth_args = [2] {
       ProgArg @[0] { };
       ProgArg @[1] { };
      };
     };
     MethodCall @[1] { 
      ProgArg_List @.meth_args = [1] {
       ProgArg @[0] { };
      };
     };
    };

    ProgEl_List @.prog_code = [1] {
     MethodCall @[0] { 
      ProgArg_List @.meth_args = [0] {
      };
     };
    };
   };
   Program @[5] { 
    UserDataItem_List @*(.user_data_) {
     UserData_DocLink @[0] { };
    };

    ProgObjList @.objs = [1] {
     NetMonitor @[0] { 
      NetMonItem_List @.items = [6] {
       NetMonItem @[0] { };
       NetMonItem @[1] { };
       NetMonItem @[2] { };
       NetMonItem @[3] { };
       NetMonItem @[4] { };
       NetMonItem @[5] { };
      };
     };
    };

    ProgVar_List @.objs_vars = [1] {
     ProgVar @[0] { };
    };

    ProgType_List @.types = [0] {
    };

    ProgVar_List @.args = [1] {
     ProgVar @[0] { };
    };

    ProgVar_List @.vars = [1] {
     ProgVar @[0] { };
    };

    Function_List @.functions = [0] {
    };

    ProgEl_List @.init_code = [3] {
     MethodCall @[0] { 
      ProgArg_List @.meth_args = [2] {
       ProgArg @[0] { };
       ProgArg @[1] { };
      };
     };
     MethodCall @[1] { 
      ProgArg_List @.meth_args = [1] {
       ProgArg @[0] { };
      };
     };
     MethodCall @[2] { 
      ProgArg_List @.meth_args = [1] {
       ProgArg @[0] { };
      };
     };
    };

    ProgEl_List @.prog_code = [4] {
     MethodCall @[0] { 
      ProgArg_List @.meth_args = [0] {
      };
     };
     MethodCall @[1] { 
      ProgArg_List @.meth_args = [0] {
      };
     };
     MethodCall @[2] { 
      ProgArg_List @.meth_args = [0] {
      };
     };
     MethodCall @[3] { 
      ProgArg_List @.meth_args = [2] {
       ProgArg @[0] { };
       ProgArg @[1] { };
      };
     };
    };
   };
   Program @[6] { 
    UserDataItem_List @*(.user_data_) {
     UserData_DocLink @[0] { };
    };

    ProgObjList @.objs = [1] {
     NetMonitor @[0] { 
      NetMonItem_List @.items = [6] {
       NetMonItem @[0] { };
       NetMonItem @[1] { };
       NetMonItem @[2] { };
       NetMonItem @[3] { };
       NetMonItem @[4] { };
       NetMonItem @[5] { };
      };
     };
    };

    ProgVar_List @.objs_vars = [1] {
     ProgVar @[0] { };
    };

    ProgType_List @.types = [0] {
    };

    ProgVar_List @.args = [1] {
     ProgVar @[0] { };
    };

    ProgVar_List @.vars = [2] {
     ProgVar @[0] { };
     ProgVar @[1] { };
    };

    Function_List @.functions = [0] {
    };

    ProgEl_List @.init_code = [4] {
     AssignExpr @[0] { };
     MethodCall @[1] { 
      ProgArg_List @.meth_args = [2] {
       ProgArg @[0] { };
       ProgArg @[1] { };
      };
     };
     MethodCall @[2] { 
      ProgArg_List @.meth_args = [1] {
       ProgArg @[0] { };
      };
     };
     MethodCall @[3] { 
      ProgArg_List @.meth_args = [1] {
       ProgArg @[0] { };
      };
     };
    };

    ProgEl_List @.prog_code = [6] {
     MethodCall @[0] { 
      ProgArg_List @.meth_args = [0] {
      };
     };
     MethodCall @[1] { 
      ProgArg_List @.meth_args = [0] {
      };
     };
     AssignExpr @[2] { };
     MethodCall @[3] { 
      ProgArg_List @.meth_args = [4] {
       ProgArg @[0] { };
       ProgArg @[1] { };
       ProgArg @[2] { };
       ProgArg @[3] { };
      };
     };
     MethodCall @[4] { 
      ProgArg_List @.meth_args = [4] {
       ProgArg @[0] { };
       ProgArg @[1] { };
       ProgArg @[2] { };
       ProgArg @[3] { };
      };
     };
     MethodCall @[5] { 
      ProgArg_List @.meth_args = [0] {
      };
     };
    };
   };
   Program @[7] { 
    UserDataItem_List @*(.user_data_) {
     UserData_DocLink @[0] { };
    };

    ProgObjList @.objs = [0] {
    };

    ProgVar_List @.objs_vars = [0] {
    };

    ProgType_List @.types = [0] {
    };

    ProgVar_List @.args = [1] {
     ProgVar @[0] { };
    };

    ProgVar_List @.vars = [7] {
     ProgVar @[0] { };
     ProgVar @[1] { };
     ProgVar @[2] { };
     ProgVar @[3] { };
     ProgVar @[4] { };
     ProgVar @[5] { };
     ProgVar @[6] { };
    };

    Function_List @.functions = [0] {
    };

    ProgEl_List @.init_code = [0] {
    };

    ProgEl_List @.prog_code = [6] {
     If @[0] { 
      ProgEl_List @.true_code = [1] {
       ReturnExpr @[0] { };
      };
     };
     MiscCall @[1] { 
      ProgArg_List @.meth_args = [2] {
       ProgArg @[0] { };
       ProgArg @[1] { };
      };
     };
     MiscCall @[2] { 
      ProgArg_List @.meth_args = [2] {
       ProgArg @[0] { };
       ProgArg @[1] { };
      };
     };
     AssignExpr @[3] { };
     AssignExpr @[4] { };
     MethodCall @[5] { 
      ProgArg_List @.meth_args = [2] {
       ProgArg @[0] { };
       ProgArg @[1] { };
      };
     };
    };
   };
   Program @[8] { 
    UserDataItem_List @*(.user_data_) {
     UserData_DocLink @[0] { };
    };

    ProgObjList @.objs = [0] {
    };

    ProgVar_List @.objs_vars = [0] {
    };

    ProgType_List @.types = [0] {
    };

    ProgVar_List @.args = [2] {
     ProgVar @[0] { };
     ProgVar @[1] { };
    };

    ProgVar_List @.vars = [1] {
     ProgVar @[0] { };
    };

    Function_List @.functions = [0] {
    };

    ProgEl_List @.init_code = [0] {
    };

    ProgEl_List @.prog_code = [4] {
     RegisterArgs @[0] { };
     ProgVarFmArg @[1] { };
     PrintExpr @[2] { };
     MethodCall @[3] { 
      ProgArg_List @.meth_args = [4] {
       ProgArg @[0] { };
       ProgArg @[1] { };
       ProgArg @[2] { };
       ProgArg @[3] { };
      };
     };
    };
   };
   Program @[9] { 
    UserDataItem_List @*(.user_data_) {
     UserData_DocLink @[0] { };
    };

    ProgObjList @.objs = [0] {
    };

    ProgVar_List @.objs_vars = [0] {
    };

    ProgType_List @.types = [0] {
    };

    ProgVar_List @.args = [2] {
     ProgVar @[0] { };
     ProgVar @[1] { };
    };

    ProgVar_List @.vars = [0] {
    };

    Function_List @.functions = [0] {
    };

    ProgEl_List @.init_code = [0] {
    };

    ProgEl_List @.prog_code = [1] {
     MethodCall @[0] { 
      ProgArg_List @.meth_args = [4] {
       ProgArg @[0] { };
       ProgArg @[1] { };
       ProgArg @[2] { };
       ProgArg @[3] { };
      };
     };
    };
   };
   Program @[10] { 
    UserDataItem_List @*(.user_data_) {
     UserData_DocLink @[0] { };
    };

    ProgObjList @.objs = [0] {
    };

    ProgVar_List @.objs_vars = [0] {
    };

    ProgType_List @.types = [0] {
    };

    ProgVar_List @.args = [2] {
     ProgVar @[0] { };
     ProgVar @[1] { };
    };

    ProgVar_List @.vars = [1] {
     ProgVar @[0] { };
    };

    Function_List @.functions = [0] {
    };

    ProgEl_List @.init_code = [0] {
    };

    ProgEl_List @.prog_code = [1] {
     MethodCall @[0] { 
      ProgArg_List @.meth_args = [2] {
       ProgArg @[0] { };
       ProgArg @[1] { };
      };
     };
    };
   };
  };
  Program_Group @.gp[1] = [5] { 
   Program @[0] { 
    UserDataItem_List @*(.user_data_) {
     UserData_DocLink @[0] { };
    };

    ProgObjList @.objs = [0] {
    };

    ProgVar_List @.objs_vars = [0] {
    };

    ProgType_List @.types = [0] {
    };

    ProgVar_List @.args = [1] {
     ProgVar @[0] { };
    };

    ProgVar_List @.vars = [7] {
     ProgVar @[0] { };
     ProgVar @[1] { };
     ProgVar @[2] { };
     ProgVar @[3] { };
     ProgVar @[4] { };
     ProgVar @[5] { };
     ProgVar @[6] { };
    };

    Function_List @.functions = [0] {
    };

    ProgEl_List @.init_code = [2] {
     NetCounterInit @[0] { };
     AssignExpr @[1] { };
    };

    ProgEl_List @.prog_code = [12] {
     NetCounterInit @[0] { };
     MemberAssign @[1] { };
     AssignExpr @[2] { };
     MethodCall @[3] { 
      ProgArg_List @.meth_args = [1] {
       ProgArg @[0] { };
      };
     };
     MethodCall @[4] { 
      ProgArg_List @.meth_args = [0] {
      };
     };
     NetDataLoop @[5] { 
      ProgEl_List @.loop_code = [2] {
       ProgramCall @[0] { 
	ProgArg_List @.prog_args = [2] {
	 ProgArg @[0] { };
	 ProgArg @[1] { };
	};
       };
       If @[1] { 
	ProgEl_List @.true_code = [1] {
	 MethodCall @[0] { 
	  ProgArg_List @.meth_args = [0] {
	  };
	 };
	};
       };
      };
     };
     If @[6] { 
      ProgEl_List @.true_code = [1] {
       MethodCall @[0] { 
	ProgArg_List @.meth_args = [0] {
	};
       };
      };
     };
     MethodCall @[7] { 
      ProgArg_List @.meth_args = [0] {
      };
     };
     MethodCall @[8] { 
      ProgArg_List @.meth_args = [0] {
      };
     };
     ProgramCall @[9] { 
      ProgArg_List @.prog_args = [1] {
       ProgArg @[0] { };
      };
     };
     ProgramCall @[10] { 
      ProgArg_List @.prog_args = [2] {
       ProgArg @[0] { };
       ProgArg @[1] { };
      };
     };
     MemberAssign @[11] { };
    };
   };
   Program @[1] { 
    UserDataItem_List @*(.user_data_) {
     UserData_DocLink @[0] { };
    };

    ProgObjList @.objs = [0] {
    };

    ProgVar_List @.objs_vars = [0] {
    };

    ProgType_List @.types = [0] {
    };

    ProgVar_List @.args = [2] {
     ProgVar @[0] { };
     ProgVar @[1] { };
    };

    ProgVar_List @.vars = [1] {
     ProgVar @[0] { };
    };

    Function_List @.functions = [0] {
    };

    ProgEl_List @.init_code = [0] {
    };

    ProgEl_List @.prog_code = [6] {
     MethodCall @[0] { 
      ProgArg_List @.meth_args = [0] {
      };
     };
     ProgramCall @[1] { 
      ProgArg_List @.prog_args = [2] {
       ProgArg @[0] { };
       ProgArg @[1] { };
      };
     };
     MethodCall @[2] { 
      ProgArg_List @.meth_args = [0] {
      };
     };
     MethodCall @[3] { 
      ProgArg_List @.meth_args = [0] {
      };
     };
     ProgramCall @[4] { 
      ProgArg_List @.prog_args = [1] {
       ProgArg @[0] { };
      };
     };
     NetUpdateView @[5] { };
    };
   };
   Program @[2] { 
    UserDataItem_List @*(.user_data_) {
     UserData_DocLink @[0] { };
    };

    ProgObjList @.objs = [1] {
     LayerWriter @[0] { 
      LayerDataEl_List @.layer_data = [3] {
       LayerWriterEl @[0] { };
       LayerWriterEl @[1] { };
       LayerWriterEl @[2] { };
      };
     };
    };

    ProgVar_List @.objs_vars = [1] {
     ProgVar @[0] { };
    };

    ProgType_List @.types = [0] {
    };

    ProgVar_List @.args = [2] {
     ProgVar @[0] { };
     ProgVar @[1] { };
    };

    ProgVar_List @.vars = [0] {
    };

    Function_List @.functions = [0] {
    };

    ProgEl_List @.init_code = [2] {
     MethodCall @[0] { 
      ProgArg_List @.meth_args = [2] {
       ProgArg @[0] { };
       ProgArg @[1] { };
      };
     };
     MethodCall @[1] { 
      ProgArg_List @.meth_args = [1] {
       ProgArg @[0] { };
      };
     };
    };

    ProgEl_List @.prog_code = [1] {
     MethodCall @[0] { 
      ProgArg_List @.meth_args = [0] {
      };
     };
    };
   };
   Program @[3] { 
    UserDataItem_List @*(.user_data_) {
     UserData_DocLink @[0] { };
    };

    ProgObjList @.objs = [1] {
     NetMonitor @[0] { 
      NetMonItem_List @.items = [9] {
       NetMonItem @[0] { };
       NetMonItem @[1] { };
       NetMonItem @[2] { };
       NetMonItem @[3] { };
       NetMonItem @[4] { };
       NetMonItem @[5] { };
       NetMonItem @[6] { };
       NetMonItem @[7] { };
       NetMonItem @[8] { };
      };
     };
    };

    ProgVar_List @.objs_vars = [1] {
     ProgVar @[0] { };
    };

    ProgType_List @.types = [0] {
    };

    ProgVar_List @.args = [1] {
     ProgVar @[0] { };
    };

    ProgVar_List @.vars = [1] {
     ProgVar @[0] { };
    };

    Function_List @.functions = [0] {
    };

    ProgEl_List @.init_code = [3] {
     MethodCall @[0] { 
      ProgArg_List @.meth_args = [2] {
       ProgArg @[0] { };
       ProgArg @[1] { };
      };
     };
     MethodCall @[1] { 
      ProgArg_List @.meth_args = [1] {
       ProgArg @[0] { };
      };
     };
     MethodCall @[2] { 
      ProgArg_List @.meth_args = [1] {
       ProgArg @[0] { };
      };
     };
    };

    ProgEl_List @.prog_code = [4] {
     MethodCall @[0] { 
      ProgArg_List @.meth_args = [0] {
      };
     };
     MethodCall @[1] { 
      ProgArg_List @.meth_args = [0] {
      };
     };
     MethodCall @[2] { 
      ProgArg_List @.meth_args = [0] {
      };
     };
     MethodCall @[3] { 
      ProgArg_List @.meth_args = [2] {
       ProgArg @[0] { };
       ProgArg @[1] { };
      };
     };
    };
   };
   Program @[4] { 
    UserDataItem_List @*(.user_data_) {
     UserData_DocLink @[0] { };
    };

    ProgObjList @.objs = [1] {
     NetMonitor @[0] { 
      NetMonItem_List @.items = [6] {
       NetMonItem @[0] { };
       NetMonItem @[1] { };
       NetMonItem @[2] { };
       NetMonItem @[3] { };
       NetMonItem @[4] { };
       NetMonItem @[5] { };
      };
     };
    };

    ProgVar_List @.objs_vars = [1] {
     ProgVar @[0] { };
    };

    ProgType_List @.types = [0] {
    };

    ProgVar_List @.args = [1] {
     ProgVar @[0] { };
    };

    ProgVar_List @.vars = [2] {
     ProgVar @[0] { };
     ProgVar @[1] { };
    };

    Function_List @.functions = [0] {
    };

    ProgEl_List @.init_code = [4] {
     AssignExpr @[0] { };
     MethodCall @[1] { 
      ProgArg_List @.meth_args = [2] {
       ProgArg @[0] { };
       ProgArg @[1] { };
      };
     };
     MethodCall @[2] { 
      ProgArg_List @.meth_args = [1] {
       ProgArg @[0] { };
      };
     };
     MethodCall @[3] { 
      ProgArg_List @.meth_args = [1] {
       ProgArg @[0] { };
      };
     };
    };

    ProgEl_List @.prog_code = [6] {
     MethodCall @[0] { 
      ProgArg_List @.meth_args = [0] {
      };
     };
     MethodCall @[1] { 
      ProgArg_List @.meth_args = [0] {
      };
     };
     AssignExpr @[2] { };
     MethodCall @[3] { 
      ProgArg_List @.meth_args = [4] {
       ProgArg @[0] { };
       ProgArg @[1] { };
       ProgArg @[2] { };
       ProgArg @[3] { };
      };
     };
     MethodCall @[4] { 
      ProgArg_List @.meth_args = [4] {
       ProgArg @[0] { };
       ProgArg @[1] { };
       ProgArg @[2] { };
       ProgArg @[3] { };
      };
     };
     MethodCall @[5] { 
      ProgArg_List @.meth_args = [0] {
      };
     };
    };
   };
  };
 };

 taViewer_List @.viewers = [1] {
  MainWindowViewer @[0] { 
   UserDataItem_List @*(.user_data_) {
    UserDataItem @[0] { };
    UserDataItem @[1] { };
    UserDataItem @[2] { };
    UserDataItem @[3] { };
    UserDataItem @[4] { };
    UserDataItem @[5] { };
   };

   ToolBar_List @.toolbars = [1] {
    ToolBar @[0] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @[0] { };
     };
    };
   };

   FrameViewer_List @.frames = [3] {
    BrowseViewerTaBase @[0] { };
    PanelViewer @[1] { };
    T3PanelViewer @[2] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @[0] { };
     };

     T3Panel_List @.panels = [1] {
      T3Panel @[0] { 
       T3DataView_List @.root_view.children = [0] {
       };

       T3SavedView_List @.saved_views = [10] {
	T3SavedView @[0] { };
	T3SavedView @[1] { };
	T3SavedView @[2] { };
	T3SavedView @[3] { };
	T3SavedView @[4] { };
	T3SavedView @[5] { };
	T3SavedView @[6] { };
	T3SavedView @[7] { };
	T3SavedView @[8] { };
	T3SavedView @[9] { };
       };
      };
     };
    };
   };

   DockViewer_List @.docks = [1] {
    ToolBoxDockViewer @[0] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @[0] { };
      UserDataItem @[1] { };
      UserDataItem @[2] { };
      UserDataItem @[3] { };
      UserDataItem @[4] { };
      UserDataItem @[5] { };
     };
    };
   };
  };
 };

 Network_Group @.networks = [1] {
  BpNetwork @[0] { 
   UserDataItem_List @*(.user_data_) {
    UserDataItem @[0] { };
    UserDataItem @[1] { };
    UserDataItem @[2] { };
    UserDataItem @[3] { };
    UserDataItem @[4] { };
    UserDataItem @[5] { };
    UserDataItem @[6] { };
    UserDataItem @[7] { };
    UserDataItem @[8] { };
    UserDataItem @[9] { };
    UserDataItem @[10] { };
    UserDataItem @[11] { };
   };

   BaseSpec_Group @.specs = [3] {
    BpUnitSpec @[0] { 
     BaseSpec_Group @.children = [0] {
     };
    };
    BpConSpec @[1] { 
     BaseSpec_Group @.children = [0] {
     };

     Schedule @.lrate_sched = [0] {
     };
    };
    FullPrjnSpec @[2] { 
     BaseSpec_Group @.children = [0] {
     };
    };
   };

   ParamSeq_Group @.param_seqs = [0] {
   };

   Layer_Group @.layers = [3] {
    BpLayer @[0] { 
     Projection_Group @.projections = [0] {
     };

     Unit_Group @.units = [17] {
     };
    };
    BpLayer @[1] { 
     Projection_Group @.projections = [1] {
      Projection @[0] { };
     };

     Unit_Group @.units = [25] {
     };
    };
    BpLayer @[2] { 
     Projection_Group @.projections = [1] {
      Projection @[0] { };
     };

     Unit_Group @.units = [1] {
     };
    };
   };

   Weights_List @.weights = [0] {
   };
  };
 };
};
BpProject .projects[0] {
 name="consumption_bp_nogui_20160321a_convert2";
 desc=;
 tags=;
 version {
  major=0;
  minor=0;
  step=0;
 };
 author=;
 email=;
 license {
  license=NO_LIC;
  owner_name=;
  org=;
  year="2011";
  custom=;
 };
 pub_cite=;
 wiki {wiki="": page_name="": };
 docs {
  name="docs";
  el_typ=taDoc;
  el_def=0;
  taDoc @[0] {
   name="ChangeLog";
   desc=;
   web_doc=0;
   wiki=;
   url="local";
   full_url="local";
   text_size=1;
   text="<html>
<head>ChangeLog</head>
<body>
<h1>ChangeLog</h1>
<ul>

<li>Tue Jan 13 17:28:22 2009 jwgorman <code>weather_bp6.proj</code><br>
  using a bp network

trying bidirectional

think it's still feed forward

set error level crit

ran test

running new training on 9, 15 and 11

trained on 4500+ trials from nodes 15,11,9

saved as bp6

<li>Tue Jan 13 17:28:20 2009 jwgorman <code>weather_bp6.proj</code><br>
  using a bp network

trying bidirectional

think it's still feed forward

set error level crit

ran test

running new training on 9, 15 and 11

trained on 4500+ trials from nodes 15,11,9

saved as bp6

<li>Fri Dec 19 11:11:04 2008 jwgorman <code>weather_bp6.proj</code><br>
  using a bp network

trying bidirectional

think it's still feed forward

set error level crit

ran test

running new training on 9, 15 and 11

trained on 4500+ trials from nodes 15,11,9

saved as bp6

<li>Thu Nov 20 10:04:11 2008 jwgorman <code>weather_bp5.proj</code><br>
  using a bp network

trying bidirectional

think it's still feed forward

set error level crit

ran test

running new training on 9, 15 and 11

trained on 4500+ trials from nodes 15,11,9

<li>Tue Nov 18 11:47:59 2008 jwrgorman <code>weather_bp5.proj</code><br>
  using a bp network

trying bidirectional

think it's still feed forward

set error level crit

ran test

running new training on 9, 15 and 11

<li>Tue Nov 18 05:53:26 2008 jwrgorman <code>weather_bp5.proj</code><br>
  using a bp network

trying bidirectional

think it's still feed forward

set error level crit

ran test

<li>Tue Nov 18 00:10:51 2008 jwrgorman <code>weather_bp4.proj</code><br>
  using a bp network

trying bidirectional

think it's still feed forward

set error level crit

ran test

<li>Sun Nov 16 21:29:34 2008 jwrgorman <code>weather_bp4.proj</code><br>
  using a bp network

trying bidirectional

think it's still feed forward

set error level crit

<li>Wed Oct  1 22:57:58 2008 jwrgorman <code>weather_bp2.proj</code><br>
  using a bp network

trying bidirectional

think it's still feed forward

set error level crit

<li>Wed Oct  1 17:01:42 2008 jwgorman <code>weather_bp2.proj</code><br>
  using a bp network

trying bidirectional

think it's still feed forward

set error level crit

<li>Wed Oct  1 15:41:26 2008 jwgorman <code>weather_bp2.proj</code><br>
  using a bp network

trying bidirectional

think it's still feed forward

<li>Sat Sep 27 22:34:36 2008 jwrgorman <code>weather_bp1.proj</code><br>
  using a bp network

trying bidirectional

<li>Sat Sep 27 22:32:10 2008 jwrgorman <code>weather_bp1.proj</code><br>
  using a bp network

<li>Sat Sep 27 22:20:12 2008 jwrgorman <code>weather_bp1.proj</code><br>
  using a bp network
</ul>
</body>
</html>
";
   html_text="<html>
<head>ChangeLog</head>
<body>
<h1>ChangeLog</h1>
<ul>
<P>
<li>Tue Jan 13 17:28:22 2009 jwgorman <code>weather_bp6.proj</code><br>
  using a bp network
<P>
trying bidirectional
<P>
think it's still feed forward
<P>
set error level crit
<P>
ran test
<P>
running new training on 9, 15 and 11
<P>
trained on 4500+ trials from nodes 15,11,9
<P>
saved as bp6
<P>
<li>Tue Jan 13 17:28:20 2009 jwgorman <code>weather_bp6.proj</code><br>
  using a bp network
<P>
trying bidirectional
<P>
think it's still feed forward
<P>
set error level crit
<P>
ran test
<P>
running new training on 9, 15 and 11
<P>
trained on 4500+ trials from nodes 15,11,9
<P>
saved as bp6
<P>
<li>Fri Dec 19 11:11:04 2008 jwgorman <code>weather_bp6.proj</code><br>
  using a bp network
<P>
trying bidirectional
<P>
think it's still feed forward
<P>
set error level crit
<P>
ran test
<P>
running new training on 9, 15 and 11
<P>
trained on 4500+ trials from nodes 15,11,9
<P>
saved as bp6
<P>
<li>Thu Nov 20 10:04:11 2008 jwgorman <code>weather_bp5.proj</code><br>
  using a bp network
<P>
trying bidirectional
<P>
think it's still feed forward
<P>
set error level crit
<P>
ran test
<P>
running new training on 9, 15 and 11
<P>
trained on 4500+ trials from nodes 15,11,9
<P>
<li>Tue Nov 18 11:47:59 2008 jwrgorman <code>weather_bp5.proj</code><br>
  using a bp network
<P>
trying bidirectional
<P>
think it's still feed forward
<P>
set error level crit
<P>
ran test
<P>
running new training on 9, 15 and 11
<P>
<li>Tue Nov 18 05:53:26 2008 jwrgorman <code>weather_bp5.proj</code><br>
  using a bp network
<P>
trying bidirectional
<P>
think it's still feed forward
<P>
set error level crit
<P>
ran test
<P>
<li>Tue Nov 18 00:10:51 2008 jwrgorman <code>weather_bp4.proj</code><br>
  using a bp network
<P>
trying bidirectional
<P>
think it's still feed forward
<P>
set error level crit
<P>
ran test
<P>
<li>Sun Nov 16 21:29:34 2008 jwrgorman <code>weather_bp4.proj</code><br>
  using a bp network
<P>
trying bidirectional
<P>
think it's still feed forward
<P>
set error level crit
<P>
<li>Wed Oct  1 22:57:58 2008 jwrgorman <code>weather_bp2.proj</code><br>
  using a bp network
<P>
trying bidirectional
<P>
think it's still feed forward
<P>
set error level crit
<P>
<li>Wed Oct  1 17:01:42 2008 jwgorman <code>weather_bp2.proj</code><br>
  using a bp network
<P>
trying bidirectional
<P>
think it's still feed forward
<P>
set error level crit
<P>
<li>Wed Oct  1 15:41:26 2008 jwgorman <code>weather_bp2.proj</code><br>
  using a bp network
<P>
trying bidirectional
<P>
think it's still feed forward
<P>
<li>Sat Sep 27 22:34:36 2008 jwrgorman <code>weather_bp1.proj</code><br>
  using a bp network
<P>
trying bidirectional
<P>
<li>Sat Sep 27 22:32:10 2008 jwrgorman <code>weather_bp1.proj</code><br>
  using a bp network
<P>
<li>Sat Sep 27 22:20:12 2008 jwrgorman <code>weather_bp1.proj</code><br>
  using a bp network
</ul>
</body>
</html>
";
  };
 };
 wizards {
  name="wizards";
  el_typ=Wizard;
  el_def=0;
 };
 ctrl_panels {
  name="ctrl_panels";
  el_typ=ControlPanel;
  el_def=0;
  master_and_clones=0;
  ClusterRun @[0] {
   UserDataItem_List @*(.user_data_) {
    name=;
    el_typ=UserDataItem;
    el_def=0;
    UserDataItem @[0] {name="user_pinned": value=1: val_type_fixed=0: };
   };
   name="ClusterRun";
   cp_state=REGULAR;
   updt_while_running=0;
   desc=;
   mbrs {
    name="mbrs";
    el_typ=ControlPanelMember;
    el_def=0;
   };
   mths {
    name="mths";
    el_typ=ControlPanelMethod;
    el_def=0;
    group_type=GT_BUTTONS;
   };
   search_algos {
    name="search_algos";
    el_typ=ParamSearchAlgo;
    el_def=0;
   };
   use_search_algo=0;
   cur_search_algo=NULL;
   set_proj_name=0;
   proj_name=;
   auto_updt_interval=10;
   auto_updt_timeout=30;
   cluster=;
   clusters=;
   users=;
   last_submit_time=;
   notes=;
   label=;
   extra_files=;
   svn_repo=;
   repo_url=;
   queue=;
   run_time=;
   exe_cmd="emergent";
   ram_gb=0;
   n_threads=1;
   use_cuda=0;
   use_mpi=0;
   mpi_nodes=10;
   mpi_per_node=1;
   parallel_batch=0;
   pb_batches=10;
   pb_n_batches_per=1;
   nowin_x=0;
   enable_kill=0;
   enable_load=0;
   enable_notes=1;
  };
 };
 active_params {
  name="active_params";
  el_typ=ParamSet;
  el_def=0;
  master_and_clones=0;
 };
 archived_params {
  name="archived_params";
  el_typ=ParamSet;
  el_def=0;
  master_and_clones=0;
 };
 data {
  name="data";
  el_typ=DataTable;
  el_def=0;
  save_tables=1;
  DataTable_Group @.gp[0] {
   name="InputData";
   el_typ=DataTable;
   el_def=0;
   save_tables=1;
   DataTable @[0] {
    name="StdInputData";
    desc=;
    data {
     name="data";
     el_typ=String_Data;
     el_def=0;
     String_Data @[0] {
      name="Name";
      col_flags=SAVE_DATA|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
      ar {
       name="ar";
      [432] "N11_20080929_023000_20080929_030000";"N11_20080929_020000_20080929_023000";"N11_20080929_013000_20080929_020000";"N11_20080929_010000_20080929_013000";"N11_20080929_003000_20080929_010000";"N10_20080929_000000_20080929_003000";"N11_20080929_000000_20080929_003000";"N10_20080928_233000_20080929_000000";"N11_20080928_233000_20080929_000000";"N10_20080928_230000_20080928_233000";
"N11_20080928_230000_20080928_233000";"N10_20080928_223000_20080928_230000";"N11_20080928_223000_20080928_230000";"N10_20080928_220000_20080928_223000";"N11_20080928_220000_20080928_223000";"N10_20080928_213000_20080928_220000";"N11_20080928_213000_20080928_220000";"N10_20080928_210000_20080928_213000";"N11_20080928_210000_20080928_213000";"N10_20080928_203000_20080928_210000";
"N11_20080928_203000_20080928_210000";"N10_20080928_200000_20080928_203000";"N10_20080928_193000_20080928_200000";"N10_20080928_190000_20080928_193000";"N11_20080928_033200_20080928_040200";"N11_20080928_030200_20080928_033200";"N11_20080928_023200_20080928_030200";"N11_20080928_020200_20080928_023200";"N11_20080928_013200_20080928_020200";"N11_20080928_010200_20080928_013200";
"N11_20080928_003200_20080928_010200";"N11_20080928_000200_20080928_003200";"N10_20080928_000200_20080928_003200";"N11_20080927_233200_20080928_000200";"N10_20080927_233200_20080928_000200";"N11_20080927_230200_20080927_233200";"N10_20080927_230200_20080927_233200";"N11_20080927_223200_20080927_230200";"N10_20080927_223200_20080927_230200";"N11_20080927_220200_20080927_223200";
"N10_20080927_220200_20080927_223200";"N11_20080927_213200_20080927_220200";"N10_20080927_213200_20080927_220200";"N11_20080927_210200_20080927_213200";"N10_20080927_210200_20080927_213200";"N11_20080927_203200_20080927_210200";"N10_20080927_203200_20080927_210200";"N11_20080927_200200_20080927_203200";"N10_20080927_200200_20080927_203200";"N10_20080927_193200_20080927_200200";
"N10_20080927_190200_20080927_193200";"N11_20080927_030300_20080927_033300";"N11_20080927_023300_20080927_030300";"N11_20080927_020300_20080927_023300";"N11_20080927_013300_20080927_020300";"N11_20080927_010300_20080927_013300";"N11_20080927_003300_20080927_010300";"N11_20080927_000300_20080927_003300";"N10_20080927_000300_20080927_003300";"N11_20080926_233300_20080927_000300";
"N10_20080926_233300_20080927_000300";"N11_20080926_230300_20080926_233300";"N10_20080926_230300_20080926_233300";"N11_20080926_223300_20080926_230300";"N10_20080926_223300_20080926_230300";"N11_20080926_220300_20080926_223300";"N10_20080926_220300_20080926_223300";"N11_20080926_213300_20080926_220300";"N10_20080926_213300_20080926_220300";"N11_20080926_210300_20080926_213300";
"N10_20080926_210300_20080926_213300";"N11_20080926_203300_20080926_210300";"N10_20080926_203300_20080926_210300";"N11_20080926_200300_20080926_203300";"N10_20080926_200300_20080926_203300";"N10_20080926_193300_20080926_200300";"N10_20080926_190300_20080926_193300";"N10_20080926_183300_20080926_190300";"N10_20080926_180300_20080926_183300";"N15_20080926_050500_20080926_053500";
"N15_20080926_043500_20080926_050500";"N15_20080926_040500_20080926_043500";"N15_20080926_033500_20080926_040500";"N15_20080926_030500_20080926_033500";"N11_20080926_030500_20080926_033500";"N15_20080926_023500_20080926_030500";"N11_20080926_023500_20080926_030500";"N15_20080926_020500_20080926_023500";"N11_20080926_020500_20080926_023500";"N15_20080926_013500_20080926_020500";
"N11_20080926_013500_20080926_020500";"N15_20080926_010500_20080926_013500";"N11_20080926_010500_20080926_013500";"N15_20080926_003500_20080926_010500";"N11_20080926_003500_20080926_010500";"N15_20080926_000500_20080926_003500";"N11_20080926_000500_20080926_003500";"N10_20080926_000500_20080926_003500";"N15_20080925_233500_20080926_000500";"N11_20080925_233500_20080926_000500";
"N10_20080925_233500_20080926_000500";"N15_20080925_230500_20080925_233500";"N11_20080925_230500_20080925_233500";"N10_20080925_230500_20080925_233500";"N15_20080925_223500_20080925_230500";"N11_20080925_223500_20080925_230500";"N10_20080925_223500_20080925_230500";"N15_20080925_220500_20080925_223500";"N11_20080925_220500_20080925_223500";"N10_20080925_220500_20080925_223500";
"N15_20080925_213500_20080925_220500";"N11_20080925_213500_20080925_220500";"N10_20080925_213500_20080925_220500";"N15_20080925_210500_20080925_213500";"N11_20080925_210500_20080925_213500";"N10_20080925_210500_20080925_213500";"N15_20080925_203500_20080925_210500";"N11_20080925_203500_20080925_210500";"N10_20080925_203500_20080925_210500";"N15_20080925_200500_20080925_203500";
"N11_20080925_200500_20080925_203500";"N10_20080925_200500_20080925_203500";"N15_20080925_193500_20080925_200500";"N10_20080925_193500_20080925_200500";"N15_20080925_190500_20080925_193500";"N10_20080925_190500_20080925_193500";"N15_20080925_183500_20080925_190500";"N10_20080925_183500_20080925_190500";"N10_20080925_180500_20080925_183500";"N15_20080925_053600_20080925_060600";
"N15_20080925_050600_20080925_053600";"N15_20080925_043600_20080925_050600";"N15_20080925_040600_20080925_043600";"N11_20080925_040600_20080925_043600";"N15_20080925_033600_20080925_040600";"N11_20080925_033600_20080925_040600";"N15_20080925_030600_20080925_033600";"N11_20080925_030600_20080925_033600";"N15_20080925_023600_20080925_030600";"N11_20080925_023600_20080925_030600";
"N15_20080925_020600_20080925_023600";"N11_20080925_020600_20080925_023600";"N15_20080925_013600_20080925_020600";"N11_20080925_013600_20080925_020600";"N15_20080925_010600_20080925_013600";"N11_20080925_010600_20080925_013600";"N15_20080925_003600_20080925_010600";"N11_20080925_003600_20080925_010600";"N15_20080925_000600_20080925_003600";"N11_20080925_000600_20080925_003600";
"N15_20080924_233600_20080925_000600";"N11_20080924_233600_20080925_000600";"N10_20080924_233600_20080925_000600";"N15_20080924_230600_20080924_233600";"N11_20080924_230600_20080924_233600";"N10_20080924_230600_20080924_233600";"N15_20080924_223600_20080924_230600";"N10_20080924_223600_20080924_230600";"N15_20080924_220600_20080924_223600";"N11_20080924_220600_20080924_223600";
"N10_20080924_220600_20080924_223600";"N15_20080924_213600_20080924_220600";"N11_20080924_213600_20080924_220600";"N10_20080924_213600_20080924_220600";"N15_20080924_210600_20080924_213600";"N11_20080924_210600_20080924_213600";"N10_20080924_210600_20080924_213600";"N15_20080924_203600_20080924_210600";"N11_20080924_203600_20080924_210600";"N10_20080924_203600_20080924_210600";
"N15_20080924_200600_20080924_203600";"N10_20080924_200600_20080924_203600";"N15_20080924_193600_20080924_200600";"N10_20080924_193600_20080924_200600";"N10_20080924_190600_20080924_193600";"N10_20080924_183600_20080924_190600";"N10_20080924_180600_20080924_183600";"N15_20080924_050700_20080924_053700";"N15_20080924_043700_20080924_050700";"N15_20080924_040700_20080924_043700";
"N11_20080924_040700_20080924_043700";"N15_20080924_033700_20080924_040700";"N11_20080924_033700_20080924_040700";"N15_20080924_030700_20080924_033700";"N11_20080924_030700_20080924_033700";"N15_20080924_023700_20080924_030700";"N11_20080924_023700_20080924_030700";"N15_20080924_020700_20080924_023700";"N11_20080924_020700_20080924_023700";"N15_20080924_013700_20080924_020700";
"N11_20080924_013700_20080924_020700";"N15_20080924_010700_20080924_013700";"N11_20080924_010700_20080924_013700";"N15_20080924_003700_20080924_010700";"N11_20080924_003700_20080924_010700";"N15_20080924_000700_20080924_003700";"N11_20080924_000700_20080924_003700";"N15_20080923_233700_20080924_000700";"N11_20080923_233700_20080924_000700";"N10_20080923_233700_20080924_000700";
"N15_20080923_230700_20080923_233700";"N11_20080923_230700_20080923_233700";"N10_20080923_230700_20080923_233700";"N15_20080923_223700_20080923_230700";"N11_20080923_223700_20080923_230700";"N10_20080923_223700_20080923_230700";"N15_20080923_220700_20080923_223700";"N11_20080923_220700_20080923_223700";"N10_20080923_220700_20080923_223700";"N15_20080923_213700_20080923_220700";
"N11_20080923_213700_20080923_220700";"N10_20080923_213700_20080923_220700";"N15_20080923_210700_20080923_213700";"N11_20080923_210700_20080923_213700";"N10_20080923_210700_20080923_213700";"N15_20080923_203700_20080923_210700";"N11_20080923_203700_20080923_210700";"N10_20080923_203700_20080923_210700";"N15_20080923_200700_20080923_203700";"N11_20080923_200700_20080923_203700";
"N10_20080923_200700_20080923_203700";"N15_20080923_193700_20080923_200700";"N11_20080923_193700_20080923_200700";"N15_20080923_193700_20080923_200700";"N11_20080923_193700_20080923_200700";"N10_20080923_193700_20080923_200700";"N10_20080923_193700_20080923_200700";"N15_20080923_190700_20080923_193700";"N10_20080923_190700_20080923_193700";"N15_20080923_183700_20080923_190700";
"N10_20080923_183700_20080923_190700";"N10_20080923_180700_20080923_183700";"N15_20080923_053900_20080923_060900";"N15_20080923_050900_20080923_053900";"N15_20080923_043900_20080923_050900";"N15_20080923_040900_20080923_043900";"N11_20080923_040900_20080923_043900";"N15_20080923_033900_20080923_040900";"N11_20080923_033900_20080923_040900";"N15_20080923_030900_20080923_033900";
"N11_20080923_030900_20080923_033900";"N15_20080923_023900_20080923_030900";"N11_20080923_023900_20080923_030900";"N15_20080923_020900_20080923_023900";"N11_20080923_020900_20080923_023900";"N15_20080923_013900_20080923_020900";"N11_20080923_013900_20080923_020900";"N15_20080923_013900_20080923_020900";"N11_20080923_013900_20080923_020900";"N15_20080923_010900_20080923_013900";
"N11_20080923_010900_20080923_013900";"N15_20080923_003900_20080923_010900";"N11_20080923_003900_20080923_010900";"N15_20080923_000900_20080923_003900";"N11_20080923_000900_20080923_003900";"N15_20080922_233900_20080923_000900";"N11_20080922_233900_20080923_000900";"N10_20080922_233900_20080923_000900";"N15_20080922_230900_20080922_233900";"N11_20080922_230900_20080922_233900";
"N10_20080922_230900_20080922_233900";"N15_20080922_223900_20080922_230900";"N11_20080922_223900_20080922_230900";"N10_20080922_223900_20080922_230900";"N15_20080922_220900_20080922_223900";"N11_20080922_220900_20080922_223900";"N10_20080922_220900_20080922_223900";"N15_20080922_213900_20080922_220900";"N11_20080922_213900_20080922_220900";"N15_20080922_213900_20080922_220900";
"N11_20080922_213900_20080922_220900";"N10_20080922_213900_20080922_220900";"N10_20080922_213900_20080922_220900";"N10_20080922_213900_20080922_220900";"N15_20080922_210900_20080922_213900";"N11_20080922_210900_20080922_213900";"N10_20080922_210900_20080922_213900";"N15_20080922_203900_20080922_210900";"N11_20080922_203900_20080922_210900";"N10_20080922_203900_20080922_210900";
"N15_20080922_200900_20080922_203900";"N10_20080922_200900_20080922_203900";"N10_20080922_193900_20080922_200900";"N10_20080922_193900_20080922_200900";"N10_20080922_190900_20080922_193900";"N10_20080922_183900_20080922_190900";"N10_20080922_180900_20080922_183900";"N15_20080922_051000_20080922_054000";"N15_20080922_044000_20080922_051000";"N15_20080922_041000_20080922_044000";
"N11_20080922_031000_20080922_034000";"N15_20080922_024000_20080922_031000";"N11_20080922_024000_20080922_031000";"N15_20080922_021000_20080922_024000";"N11_20080922_021000_20080922_024000";"N15_20080922_014000_20080922_021000";"N11_20080922_014000_20080922_021000";"N15_20080922_014000_20080922_021000";"N11_20080922_014000_20080922_021000";"N15_20080922_011000_20080922_014000";
"N11_20080922_011000_20080922_014000";"N15_20080922_004000_20080922_011000";"N11_20080922_004000_20080922_011000";"N15_20080922_001000_20080922_004000";"N11_20080922_001000_20080922_004000";"N10_20080922_001000_20080922_004000";"N15_20080921_234000_20080922_001000";"N11_20080921_234000_20080922_001000";"N10_20080921_234000_20080922_001000";"N15_20080921_231000_20080921_234000";
"N11_20080921_231000_20080921_234000";"N10_20080921_231000_20080921_234000";"N15_20080921_224000_20080921_231000";"N11_20080921_224000_20080921_231000";"N10_20080921_224000_20080921_231000";"N15_20080921_221000_20080921_224000";"N11_20080921_221000_20080921_224000";"N10_20080921_221000_20080921_224000";"N15_20080921_214000_20080921_221000";"N11_20080921_214000_20080921_221000";
"N10_20080921_214000_20080921_221000";"N15_20080921_211000_20080921_214000";"N11_20080921_211000_20080921_214000";"N10_20080921_211000_20080921_214000";"N15_20080921_204000_20080921_211000";"N11_20080921_204000_20080921_211000";"N10_20080921_204000_20080921_211000";"N15_20080921_201000_20080921_204000";"N11_20080921_201000_20080921_204000";"N10_20080921_201000_20080921_204000";
"N15_20080921_194000_20080921_201000";"N11_20080921_194000_20080921_201000";"N10_20080921_194000_20080921_201000";"N15_20080921_194000_20080921_201000";"N11_20080921_194000_20080921_201000";"N10_20080921_194000_20080921_201000";"N15_20080921_191000_20080921_194000";"N10_20080921_191000_20080921_194000";"N15_20080921_184000_20080921_191000";"N10_20080921_184000_20080921_191000";
"N10_20080921_181000_20080921_184000";"N15_20080921_051100_20080921_054100";"N15_20080921_044100_20080921_051100";"N15_20080921_041100_20080921_044100";"N15_20080921_034100_20080921_041100";"N15_20080921_031100_20080921_034100";"N15_20080921_024100_20080921_031100";"N11_20080921_024100_20080921_031100";"N15_20080921_021100_20080921_024100";"N11_20080921_021100_20080921_024100";
"N15_20080921_014100_20080921_021100";"N11_20080921_014100_20080921_021100";"N15_20080921_014100_20080921_021100";"N11_20080921_014100_20080921_021100";"N11_20080921_011100_20080921_014100";"N15_20080921_004100_20080921_011100";"N11_20080921_004100_20080921_011100";"N15_20080921_001100_20080921_004100";"N11_20080921_001100_20080921_004100";"N10_20080921_001100_20080921_004100";
"N15_20080920_234100_20080921_001100";"N11_20080920_234100_20080921_001100";"N10_20080920_234100_20080921_001100";"N15_20080920_231100_20080920_234100";"N11_20080920_231100_20080920_234100";"N10_20080920_231100_20080920_234100";"N15_20080920_224100_20080920_231100";"N11_20080920_224100_20080920_231100";"N10_20080920_224100_20080920_231100";"N15_20080920_221100_20080920_224100";
"N11_20080920_221100_20080920_224100";"N10_20080920_221100_20080920_224100";"N15_20080920_214100_20080920_221100";"N11_20080920_214100_20080920_221100";"N10_20080920_214100_20080920_221100";"N15_20080920_211100_20080920_214100";"N11_20080920_211100_20080920_214100";"N10_20080920_211100_20080920_214100";"N15_20080920_204100_20080920_211100";"N11_20080920_204100_20080920_211100";
"N10_20080920_204100_20080920_211100";"N15_20080920_201100_20080920_204100";"N11_20080920_201100_20080920_204100";"N10_20080920_201100_20080920_204100";"N15_20080920_194100_20080920_201100";"N10_20080920_194100_20080920_201100";"N15_20080920_194100_20080920_201100";"N10_20080920_194100_20080920_201100";"N15_20080920_191100_20080920_194100";"N10_20080920_191100_20080920_194100";
"N15_20080920_184100_20080920_191100";"N10_20080920_184100_20080920_191100";"N10_20080920_181100_20080920_184100";"N11_20080920_041300_20080920_044300";"N11_20080920_034300_20080920_041300";"N11_20080920_031300_20080920_034300";"N11_20080920_031300_20080920_034300";"N11_20080920_024300_20080920_031300";"N15_20080920_021300_20080920_024300";"N11_20080920_021300_20080920_024300";
"N15_20080920_014300_20080920_021300";"N11_20080920_014300_20080920_021300";"N15_20080920_014300_20080920_021300";"N11_20080920_014300_20080920_021300";"N15_20080920_011300_20080920_014300";"N11_20080920_011300_20080920_014300";"N15_20080920_004300_20080920_011300";"N11_20080920_004300_20080920_011300";"N10_20080920_001300_20080920_004300";"N15_20080920_001300_20080920_004300";
"N11_20080920_001300_20080920_004300";"N10_20080919_234300_20080920_001300";"N11_20080919_234300_20080920_001300";"N10_20080919_231300_20080919_234300";"N11_20080919_231300_20080919_234300";"N10_20080919_224300_20080919_231300";"N11_20080919_224300_20080919_231300";"N10_20080919_221300_20080919_224300";"N11_20080919_221300_20080919_224300";"N10_20080919_214300_20080919_221300";
"N11_20080919_214300_20080919_221300";"N10_20080919_211300_20080919_214300";"N15_20080919_211300_20080919_214300";"N11_20080919_211300_20080919_214300";"N10_20080919_211300_20080919_214300";"N15_20080919_204300_20080919_211300";"N11_20080919_204300_20080919_211300";"N15_20080919_201300_20080919_204300";"N15_20080919_194300_20080919_201300";"N15_20080919_194300_20080919_201300";
"N15_20080919_191300_20080919_194300";"N15_20080919_184300_20080919_191300";      };
     };
     float_Data @[1] {
      name="Input";
      col_flags=SAVE_DATA|AUTO_WIDTH;
      is_matrix=1;
      cell_geom{ 13;1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [2] ;;      };
      width=13;
      matrix_col_width=10;
      ar {
       name="ar";
      [13 1 432] 0.25;0.21089999;0;0.30000001;0.63;0.52499998;0;0.00504662;1;0;
0;0.65728599;0.57550001;0.25;0.13277701;0;0.30000001;0.63;0.50833303;0;
0.00304134;0;0;0;0.724105;0.57550001;0.25;0.13277701;0;0.30000001;
0.63;0.50833303;0;0.00304134;0;0;0;0.790398;0.57550001;0.5;
0.054654501;0;0.5;0.67000002;0.491667;0;0.00304134;1;0;0;
0.85939997;0.57550001;0.5;0.054654501;0;0.5;0.67000002;0.491667;0;0.00304134;
1;0;0;0.92757398;0.57550001;0;0.27842;0;0.69999999;0.25;
0.69999999;0.0043113502;0;0;0;0;0.93619001;0.57550001;0.41666701;0.054654501;
0;0.5;0.67000002;0.491667;0;0.00237292;1;0;0;0.99514699;
0.57550001;0;0.320151;0;0.94999999;0.20999999;0.716667;0.0039771399;0;0;
0;0;0.99416697;0.57550001;0.41666701;0.057803102;0;0.5;0.67000002;0.491667;
0;0.00237292;1;0;0;0.90656102;0.57550001;0;0.369046;0;
0.69999999;0.22;0.73333299;0.0039771399;0;0;0;0;0.89433903;0.57550001;
0.33333299;0.057803102;0;0.5;0.67000002;0.491667;0;0.00137028;0;0;
0;0.80673301;0.57550001;0.083333299;0.369046;0;0.94999999;0.20999999;0.73333299;0.0039771399;
0;0;0;0;0.79406703;0.57550001;0.33333299;0.057803102;0;0.5;
0.67000002;0.491667;0;0.00137028;0;0;0;0.705239;0.57550001;0.166667;
0.393493;0;0.69999999;0.22;0.74166697;0.0039771399;0;1;0;0;
0.69412798;0.57550001;0.166667;0.057803102;0;0.5;0.67000002;0.491667;0;0.00137028;
1;0;0;0.60535502;0.57550001;0.25;0.393493;0;0.94999999;0.20999999;
0.74166697;0.0043113502;0;0;0;0;0.59413397;0.57550001;0.166667;0.057803102;
0;0.5;0.67000002;0.491667;0;0.00137028;1;0;0;0.50497198;
0.57550001;0.33333299;0.393493;0;0.69999999;0.22;0.74166697;0.0043113502;0;1;
0;0;0.49413899;0.57550001;0.083333299;0;0.216442;0.5;0.88;0.43333301;
0;0.00036763499;0;0;0;0.406589;0.57550001;0.41666701;0.369046;0;
0.94999999;0.20999999;0.73333299;0.0046455702;0;0;0;0;0.39414501;0.57550001;
0.083333299;0;0.216442;0.5;0.88;0.43333301;0;0.00036763499;0;0;
0;0.30515;0.57550001;0.5;0.369046;0;0.69999999;0.22;0.73333299;0.0046455702;
0;1;0;0;0.29414999;0.57550001;0.58333302;0.393493;0;0.94999999;
0.23;0.74166697;0.0053139902;0;0;0;0;0.19415601;0.57550001;0.66666698;
0.369046;0;0.69999999;0.25;0.73333299;0.0053139902;0;1;0;0;
0.094161399;0.57550001;0.25;0.057803102;0;0.5;0.55000001;0.491667;0.000635006;0;
1;0;0;0.454833;0.57162499;0.25;0.057803102;0;0.5;0.55000001;
0.491667;0.000635006;0;1;0;0;0.52229202;0.57162499;0.33333299;0.057803102;
0;0.5;0.58999997;0.491667;0.00163765;0;0;0;0;0.59020299;
0.57162499;0.33333299;0.057803102;0;0.5;0.58999997;0.491667;0.00163765;0;0;
0;0;0.658189;0.57162499;0.41666701;0.057803102;0;0.5;0.58999997;0.491667;
0.00163765;0;0;0;0;0.72583598;0.57162499;0.41666701;0.057803102;0;
0.5;0.58999997;0.491667;0.00163765;0;0;0;0;0.79333299;0.57162499;
0.5;0.136159;0;0.5;0.58999997;0.50833303;0.00163765;0;1;0;
0;0.86113101;0.57162499;0.5;0.136159;0;0.5;0.58999997;0.50833303;0.00163765;
0;1;0;0;0.92832702;0.57162499;0;0.29570401;0;0.69999999;
0.31;0.70833302;0.0029744999;0;0;0;0;0.93622798;0.57162499;0.41666701;
0.057803102;0;0.5;0.58999997;0.491667;0.00264029;0;0;0;0;
0.99631298;0.57162499;0;0.31279501;0;0.94999999;0.27000001;0.716667;0.00264029;0;
0;0;0;0.99407202;0.57162499;0.41666701;0.0609704;0;0.5;0.58999997;
0.491667;0.00264029;0;0;0;0;0.90397602;0.57162499;0.083333299;0.361417;
0;0.69999999;0.25999999;0.73333299;0.00264029;0;0;0;0;0.89340597;
0.57162499;0.33333299;0.0609704;0;0.5;0.58999997;0.491667;0.00264029;0;0;
0;0;0.80437303;0.57162499;0.083333299;0.361417;0;0.94999999;0.23999999;0.73333299;
0.00264029;0;0;0;0;0.792741;0.57162499;0.33333299;0.0609704;0;
0.5;0.58999997;0.491667;0.00264029;0;0;0;0;0.70320499;0.57162499;
0.166667;0.385728;0;0.69999999;0.25;0.74166697;0.00264029;0;1;0;
0;0.69213098;0.57162499;0.166667;0;0.017619999;0.5;0.58999997;0.47499999;0.00163765;
0;0;0;0;0.60309798;0.57162499;0.166667;0.361417;0;0.69999999;
0.25;0.73333299;0.0029744999;0;0;0;0;0.59180099;0.57162499;0.166667;
0;0.017619999;0.5;0.58999997;0.47499999;0.00163765;0;0;0;0;
0.502433;0.57162499;0.33333299;0.385728;0;0.5;0.25999999;0.74166697;0.0029744999;0;
1;0;0;0.49074399;0.57162499;0.083333299;0;0.096210398;0.5;0.63;
0.45833299;0.00163765;0;0;0;0;0.40076101;0.57162499;0.33333299;0.385728;
0;0.69999999;0.23999999;0.74166697;0.00364293;0;0;0;0;0.39013499;
0.57162499;0.083333299;0;0.096210398;0.5;0.63;0.45833299;0.00163765;0;0;
0;0;0.30182901;0.57162499;0.5;0.385728;0;0.5;0.25999999;0.74166697;
0.00364293;0;1;0;0;0.28941301;0.57162499;0.41666701;0.361417;0;
0.5;0.27000001;0.73333299;0.0043113502;0;0;0;0;0.188748;0.57162499;
0.5;0.33710599;0;0.5;0.28999999;0.72500002;0.0043113502;0;1;0;
0;0.088082299;0.57162499;0.166667;0.139561;0;0.30000001;0.72000003;0.50833303;0.00264029;
0;0;0;0;0.44507599;0.56774998;0.25;0.218151;0;0.30000001;
0.72000003;0.52499998;0.00264029;0;1;0;0;0.52377599;0.56774998;0.25;
0.218151;0;0.30000001;0.72000003;0.52499998;0.00264029;0;1;0;0;
0.60216999;0.56774998;0.25;0.139561;0;0.30000001;0.72000003;0.50833303;0.00364293;0;
1;0;0;0.68056297;0.56774998;0.25;0.139561;0;0.30000001;0.72000003;
0.50833303;0.00364293;0;1;0;0;0.75930703;0.56774998;0.33333299;0.139561;
0;0.30000001;0.72000003;0.50833303;0.0046455702;0;1;0;0;0.83835697;
0.56774998;0.33333299;0.139561;0;0.30000001;0.72000003;0.50833303;0.0046455702;0;1;
0;0;0.917319;0.56774998;0;0.264173;0;0.69999999;0.28999999;0.69999999;
0.0029744999;0;0;0;0;0.92589402;0.56774998;0.25;0;0.017619999;
0.30000001;0.81999999;0.47499999;0.0056482102;0;1;0;0;0.99540699;0.56774998;
0;0.28134501;0;0.94999999;0.28;0.70833302;0.0029744999;0;0;0;
0;0.99500501;0.56774998;0.25;0;0.0146696;0.30000001;0.81999999;0.47499999;0.0056482102;
0;1;0;0;0.92087197;0.56774998;0.083333299;0.32969701;0;0.69999999;
0.27000001;0.72500002;0.0029744999;0;0;0;0;0.91102201;0.56774998;0.166667;
0;0.0146696;0.30000001;0.76999998;0.47499999;0.0066508502;0;1;0;0;
0.837309;0.56774998;0;0.30552101;0;0.30000001;0.28;0.716667;0.0029744999;0;
0;0;0;0.82717901;0.56774998;0.166667;0;0.0146696;0.30000001;0.76999998;
0.47499999;0.0066508502;0;1;0;0;0.75323302;0.56774998;0.083333299;0.32969701;
0;0.30000001;0.28;0.72500002;0.0029744999;0;1;0;0;0.74296302;
0.56774998;0.083333299;0;0.0146696;0.30000001;0.76999998;0.47499999;0.0076534902;0;0;
0;0;0.66990298;0.56774998;0.166667;0.37805;0;0.5;0.25999999;0.74166697;
0.0033087099;0;0;0;0;0.65893298;0.56774998;0.083333299;0;0.0146696;
0.30000001;0.76999998;0.47499999;0.0076534902;0;0;0;0;0.586667;0.56774998;
0.25;0.37805;0;0.5;0.25999999;0.74166697;0.0033087099;0;1;0;
0;0.57490301;0.56774998;0.083333299;0;0.093496002;0.30000001;0.76999998;0.45833299;0.0076534902;
0;0;0;0;0.50343102;0.56774998;0.33333299;0.402226;0;0.69999999;
0.27000001;0.75;0.0039771399;0;0;0;0;0.49101299;0.56774998;0.083333299;
0;0.093496002;0.30000001;0.76999998;0.45833299;0.0076534902;0;0;0;0;
0.419121;0.56774998;0.5;0.37805;0;0.5;0.28;0.74166697;0.0039771399;0;
1;0;0;0.40707701;0.56774998;0.5;0.353874;0;0.69999999;0.28999999;
0.73333299;0.0049797799;0;0;0;0;0.32281399;0.56774998;0.58333302;0.32969701;
0;0.5;0.31;0.72500002;0.0049797799;0;1;0;0;0.23911101;
0.56774998;0.41666701;0.32969701;0;0.30000001;0.31999999;0.72500002;0.0059824199;0;0;
0;0;0.15484799;0.56774998;0.41666701;0.28134501;0;0.30000001;0.34;0.70833302;
0.0059824199;0;1;0;0;0.070771702;0.56774998;0;0;0.0146696;
0.5;0.58999997;0.47499999;0.0106614;0;0;0;0;0.12754899;0.56387502;
0.083333299;0.064156801;0;0.5;0.63;0.491667;0.0106614;0;1;0;
0;0.20671999;0.56387502;0.083333299;0.064156801;0;0.5;0.63;0.491667;0.0106614;
0;1;0;0;0.28562701;0.56387502;0.25;0.064156801;0;0.5;
0.63;0.491667;0.011664;0;1;0;0;0.36435801;0.56387502;0.25;
0.064156801;0;0.5;0.63;0.491667;0.011664;0;1;0;0;
0.44405499;0.56387502;0.25;0.064156801;0;0.5;0.63;0.491667;0.011664;0;
1;0;0;0.444098;0.56387502;0.33333299;0.064156801;0;0.5;0.58999997;
0.491667;0.0126667;0;0;0;0;0.52155799;0.56387502;0.33333299;0.064156801;
0;0.5;0.58999997;0.491667;0.0126667;0;0;0;0;0.52160197;
0.56387502;0.33333299;0.064156801;0;0.5;0.58999997;0.491667;0.0126667;0;0;
0;0;0.60090399;0.56387502;0.33333299;0.064156801;0;0.5;0.58999997;0.491667;
0.0126667;0;0;0;0;0.60099101;0.56387502;0.41666701;0.064156801;0;
0.5;0.63;0.491667;0.0126667;0;0;0;0;0.67923999;0.56387502;
0.41666701;0.064156801;0;0.5;0.63;0.491667;0.0126667;0;0;0;
0;0.67928398;0.56387502;0.41666701;0.064156801;0;0.5;0.63;0.491667;0.0126667;
0;0;0;0;0.75915599;0.56387502;0.41666701;0.064156801;0;0.5;
0.63;0.491667;0.0126667;0;0;0;0;0.75919998;0.56387502;0.5;
0.064156801;0;0.5;0.63;0.491667;0.0126667;0;1;0;0;
0.837668;0.56387502;0.5;0.064156801;0;0.5;0.63;0.491667;0.0126667;0;
1;0;0;0.83771199;0.56387502;0.5;0.064156801;0;0.5;0.63;
0.491667;0.0126667;0;1;0;0;0.916619;0.56387502;0.5;0.064156801;
0;0.5;0.63;0.491667;0.0126667;0;1;0;0;0.91666299;
0.56387502;0;0.23299199;0;0.69999999;0.31;0.69166702;0.0059824199;0;0;
0;0;0.92565501;0.56387502;0.41666701;0.064156801;0;0.5;0.63;0.491667;
0.0136693;0;0;0;0;0.99618399;0.56387502;0.41666701;0.064156801;0;
0.5;0.63;0.491667;0.0136693;0;0;0;0;0.99627203;0.56387502;
0;0.27428401;0;0.94999999;0.28;0.70833302;0.0056482102;0;0;0;
0;0.99502403;0.56387502;0.41666701;0.067362398;0;0.5;0.63;0.491667;0.0136693;
0;0;0;0;0.92037898;0.56387502;0.41666701;0.067362398;0;0.5;
0.63;0.491667;0.0136693;0;0;0;0;0.92033201;0.56387502;0.083333299;
0.32236999;0;0.69999999;0.25999999;0.72500002;0.0056482102;0;0;0;0;
0.910568;0.56387502;0.33333299;0;0.0117015;0.5;0.63;0.47499999;0.0136693;0;
0;0;0;0.83657998;0.56387502;0.33333299;0;0.0117015;0.5;0.63;
0.47499999;0.0136693;0;0;0;0;0.83653301;0.56387502;0.083333299;0.32236999;
0;0.94999999;0.25;0.72500002;0.0056482102;0;0;0;0;0.826065;
0.56387502;0.33333299;0;0.0117015;0.5;0.63;0.47499999;0.0136693;0;0;
0;0;0.75165498;0.56387502;0.33333299;0;0.0117015;0.5;0.63;0.47499999;
0.0136693;0;0;0;0;0.75160801;0.56387502;0.166667;0.34641299;0;
0.69999999;0.25;0.73333299;0.0056482102;0;1;0;0;0.74146801;0.56387502;
0.166667;0;0.0117015;0.5;0.67000002;0.47499999;0.0136693;0;0;0;
0;0.66888899;0.56387502;0.166667;0;0.0117015;0.5;0.67000002;0.47499999;0.0136693;
0;0;0;0;0.66884202;0.56387502;0.25;0.34641299;0;0.94999999;
0.25;0.73333299;0.0059824199;0;0;0;0;0.657058;0.56387502;0.166667;
0;0.0117015;0.5;0.67000002;0.47499999;0.0136693;0;0;0;0;
0.583682;0.56387502;0.166667;0;0.0117015;0.5;0.67000002;0.47499999;0.0136693;0;
0;0;0;0.58363497;0.56387502;0.33333299;0.34641299;0;0.69999999;0.25999999;
0.73333299;0.0059824199;0;1;0;0;0.57260197;0.56387502;0.083333299;0;
0.090765297;0.5;0.72000003;0.45833299;0.0136693;0;0;0;0;0.50049299;
0.56387502;0.083333299;0;0.090765297;0.5;0.72000003;0.45833299;0.0136693;0;0;
0;0;0.50044602;0.56387502;0.41666701;0.37045601;0;0.94999999;0.25;0.74166697;
0.0069850599;0;0;0;0;0.48819301;0.56387502;0.083333299;0;0.090765297;
0.5;0.72000003;0.45833299;0.0136693;0;0;0;0;0.41674101;0.56387502;
0.083333299;0;0.090765297;0.5;0.72000003;0.45833299;0.0136693;0;0;0;
0;0.41669399;0.56387502;0.58333302;0.34641299;0;0.69999999;0.25999999;0.73333299;0.0069850599;
0;1;0;0;0.40359601;0.56387502;0;0;0.13029701;0.5;
0.72000003;0.44999999;0.0136693;0;0;0;0;0.331487;0.56387502;0.58333302;
0.37045601;0;0.69999999;0.25999999;0.74166697;0.0079877004;0;0;0;0;
0.31928101;0.56387502;0;0;0.13029701;0.5;0.72000003;0.44999999;0.0136693;0;
0;0;0;0.246984;0.56387502;0.58333302;0.34641299;0;0.5;0.28;
0.73333299;0.0079877004;0;1;0;0;0.234543;0.56387502;0;0;
0.13029701;0.5;0.72000003;0.44999999;0.0126667;0;0;0;0;0.164405;
0.56387502;0.75;0.37045601;0;0.94999999;0.25;0.74166697;0.0089903399;0;0;
0;0;0.150087;0.56387502;0.75;0.32236999;0;0.69999999;0.28999999;0.72500002;
0.0089903399;0;1;0;0;0.065771602;0.56387502;0;0.067362398;0;
0.30000001;0.63;0.491667;0.0126667;0;0;0;0;0.048817899;0.56;
0;0.067362398;0;0.30000001;0.63;0.491667;0.0126667;0;0;0;
0;0.12754899;0.56;0.083333299;0.067362398;0;0.30000001;0.67000002;0.491667;0.011664;
0;0;0;0;0.206632;0.56;0.083333299;0.067362398;0;0.30000001;
0.67000002;0.491667;0.011664;0;0;0;0;0.28510001;0.56;0.083333299;
0.067362398;0;0.30000001;0.67000002;0.491667;0.011664;0;0;0;0;
0.285144;0.56;0.166667;0.14642601;0;0.30000001;0.63;0.50833303;0.011664;0;
0;0;0;0.364402;0.56;0.166667;0.14642601;0;0.30000001;0.63;
0.50833303;0.011664;0;0;0;0;0.36444601;0.56;0.166667;0.14642601;
0;0.30000001;0.63;0.50833303;0.011664;0;0;0;0;0.44343999;
0.56;0.166667;0.14642601;0;0.30000001;0.63;0.50833303;0.011664;0;0;
0;0;0.44357201;0.56;0.33333299;0.22549;0;0.30000001;0.68000001;0.52499998;
0.011664;0;1;0;0;0.522084;0.56;0.33333299;0.22549;0;
0.30000001;0.68000001;0.52499998;0.011664;0;1;0;0;0.52212799;0.56;
0.33333299;0.22549;0;0.30000001;0.68000001;0.52499998;0.011664;0;1;0;
0;0.60086;0.56;0.33333299;0.22549;0;0.30000001;0.68000001;0.52499998;0.011664;
0;1;0;0;0.60094702;0.56;0.41666701;0.14642601;0;0.5;
0.72000003;0.50833303;0.0126667;0;0;0;0;0.679986;0.56;0.41666701;
0.14642601;0;0.5;0.72000003;0.50833303;0.0126667;0;0;0;0;
0.68002999;0.56;0.41666701;0.14642601;0;0.5;0.72000003;0.50833303;0.0126667;0;
0;0;0;0.758937;0.56;0.41666701;0.14642601;0;0.5;0.72000003;
0.50833303;0.0126667;0;0;0;0;0.75902498;0.56;0.5;0.22549;
0;0.5;0.68000001;0.52499998;0.0126667;0;1;0;0;0.83736098;
0.56;0.5;0.22549;0;0.5;0.68000001;0.52499998;0.0126667;0;1;
0;0;0.83740503;0.56;0.5;0.22549;0;0.5;0.68000001;0.52499998;
0.0126667;0;1;0;0;0.91670698;0.56;0.5;0.22549;0;
0.5;0.68000001;0.52499998;0.0126667;0;1;0;0;0.91675103;0.56;
0.25;0.067362398;0;0.30000001;0.76999998;0.491667;0.0136693;0;0;0;
0;0.99614;0.56;0.25;0.067362398;0;0.30000001;0.76999998;0.491667;0.0136693;
0;0;0;0;0.99622798;0.56;0;0.243389;0;0.94999999;
0.47999999;0.69999999;0.0056482102;0;0;0;0;0.99510401;0.56;0.25;
0.070587397;0;0.30000001;0.76999998;0.491667;0.0136693;0;0;0;0;
0.92005998;0.56;0.25;0.070587397;0;0.30000001;0.76999998;0.491667;0.0136693;0;
0;0;0;0.92001301;0.56;0.083333299;0.26730001;0;0.69999999;0.44;
0.70833302;0.0056482102;0;0;0;0;0.91040897;0.56;0.166667;0.070587397;
0;0.30000001;0.88;0.491667;0.0136693;0;0;0;0;0.83560097;
0.56;0.083333299;0.31512201;0;0.30000001;0.34;0.72500002;0.0053139902;0;0;
0;0;0.82566702;0.56;0.166667;0.070587397;0;0.30000001;0.88;0.491667;
0.0136693;0;0;0;0;0.75137699;0.56;0.166667;0.070587397;0;
0.30000001;0.88;0.491667;0.0136693;0;0;0;0;0.75128299;0.56;
0.083333299;0.36294499;0;0.30000001;0.31;0.74166697;0.0053139902;0;1;0;
0;0.74073702;0.56;0.083333299;0;0.0087153697;0.30000001;0.94;0.47499999;0.0126667;
0;0;0;0;0.66710597;0.56;0.083333299;0;0.0087153697;0.30000001;
0.94;0.47499999;0.0126667;0;0;0;0;0.667059;0.56;0.083333299;
0.38685599;0;0.40000001;0.31;0.75;0.0056482102;0;0;0;0;
0.65618402;0.56;0.083333299;0;0.0087153697;0.30000001;0.94;0.47499999;0.0126667;0;
0;0;0;0.58340001;0.56;0.083333299;0;0.0087153697;0.30000001;0.94;
0.47499999;0.0126667;0;0;0;0;0.58330601;0.56;0.166667;0.410768;
0;0.30000001;0.31999999;0.75833303;0.0056482102;0;1;0;0;0.57144201;
0.56;0.083333299;0;0.0087153697;0.30000001;0.94;0.47499999;0.0126667;0;0;
0;0;0.50002402;0.56;0.083333299;0;0.0087153697;0.30000001;0.94;0.47499999;
0.0126667;0;0;0;0;0.49983501;0.56;0.25;0.434679;0;
0.30000001;0.31;0.76666701;0.0059824199;0;0;0;0;0.48679399;0.56;
0;0;0.0087153697;0.15000001;0.94;0.47499999;0.0126667;0;0;0;
0;0.413304;0.56;0.33333299;0.410768;0;0.30000001;0.34;0.75833303;0.0059824199;
0;1;0;0;0.40186399;0.56;0;0;0.0087153697;0.15000001;
0.94;0.47499999;0.011664;0;0;0;0;0.32922199;0.56;0.41666701;
0.45859;0;0.5;0.28999999;0.77499998;0.0069850599;0;0;0;0;
0.31726399;0.56;0.5;0.434679;0;0.5;0.33000001;0.76666701;0.0069850599;0;
1;0;0;0.232381;0.56;0.5;0.36294499;0;0.5;0.36000001;
0.74166697;0.0076534902;0;0;0;0;0.147686;0.56;0.5;0.33903399;
0;0.5;0.40000001;0.73333299;0.0076534902;0;1;0;0;0.062897198;
0.56;0;0.229193;0;0.30000001;0.58999997;0.52499998;0.0106614;0;0;
0;0;0.125643;0.55612499;0.083333299;0.229193;0;0.30000001;0.58999997;0.52499998;
0.0106614;0;0;0;0;0.204494;0.55612499;0.083333299;0.229193;0;
0.30000001;0.58999997;0.52499998;0.0106614;0;0;0;0;0.28347799;0.55612499;
0.083333299;0.229193;0;0.30000001;0.58999997;0.52499998;0.0106614;0;0;0;
0;0.28352201;0.55612499;0.25;0.26884401;0;0.5;0.63999999;0.533333;0.0106614;
0;0;0;0;0.36254901;0.55612499;0.25;0.26884401;0;0.5;
0.63999999;0.533333;0.0106614;0;0;0;0;0.362593;0.55612499;0.25;
0.26884401;0;0.5;0.63999999;0.533333;0.0106614;0;0;0;0;
0.441576;0.55612499;0.25;0.26884401;0;0.5;0.63999999;0.533333;0.0106614;0;
0;0;0;0.44161999;0.55612499;0.33333299;0.26884401;0;0.5;0.68000001;
0.533333;0.0106614;0;0;0;0;0.519768;0.55612499;0.33333299;0.26884401;
0;0.5;0.68000001;0.533333;0.0106614;0;0;0;0;0.51981199;
0.55612499;0.33333299;0.26884401;0;0.5;0.68000001;0.533333;0.0106614;0;0;
0;0;0.60051;0.55612499;0.33333299;0.26884401;0;0.5;0.68000001;0.533333;
0.0106614;0;0;0;0;0.60055399;0.55612499;0.41666701;0.26884401;0;
0.5;0.58999997;0.533333;0.0106614;0;1;0;0;0.67790997;0.55612499;
0.41666701;0.26884401;0;0.5;0.58999997;0.533333;0.0106614;0;1;0;
0;0.67795402;0.55612499;0.41666701;0.26884401;0;0.5;0.58999997;0.533333;0.0106614;
0;1;0;0;0.75706899;0.55612499;0.41666701;0.26884401;0;0.5;
0.58999997;0.533333;0.0106614;0;1;0;0;0.75715703;0.55612499;0.5;
0.26884401;0;0.5;0.63999999;0.533333;0.011664;0;0;0;0;
0.83622801;0.55612499;0.5;0.26884401;0;0.5;0.63999999;0.533333;0.011664;0;
0;0;0;0.836272;0.55612499;0.5;0.26884401;0;0.5;0.63999999;
0.533333;0.011664;0;0;0;0;0.915344;0.55612499;0.5;0.26884401;
0;0.5;0.63999999;0.533333;0.011664;0;0;0;0;0.91538799;
0.55612499;0.41666701;0.26884401;0;0.5;0.68000001;0.533333;0.011664;0;0;
0;0;0.99485499;0.55612499;0.41666701;0.26884401;0;0.5;0.68000001;0.533333;
0.011664;0;0;0;0;0.99489897;0.55612499;0;0.28417301;0;
0.94999999;0.43000001;0.716667;0.0046455702;0;0;0;0;0.99504298;0.55612499;
0.41666701;0.27269;0;0.5;0.68000001;0.533333;0.011664;0;0;0;
0;0.92092001;0.55612499;0.41666701;0.27269;0;0.5;0.68000001;0.533333;0.011664;
0;0;0;0;0.92087299;0.55612499;0.083333299;0.33173499;0;0.69999999;
0.38999999;0.73333299;0.0046455702;0;0;0;0;0.90996599;0.55612499;0.33333299;
0.23291799;0;0.5;0.68000001;0.52499998;0.011664;0;0;0;0;
0.83574897;0.55612499;0.33333299;0.23291799;0;0.5;0.68000001;0.52499998;0.011664;0;
0;0;0;0.83565497;0.55612499;0.083333299;0.30795401;0;0.5;0.38999999;
0.72500002;0.0043113502;0;0;0;0;0.825032;0.55612499;0.33333299;0.23291799;
0;0.5;0.68000001;0.52499998;0.011664;0;0;0;0;0.75043702;
0.55612499;0.33333299;0.23291799;0;0.5;0.68000001;0.52499998;0.011664;0;0;
0;0;0.75038999;0.55612499;0.166667;0.35551599;0;0.5;0.36000001;0.74166697;
0.0043113502;0;1;0;0;0.74005002;0.55612499;0.083333299;0.153375;0;
0.30000001;0.76999998;0.50833303;0.011664;0;0;0;0;0.66753203;0.55612499;
0.083333299;0.153375;0;0.30000001;0.76999998;0.50833303;0.011664;0;0;0;
0;0.66743797;0.55612499;0.25;0.42685899;0;0.69999999;0.31;0.76666701;0.0046455702;
0;0;0;0;0.65506798;0.55612499;0.083333299;0.153375;0;0.30000001;
0.76999998;0.50833303;0.011664;0;0;0;0;0.58245599;0.55612499;0.083333299;
0.153375;0;0.30000001;0.76999998;0.50833303;0.011664;0;0;0;0;
0.58240902;0.55612499;0.33333299;0.42685899;0;0.5;0.31999999;0.76666701;0.0046455702;0;
1;0;0;0.57027501;0.55612499;0.083333299;0.073831901;0;0.30000001;0.81999999;
0.491667;0.011664;0;0;0;0;0.49728501;0.55612499;0.083333299;0.073831901;
0;0.30000001;0.81999999;0.491667;0.011664;0;0;0;0;0.49719101;
0.55612499;0.33333299;0.42685899;0;0.5;0.33000001;0.76666701;0.0053139902;0;0;
0;0;0.485199;0.55612499;0.083333299;0.073831901;0;0.30000001;0.81999999;0.491667;
0.011664;0;0;0;0;0.41282299;0.55612499;0.083333299;0.073831901;0;
0.30000001;0.81999999;0.491667;0.011664;0;0;0;0;0.41272801;0.55612499;
0.41666701;0.40307799;0;0.5;0.34999999;0.75833303;0.0053139902;0;1;0;
0;0.40026399;0.55612499;0;0.073831901;0;0.30000001;0.81999999;0.491667;0.0106614;
0;0;0;0;0.33855799;0.55612499;0;0.073831901;0;0.30000001;
0.81999999;0.491667;0.0106614;0;0;0;0;0.33851099;0.55612499;0;
0.073831901;0;0.30000001;0.81999999;0.491667;0.0106614;0;0;0;0;
0.32812399;0.55612499;0;0.073831901;0;0.30000001;0.81999999;0.491667;0.0106614;0;
0;0;0;0.32802999;0.55612499;0.58333302;0.35551599;0;0.69999999;0.36000001;
0.74166697;0.0063166302;0;0;0;0;0.327133;0.55612499;0.58333302;0.35551599;
0;0.69999999;0.36000001;0.74166697;0.0063166302;0;0;0;0;0.315377;
0.55612499;0;0.073831901;0;0.30000001;0.81999999;0.491667;0.0106614;0;0;
0;0;0.241962;0.55612499;0.66666698;0.33173499;0;0.5;0.40000001;0.73333299;
0.0063166302;0;1;0;0;0.23025399;0.55612499;0;0;0.0057112002;
0.30000001;0.88;0.47499999;0.0106614;0;0;0;0;0.157405;0.55612499;
0.41666701;0.35551599;0;0.30000001;0.37;0.74166697;0.0073192702;0;0;0;
0;0.145224;0.55612499;0.41666701;0.30795401;0;0.30000001;0.43000001;0.72500002;0.0073192702;
0;1;0;0;0.060242701;0.55612499;0;0.153375;0;0.30000001;
0.76999998;0.50833303;0.0106614;0;0;0;0;0.043432299;0.55225003;0;
0.153375;0;0.30000001;0.76999998;0.50833303;0.0106614;0;0;0;0;
0.123418;0.55225003;0.083333299;0.23291799;0;0.30000001;0.76999998;0.52499998;0.0106614;0;
0;0;0;0.202346;0.55225003;0.083333299;0.23291799;0;0.30000001;0.76999998;
0.52499998;0.0106614;0;0;0;0;0.28092101;0.55225003;0.083333299;0.23291799;
0;0.30000001;0.76999998;0.52499998;0.0106614;0;0;0;0;0.280965;
0.55225003;0.166667;0.23291799;0;0.30000001;0.76999998;0.52499998;0.0106614;0;0;
0;0;0.35989201;0.55225003;0.166667;0.23291799;0;0.30000001;0.76999998;0.52499998;
0.0106614;0;0;0;0;0.35993701;0.55225003;0.166667;0.23291799;0;
0.30000001;0.76999998;0.52499998;0.0106614;0;0;0;0;0.439922;0.55225003;
0.166667;0.23291799;0;0.30000001;0.76999998;0.52499998;0.0106614;0;0;0;
0;0.43996599;0.55225003;0.25;0.35223299;0;0.30000001;0.77999997;0.55000001;0.0106614;
0;0;0;0;0.51902598;0.55225003;0.25;0.35223299;0;0.30000001;
0.77999997;0.55000001;0.0106614;0;0;0;0;0.51911497;0.55225003;0.25;
0.35223299;0;0.30000001;0.77999997;0.55000001;0.0106614;0;0;0;0;
0.59707201;0.55225003;0.25;0.35223299;0;0.30000001;0.77999997;0.55000001;0.0106614;0;
0;0;0;0.59715998;0.55225003;0.25;0.23291799;0;0.30000001;0.88;
0.52499998;0.0106614;0;1;0;0;0.665021;0.55225003;0.25;0.23291799;
0;0.30000001;0.88;0.52499998;0.0106614;0;1;0;0;0.66506499;
0.55225003;0.25;0.23291799;0;0.30000001;0.88;0.52499998;0.0106614;0;1;
0;0;0.676705;0.55225003;0.25;0.23291799;0;0.30000001;0.88;0.52499998;
0.0106614;0;1;0;0;0.67674899;0.55225003;0.25;0.23291799;0;
0.30000001;0.88;0.52499998;0.0106614;0;1;0;0;0.75598598;0.55225003;
0.25;0.23291799;0;0.30000001;0.88;0.52499998;0.0106614;0;1;0;
0;0.75603002;0.55225003;0.25;0.27269;0;0.30000001;0.76999998;0.533333;0.011664;
0;0;0;0;0.83663303;0.55225003;0.25;0.27269;0;0.30000001;
0.76999998;0.533333;0.011664;0;0;0;0;0.83667701;0.55225003;0.25;
0.27269;0;0.30000001;0.76999998;0.533333;0.011664;0;0;0;0;
0.914635;0.55225003;0.25;0.27269;0;0.30000001;0.76999998;0.533333;0.011664;0;
0;0;0;0.91467899;0.55225003;0.25;0.23291799;0;0.30000001;0.88;
0.52499998;0.011664;0;0;0;0;0.99470901;0.55225003;0.25;0.23291799;
0;0.30000001;0.88;0.52499998;0.011664;0;0;0;0;0.99484098;
0.55225003;0;0.34816799;0;0.69999999;0.34999999;0.74166697;0.0039771399;0;0;
0;0;0.99501401;0.55225003;0.25;0.23666599;0;0.30000001;0.88;0.52499998;
0.011664;0;0;0;0;0.91951901;0.55225003;0.25;0.23666599;0;
0.30000001;0.88;0.52499998;0.011664;0;0;0;0;0.91947198;0.55225003;
0.083333299;0.39547199;0;0.5;0.31999999;0.75833303;0.0039771399;0;1;0;
0;0.90950102;0.55225003;0.25;0.23666599;0;0.30000001;0.88;0.52499998;0.011664;
0;0;0;0;0.83395898;0.55225003;0.25;0.23666599;0;0.30000001;
0.88;0.52499998;0.011664;0;0;0;0;0.833911;0.55225003;0.083333299;
0.39547199;0;0.94999999;0.28999999;0.75833303;0.0043113502;0;0;0;0;
0.82398701;0.55225003;0.166667;0.23666599;0;0.30000001;0.88;0.52499998;0.011664;0;
1;0;0;0.75010699;0.55225003;0.166667;0.23666599;0;0.30000001;0.88;
0.52499998;0.011664;0;1;0;0;0.75005901;0.55225003;0.166667;0.41912401;
0;0.69999999;0.28999999;0.76666701;0.0043113502;0;1;0;0;0.73866397;
0.55225003;0.083333299;0.156881;0;0.30000001;0.88;0.50833303;0.0126667;0;0;
0;0;0.67484897;0.55225003;0.083333299;0.156881;0;0.30000001;0.88;0.50833303;
0.0126667;0;0;0;0;0.67480201;0.55225003;0.083333299;0.156881;0;
0.30000001;0.88;0.50833303;0.0126667;0;0;0;0;0.66354901;0.55225003;
0.083333299;0.156881;0;0.30000001;0.88;0.50833303;0.0126667;0;0;0;
0;0.66350102;0.55225003;0.25;0.44277599;0;0.94999999;0.28999999;0.77499998;0.0046455702;
0;0;0;0;0.662884;0.55225003;0.25;0.44277599;0;0.94999999;
0.28999999;0.77499998;0.0046455702;0;0;0;0;0.656901;0.55225003;0.25;
0.44277599;0;0.94999999;0.28999999;0.77499998;0.0046455702;0;0;0;0;
0.65310299;0.55225003;0.083333299;0.156881;0;0.30000001;0.88;0.50833303;0.0126667;0;
0;0;0;0.579602;0.55225003;0.083333299;0.156881;0;0.30000001;0.88;
0.50833303;0.0126667;0;0;0;0;0.57950699;0.55225003;0.41666701;0.44277599;
0;0.69999999;0.30000001;0.77499998;0.0046455702;0;1;0;0;0.567779;
0.55225003;0;0.156881;0;0.30000001;0.88;0.50833303;0.011664;0;0;
0;0;0.49513301;0.55225003;0;0.156881;0;0.30000001;0.88;0.50833303;
0.011664;0;0;0;0;0.495038;0.55225003;0.41666701;0.37182;0;
0.69999999;0.34;0.75;0.0056482102;0;0;0;0;0.482218;0.55225003;
0;0.156881;0;0.30000001;0.88;0.50833303;0.011664;0;0;0;
0;0.40904999;0.55225003;0.5;0.34816799;0;0.5;0.36000001;0.74166697;0.0056482102;
0;1;0;0;0.39680001;0.55225003;0.58333302;0.44277599;0;0.69999999;
0.33000001;0.77499998;0.0069850599;0;0;0;0;0.32315701;0.55225003;0.58333302;
0.44277599;0;0.69999999;0.33000001;0.77499998;0.0069850599;0;0;0;0;
0.311239;0.55225003;0.66666698;0.39547199;0;0.5;0.36000001;0.75833303;0.0069850599;0;
1;0;0;0.22582;0.55225003;0.66666698;0.34816799;0;0.69999999;0.40000001;
0.74166697;0.0076534902;0;0;0;0;0.14030699;0.55225003;0.66666698;0.30086401;
0;0.5;0.44;0.72500002;0.0076534902;0;1;0;0;0.0555529;
0.55225003;0;0.156881;0;0.5;0.68000001;0.50833303;0.0096587697;0;0;
0;0;0.121049;0.54837501;0.083333299;0.156881;0;0.5;0.63;0.50833303;
0.0096587697;0;0;0;0;0.20023;0.54837501;0.083333299;0.156881;0;
0.5;0.63;0.50833303;0.0096587697;0;0;0;0;0.279632;0.54837501;
0.25;0.156881;0;0.5;0.63;0.50833303;0.0096587697;0;1;0;
0;0.43927699;0.54837501;0.33333299;0.23666599;0;0.5;0.68000001;0.52499998;0.0106614;
0;0;0;0;0.51867902;0.54837501;0.33333299;0.23666599;0;0.5;
0.68000001;0.52499998;0.0106614;0;0;0;0;0.51872301;0.54837501;0.33333299;
0.23666599;0;0.5;0.68000001;0.52499998;0.0106614;0;0;0;0;
0.597507;0.54837501;0.33333299;0.23666599;0;0.5;0.68000001;0.52499998;0.0106614;0;
0;0;0;0.59755099;0.54837501;0.41666701;0.23666599;0;0.5;0.68000001;
0.52499998;0.0106614;0;0;0;0;0.66430902;0.54837501;0.41666701;0.23666599;
0;0.5;0.68000001;0.52499998;0.0106614;0;0;0;0;0.66435301;
0.54837501;0.41666701;0.23666599;0;0.5;0.68000001;0.52499998;0.0106614;0;0;
0;0;0.67712998;0.54837501;0.41666701;0.23666599;0;0.5;0.68000001;0.52499998;
0.0106614;0;0;0;0;0.67717397;0.54837501;0.41666701;0.23666599;0;
0.5;0.68000001;0.52499998;0.0106614;0;0;0;0;0.75626701;0.54837501;
0.41666701;0.23666599;0;0.5;0.68000001;0.52499998;0.0106614;0;0;0;
0;0.756311;0.54837501;0.41666701;0.23666599;0;0.5;0.76999998;0.52499998;0.0106614;
0;0;0;0;0.83496201;0.54837501;0.41666701;0.23666599;0;0.5;
0.76999998;0.52499998;0.0106614;0;0;0;0;0.83504999;0.54837501;0.41666701;
0.23666599;0;0.5;0.76999998;0.52499998;0.0106614;0;0;0;0;
0.91560203;0.54837501;0.41666701;0.23666599;0;0.5;0.76999998;0.52499998;0.0106614;0;
0;0;0;0.91564602;0.54837501;0;0.30086401;0;0.30000001;0.33000001;
0.72500002;0.0043113502;0;0;0;0;0.92506301;0.54837501;0.25;0.23666599;
0;0.30000001;0.76999998;0.52499998;0.0106614;0;0;0;0;0.99580002;
0.54837501;0.25;0.23666599;0;0.30000001;0.76999998;0.52499998;0.0106614;0;0;
0;0;0.99584401;0.54837501;0;0.31737399;0;0.69999999;0.31999999;0.73333299;
0.0039771399;0;0;0;0;0.99495298;0.54837501;0.25;0.240437;0;
0.30000001;0.76999998;0.52499998;0.0106614;0;0;0;0;0.91871798;0.54837501;
0.25;0.240437;0;0.30000001;0.76999998;0.52499998;0.0106614;0;0;0;
0;0.91867101;0.54837501;0.083333299;0.36442301;0;0.5;0.28999999;0.75;0.0039771399;
0;0;0;0;0.90919501;0.54837501;0.166667;0.240437;0;0.30000001;
0.76999998;0.52499998;0.0106614;0;0;0;0;0.83296001;0.54837501;0.166667;
0.240437;0;0.30000001;0.76999998;0.52499998;0.0106614;0;0;0;0;
0.83291298;0.54837501;0.083333299;0.34089899;0;0.30000001;0.31;0.74166697;0.0039771399;0;
0;0;0;0.82353199;0.54837501;0.166667;0.240437;0;0.30000001;0.76999998;
0.52499998;0.0106614;0;0;0;0;0.74744099;0.54837501;0.166667;0.240437;
0;0.30000001;0.76999998;0.52499998;0.0106614;0;0;0;0;0.74739301;
0.54837501;0.083333299;0.36442301;0;0.30000001;0.28999999;0.75;0.0039771399;0;1;
0;0;0.73786998;0.54837501;0.166667;0.16040801;0;0.5;0.88;0.50833303;
0.0096587697;0;0;0;0;0.66172999;0.54837501;0.166667;0.16040801;0;
0.5;0.88;0.50833303;0.0096587697;0;0;0;0;0.66168302;0.54837501;
0.166667;0.34089899;0;0.30000001;0.33000001;0.74166697;0.0043113502;0;0;0;
0;0.65206403;0.54837501;0.166667;0.16040801;0;0.5;0.88;0.50833303;0.0096587697;
0;0;0;0;0.57587701;0.54837501;0.166667;0.16040801;0;0.5;
0.88;0.50833303;0.0096587697;0;0;0;0;0.575782;0.54837501;0.166667;
0.34089899;0;0.30000001;0.31999999;0.74166697;0.0043113502;0;1;0;0;
0.56640202;0.54837501;0.083333299;0.080380298;0;0.5;0.88;0.491667;0.0096587697;0;
0;0;0;0.489977;0.54837501;0.083333299;0.080380298;0;0.5;0.88;
0.491667;0.0096587697;0;0;0;0;0.48992899;0.54837501;0.166667;0.31737399;
0;0.40000001;0.34;0.73333299;0.0046455702;0;0;0;0;0.480739;
0.54837501;0;0.080380298;0;0.050000001;0.88;0.491667;0.0096587697;0;0;
0;0;0.404838;0.54837501;0;0.080380298;0;0.050000001;0.88;0.491667;
0.0096587697;0;0;0;0;0.40479001;0.54837501;0.25;0.31737399;0;
0.40000001;0.34999999;0.73333299;0.0046455702;0;1;0;0;0.394981;0.54837501;
0;0.00035212401;0;0.050000001;0.94;0.47499999;0.0096587697;0;0;0;
0;0.32950801;0.54837501;0;0.00035212401;0;0.050000001;0.94;0.47499999;0.0096587697;
0;0;0;0;0.329413;0.54837501;0.58333302;0.34089899;0;0.69999999;
0.34999999;0.74166697;0.0053139902;0;0;0;0;0.32136601;0.54837501;0;
0.00035212401;0;0.050000001;0.94;0.47499999;0.0096587697;0;0;0;0;
0.31860399;0.54837501;0;0.00035212401;0;0.050000001;0.94;0.47499999;0.0096587697;0;
0;0;0;0.31855601;0.54837501;0.58333302;0.34089899;0;0.69999999;0.34999999;
0.74166697;0.0053139902;0;0;0;0;0.30927101;0.54837501;0;0.00035212401;
0;0.050000001;0.94;0.47499999;0.0096587697;0;0;0;0;0.232513;
0.54837501;0.66666698;0.31737399;0;0.5;0.37;0.73333299;0.0053139902;0;1;
0;0;0.223561;0.54837501;0;0.00035212401;0;0.2;0.94;0.47499999;
0.0086561302;0;0;0;0;0.146374;0.54837501;0.66666698;0.31737399;0;
0.69999999;0.38999999;0.73333299;0.0063166302;0;0;0;0;0.137851;0.54837501;
0.66666698;0.27032501;0;0.5;0.44;0.716667;0.0063166302;0;1;0;
0;0.0521404;0.54837501;0;0.080380298;0;0.5;0.63;0.491667;0.0066508502;
0;0;0;0;0.160734;0.54449999;0.083333299;0.080380298;0;0.5;
0.67000002;0.491667;0.0066508502;0;0;0;0;0.23999301;0.54449999;0.083333299;
0.080380298;0;0.5;0.67000002;0.491667;0.0066508502;0;0;0;0;
0.320227;0.54449999;0.25;0.16040801;0;0.5;0.68000001;0.50833303;0.0066508502;0;
0;0;0;0.39984;0.54449999;0.25;0.16040801;0;0.5;0.68000001;
0.50833303;0.0066508502;0;0;0;0;0.477503;0.54449999;0.33333299;0.16040801;
0;0.5;0.68000001;0.50833303;0.0066508502;0;0;0;0;0.559156;
0.54449999;0.33333299;0.16040801;0;0.5;0.68000001;0.50833303;0.0066508502;0;0;
0;0;0.55919999;0.54449999;0.33333299;0.16040801;0;0.5;0.68000001;0.50833303;
0.0066508502;0;0;0;0;0.63912398;0.54449999;0.33333299;0.16040801;0;
0.5;0.68000001;0.50833303;0.0066508502;0;0;0;0;0.63916802;0.54449999;
0.41666701;0.16040801;0;0.5;0.72000003;0.50833303;0.0066508502;0;1;0;
0;0.66354901;0.54449999;0.41666701;0.16040801;0;0.5;0.72000003;0.50833303;0.0066508502;
0;1;0;0;0.66359299;0.54449999;0.41666701;0.16040801;0;0.5;
0.72000003;0.50833303;0.0066508502;0;1;0;0;0.71820599;0.54449999;0.41666701;
0.16040801;0;0.5;0.72000003;0.50833303;0.0066508502;0;1;0;0;
0.71824998;0.54449999;0.41666701;0.16040801;0;0.5;0.72000003;0.50833303;0.0066508502;0;
1;0;0;0.798706;0.54449999;0.5;0.080380298;0;0.5;0.72000003;
0.491667;0.0076534902;0;0;0;0;0.877698;0.54449999;0.5;0.080380298;
0;0.5;0.72000003;0.491667;0.0076534902;0;0;0;0;0.87774301;
0.54449999;0.5;0.080380298;0;0.5;0.72000003;0.491667;0.0076534902;0;0;
0;0;0.95753402;0.54449999;0.5;0.080380298;0;0.5;0.72000003;0.491667;
0.0076534902;0;0;0;0;0.95762199;0.54449999;0;0.246801;0;
0.69999999;0.37;0.70833302;0.00264029;0;0;0;0;0.96755201;0.54449999;
0.41666701;0.083684497;0;0.5;0.72000003;0.491667;0.0076534902;0;1;0;
0;0.960078;0.54449999;0.41666701;0.083684497;0;0.5;0.72000003;0.491667;0.0076534902;
0;1;0;0;0.96003097;0.54449999;0;0.263513;0;0.69999999;
0.36000001;0.716667;0.00264029;0;0;0;0;0.94895202;0.54449999;0.41666701;
0.083684497;0;0.5;0.72000003;0.491667;0.0076534902;0;1;0;0;
0.87321502;0.54449999;0.41666701;0.083684497;0;0.5;0.72000003;0.491667;0.0076534902;0;
1;0;0;0.87316698;0.54449999;0.083333299;0.28691101;0;0.5;0.33000001;
0.72500002;0.00264029;0;0;0;0;0.86304402;0.54449999;0.25;0.0034115999;
0;0.5;0.81999999;0.47499999;0.0086561302;0;0;0;0;0.78702098;
0.54449999;0.25;0.0034115999;0;0.5;0.81999999;0.47499999;0.0086561302;0;0;
0;0;0.786973;0.54449999;0.083333299;0.28691101;0;0.5;0.31999999;0.72500002;
0.00264029;0;0;0;0;0.77708799;0.54449999;0.25;0.0034115999;0;
0.5;0.81999999;0.47499999;0.0086561302;0;0;0;0;0.70154202;0.54449999;
0.25;0.0034115999;0;0.5;0.81999999;0.47499999;0.0086561302;0;0;0;
0;0.70149499;0.54449999;0.166667;0.33370799;0;0.5;0.28999999;0.74166697;0.0029744999;
0;0;0;0;0.69113201;0.54449999;0.166667;0;0.0768613;0.5;
0.88;0.45833299;0.0086561302;0;0;0;0;0.61577803;0.54449999;0.166667;
0;0.0768613;0.5;0.88;0.45833299;0.0086561302;0;0;0;0;
0.61568201;0.54449999;0.25;0.33370799;0;0.5;0.28999999;0.74166697;0.0029744999;0;
0;0;0;0.60517597;0.54449999;0.166667;0;0.0768613;0.5;0.88;
0.45833299;0.0086561302;0;0;0;0;0.52977401;0.54449999;0.166667;0;
0.0768613;0.5;0.88;0.45833299;0.0086561302;0;0;0;0;0.52972603;
0.54449999;0.25;0.33370799;0;0.5;0.30000001;0.74166697;0.0029744999;0;1;
0;0;0.51922101;0.54449999;0.083333299;0;0.116998;0.94999999;0.88;0.44999999;
0.0086561302;0;0;0;0;0.446684;0.54449999;0.083333299;0;0.116998;
0.94999999;0.88;0.44999999;0.0086561302;0;0;0;0;0.44658801;0.54449999;
0.5;0.38050401;0;0.94999999;0.27000001;0.75833303;0.00364293;0;0;0;
0;0.433265;0.54449999;0.083333299;0;0.116998;0.94999999;0.88;0.44999999;0.0086561302;
0;0;0;0;0.35838801;0.54449999;0.083333299;0;0.116998;0.94999999;
0.88;0.44999999;0.0086561302;0;0;0;0;0.35834;0.54449999;0.66666698;
0.33370799;0;0.94999999;0.28;0.74166697;0.0046455702;0;0;0;0;
0.34730899;0.54449999;0;0;0.43808901;0.5;0.93000001;0.383333;0.0076534902;0;
0;0;0;0.327683;0.54449999;0.66666698;0.33370799;0;0.94999999;0.28;
0.74166697;0.0046455702;0;0;0;0;0.319278;0.54449999;0;0;
0.43808901;0.5;0.93000001;0.383333;0.0076534902;0;0;0;0;0.271907;
0.54449999;0.66666698;0.33370799;0;0.94999999;0.28;0.74166697;0.0046455702;0;0;
0;0;0.261401;0.54449999;0;0;0.43808901;0.5;0.93000001;0.383333;
0.0076534902;0;0;0;0;0.1881;0.54449999;0.75;0.31030899;0;
0.69999999;0.30000001;0.73333299;0.0046455702;0;1;0;0;0.17535;0.54449999;
0;0;0.43808901;0.5;0.93000001;0.383333;0.0076534902;0;0;0;
0;0.100043;0.54449999;0.75;0.28691101;0;0.94999999;0.33000001;0.72500002;0.0053139902;
0;0;0;0;0.089441799;0.54449999;0.75;0.263513;0;0.94999999;
0.36000001;0.716667;0.0059824199;0;0;0;0;0.00348598;0.54449999;0.083333299;
0.24423;0;0.5;0.63;0.52499998;0.0046455702;0;0;0;0;
0.31797001;0.54062498;0.25;0.24423;0;0.5;0.68000001;0.52499998;0.0046455702;0;
0;0;0;0.398729;0.54062498;0.25;0.24423;0;0.5;0.68000001;
0.52499998;0.0046455702;0;0;0;0;0.47171;0.54062498;0.25;0.24423;
0;0.5;0.68000001;0.52499998;0.0046455702;0;0;0;0;0.47837701;
0.54062498;0.33333299;0.24423;0;0.5;0.63;0.52499998;0.0046455702;0;0;
0;0;0.55771399;0.54062498;0.33333299;0.24423;0;0.5;0.63;0.52499998;
0.0046455702;0;0;0;0;0.63851702;0.54062498;0.33333299;0.24423;0;
0.5;0.63;0.52499998;0.0046455702;0;0;0;0;0.63860601;0.54062498;
0.41666701;0.163957;0;0.5;0.68000001;0.50833303;0.0046455702;0;1;0;
0;0.66194099;0.54062498;0.41666701;0.163957;0;0.5;0.68000001;0.50833303;0.0046455702;
0;1;0;0;0.66198498;0.54062498;0.41666701;0.163957;0;0.5;
0.68000001;0.50833303;0.0046455702;0;1;0;0;0.71807599;0.54062498;0.41666701;
0.163957;0;0.5;0.68000001;0.50833303;0.0046455702;0;1;0;0;
0.71812099;0.54062498;0.41666701;0.163957;0;0.5;0.68000001;0.50833303;0.0046455702;0;
1;0;0;0.798347;0.54062498;0.41666701;0.163957;0;0.5;0.68000001;
0.50833303;0.0046455702;0;1;0;0;0.79839098;0.54062498;0.41666701;0.083684497;
0;0.5;0.72000003;0.491667;0.0056482102;0;0;0;0;0.87795001;
0.54062498;0.41666701;0.083684497;0;0.5;0.72000003;0.491667;0.0056482102;0;0;
0;0;0.87799501;0.54062498;0;0.146521;0;0.94999999;0.36000001;0.67500001;
0.0029744999;0;0;0;0;0.88746202;0.54062498;0.41666701;0.083684497;0;
0.5;0.72000003;0.491667;0.0056482102;0;0;0;0;0.95813102;0.54062498;
0.41666701;0.083684497;0;0.5;0.72000003;0.491667;0.0056482102;0;0;0;
0;0.95817602;0.54062498;0;0.21671601;0;0.94999999;0.30000001;0.69999999;0.00264029;
0;0;0;0;0.96746498;0.54062498;0.41666701;0.087008998;0;0.5;
0.72000003;0.491667;0.0056482102;0;0;0;0;0.95845503;0.54062498;0;
0.23349901;0;0.94999999;0.30000001;0.70833302;0.00264029;0;0;0;0;
0.94865799;0.54062498;0.41666701;0.087008998;0;0.5;0.72000003;0.491667;0.0056482102;0;
0;0;0;0.872244;0.54062498;0.083333299;0.25677299;0;0.69999999;0.28999999;
0.716667;0.00264029;0;1;0;0;0.86239898;0.54062498;0.25;0;
0.074029297;0.5;0.76999998;0.45833299;0.0056482102;0;0;0;0;0.786322;
0.54062498;0.166667;0.25677299;0;0.94999999;0.28999999;0.716667;0.0029744999;0;0;
0;0;0.77575499;0.54062498;0.25;0;0.074029297;0.5;0.76999998;0.45833299;
0.0056482102;0;0;0;0;0.70006198;0.54062498;0.166667;0.25677299;0;
0.69999999;0.28999999;0.716667;0.0029744999;0;1;0;0;0.68930399;0.54062498;
0.166667;0;0.114289;0.5;0.81999999;0.44999999;0.0046455702;0;0;0;
0;0.61370701;0.54062498;0.33333299;0.30331999;0;0.94999999;0.28;0.73333299;0.0033087099;
0;0;0;0;0.602997;0.54062498;0.166667;0;0.114289;0.5;
0.81999999;0.44999999;0.0046455702;0;0;0;0;0.59137398;0.54062498;0.166667;
0;0.114289;0.5;0.81999999;0.44999999;0.0046455702;0;0;0;0;
0.591326;0.54062498;0.33333299;0.30331999;0;0.94999999;0.28;0.73333299;0.0033087099;0;
0;0;0;0.57984698;0.54062498;0.083333299;0;0.19480801;0.5;0.88;
0.43333301;0.0046455702;0;0;0;0;0.50458699;0.54062498;0.083333299;0;
0.19480801;0.5;0.88;0.43333301;0.0046455702;0;0;0;0;0.50453901;
0.54062498;0.083333299;0;0.19480801;0.5;0.88;0.43333301;0.0046455702;0;0;
0;0;0.419624;0.54062498;0;0;0.275327;0.5;0.87;0.41666701;
0.00364293;0;0;0;0;0.333413;0.54062498;0;0;0.275327;
0.5;0.87;0.41666701;0.00364293;0;0;0;0;0.32495999;0.54062498;
0;0;0.275327;0.5;0.87;0.41666701;0.00364293;0;0;0;
0;0.245665;0.54062498;0;0;0.275327;0.5;0.87;0.41666701;0.00264029;
0;0;0;0;0.16046301;0.54062498;      };
     };
     float_Data @[2] {
      name="Output";
      col_flags=SAVE_DATA|AUTO_WIDTH;
      is_matrix=1;
      cell_geom{ 1;1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [2] ;;      };
      width=6;
      matrix_col_width=10;
      ar {
       name="ar";
      [1 1 432] 0.037500001;0.0062500001;0.47999999;0.31874999;0.175;0.0381032;0.081249997;0.084178597;0.125;0.122683;
0.25;0.21950001;0.21250001;0.26028401;0.31874999;0.41332299;0.41874999;0.45442301;0.27500001;0.60144001;
0.1;0.69787198;0.72230399;0.80416697;0.059999999;0.22499999;0.2775;0.42750001;0.59875;0.72791702;
0.64708298;0.37666699;0.034285702;0.477083;0.086511903;0.67208302;0.118254;0.51458299;0.21364699;0.34916699;
0.289235;0.45625001;0.38722599;0.40625;0.43528301;0.18375;0.469414;0.092916697;0.584903;0.53851199;
0.696392;0.056249999;0.23125;0.54416698;0.54374999;0.47166699;0.36250001;0.36875001;0.0159881;0.31874999;
0.057428598;0.175;0.100052;0.15625;0.174448;0.0062500001;0.25428599;0.13124999;0.39240101;0.025;
0.374524;0.167083;0.58277398;0.16625001;0.522385;0.56129199;0.76421702;0.646806;0.53686899;0.00325709;
0.024975499;0.0076159998;0.045126099;0.11552;0.157083;0.128277;0.23083299;0.113726;0.2475;0.055382401;
0.23125;0.142335;0.38499999;0.056086;0.439583;0.226311;0.745;0.017285701;0.37275699;0.75125003;
0.0753849;0.583942;0.74458301;0.113757;0.67152297;0.6875;0.199917;0.63119698;0.71249998;0.30864701;
0.50573301;0.53750002;0.402504;0.216208;0.41874999;0.48428601;0.053508099;0.175;0.58866698;0.0254538;
0.050000001;0.68048501;0.0094344597;0.73873198;0.020300699;0.799119;0.00073143002;0.81166297;0.84447598;0.000987184;
0.0198205;0.077159397;0.31045201;0.11875;0.346908;0.32458299;0.227745;0.16249999;0.42704999;0.39375001;
0.56972402;0.56875002;0.69553697;0.714167;0.71768999;0.74124998;0.34425199;0.306667;0.23768701;0.235;
0.233923;0.25999999;0.0693492;0.120816;0.075000003;0.13071001;0.104935;0.090543702;0.102516;0.043749999;
0.177103;0.117951;0.081249997;0.145028;0.16703799;0.22499999;0.25410801;0.081023;0.087499999;0.225513;
0.0365468;0.37106401;0.0059923599;0.41369599;0.59665602;0.62128699;0.60345799;0.010759;0.053862799;0.172325;
0.1175;0.31628001;0.210417;0.26792401;0.377083;0.23383;0.29041699;0.215499;0.27708301;0.35462001;
0.41249999;0.34255701;0.36958301;0.25820699;0.41249999;0.43229401;0.53791702;0.41463399;0.51375002;0.034234099;
0.63485301;0.62458301;0.119295;0.62594402;0.55250001;0.159298;0.57217902;0.51375002;0.14013501;0.387321;
0.4325;0.224163;0.18148801;0.17208301;0.42973;0.076112904;0.121667;0.342233;0.0523532;0.0583333;
0.57728302;0.053940501;0.036666699;0.053940501;0.036666699;0.35908699;0.35908699;0.0294076;0.61133999;0.00257016;
0.64819199;0.59318;0.0034119501;0.0148304;0.056802299;0.049732201;0.0058333301;0.154966;0.194583;0.088470101;
0.0466667;0.109879;0.1125;0.122832;0.0175;0.232556;0.198333;0.232556;0.198333;0.26313999;
0.29458299;0.61074603;0.54041702;0.44829899;0.46625;0.3328;0.36250001;0.0082619097;0.220368;0.29416701;
0.1402;0.120875;0.087499999;0.25564301;0.105662;0.0125;0.238978;0.0609494;0.064583302;0.0609494;
0.064583302;0.34051099;0.34051099;0.34051099;0.058621202;0.018333299;0.478241;0.059020501;0.018750001;0.47511199;
0.0104032;0.54825002;0.51288497;0.51288497;0.82895601;0.65547901;0.621876;0.0031767399;0.034352198;0.021872999;
0.087083302;0.0143789;0.22875001;0.43151799;0.224583;0.48634601;0.412083;0.48634601;0.412083;0.52972698;
0.69041699;0.448953;0.72624999;0.34930301;0.67583299;0.0282738;0.42176801;0.71499997;0.125889;0.249042;
0.54374999;0.16150001;0.37675601;0.72125;0.177604;0.35325199;0.46708301;0.240484;0.27053899;0.55000001;
0.40272599;0.193239;0.41125;0.426263;0.031701501;0.175;0.51577002;0.068891898;0.13124999;0.28997201;
0.040191699;0.0066666701;0.633057;0.040191699;0.0066666701;0.633057;0.0215574;0.77056098;0.00160508;0.601726;
0.81072402;0.00525027;0.0405569;0.097763203;0.101667;0.202627;0.31435499;0.015;0.33909199;0.22375;
0.372199;0.224167;0.372199;0.224167;0.401667;0.29767001;0.60500002;0.56025702;0.72000003;0.0150476;
0.70492399;0.77083302;0.082242101;0.76179898;0.75166702;0.105087;0.70947599;0.68916702;0.176944;0.59279001;
0.745;0.237571;0.51431799;0.58749998;0.37063101;0.29859301;0.44999999;0.46558899;0.027143201;0.18125001;
0.571639;0.0146453;0.018750001;0.66851598;0.00942731;0.69787699;0.00942731;0.69787699;0.0118248;0.78599298;
0.0016761899;0.81645501;0.805933;0.092083298;0.40000001;0.473333;0.473333;0.444583;0.124713;0.47666699;
0.30078101;0.49708301;0.30078101;0.49708301;0.488069;0.569583;0.113641;0.110833;0.017142899;0.0856575;
0.33208299;0.076444402;0.46208301;0.115627;0.210417;0.191944;0.229167;0.29381299;0.081249997;0.386944;
0.63125002;0.0142857;0.174031;0.46875;0.0142857;0.0260024;0.16875;0.0123209;0.0136779;0.0136779;
0.0158375;0.00644064;      };
     };
    };
    data_flags=SAVE_ROWS|AUTO_CALC;
    auto_load=NO_AUTO_LOAD;
    auto_load_file=;
    row_height=1;
    max_col_width=50;
    keygen 4 0=0;
    row_indexes {
     name="row_indexes";
    [432] 0;1;2;3;4;5;6;7;8;9;
10;11;12;13;14;15;16;17;18;19;
20;21;22;23;24;25;26;27;28;29;
30;31;32;33;34;35;36;37;38;39;
40;41;42;43;44;45;46;47;48;49;
50;51;52;53;54;55;56;57;58;59;
60;61;62;63;64;65;66;67;68;69;
70;71;72;73;74;75;76;77;78;79;
80;81;82;83;84;85;86;87;88;89;
90;91;92;93;94;95;96;97;98;99;
100;101;102;103;104;105;106;107;108;109;
110;111;112;113;114;115;116;117;118;119;
120;121;122;123;124;125;126;127;128;129;
130;131;132;133;134;135;136;137;138;139;
140;141;142;143;144;145;146;147;148;149;
150;151;152;153;154;155;156;157;158;159;
160;161;162;163;164;165;166;167;168;169;
170;171;172;173;174;175;176;177;178;179;
180;181;182;183;184;185;186;187;188;189;
190;191;192;193;194;195;196;197;198;199;
200;201;202;203;204;205;206;207;208;209;
210;211;212;213;214;215;216;217;218;219;
220;221;222;223;224;225;226;227;228;229;
230;231;232;233;234;235;236;237;238;239;
240;241;242;243;244;245;246;247;248;249;
250;251;252;253;254;255;256;257;258;259;
260;261;262;263;264;265;266;267;268;269;
270;271;272;273;274;275;276;277;278;279;
280;281;282;283;284;285;286;287;288;289;
290;291;292;293;294;295;296;297;298;299;
300;301;302;303;304;305;306;307;308;309;
310;311;312;313;314;315;316;317;318;319;
320;321;322;323;324;325;326;327;328;329;
330;331;332;333;334;335;336;337;338;339;
340;341;342;343;344;345;346;347;348;349;
350;351;352;353;354;355;356;357;358;359;
360;361;362;363;364;365;366;367;368;369;
370;371;372;373;374;375;376;377;378;379;
380;381;382;383;384;385;386;387;388;389;
390;391;392;393;394;395;396;397;398;399;
400;401;402;403;404;405;406;407;408;409;
410;411;412;413;414;415;416;417;418;419;
420;421;422;423;424;425;426;427;428;429;
430;431;    };
    last_sort_spec {
     name="last_sort_spec";
     ops {
      name="ops";
      el_typ=DataSortEl;
      el_def=0;
     };
    };
    row_with_hilite=-1;
   };
   DataTable @[1] {
    name="testInput1";
    desc=;
    data {
     name="data";
     el_typ=String_Data;
     el_def=0;
     String_Data @[0] {
      name="Name";
      col_flags=SAVE_DATA|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
      ar {
       name="ar";
      [2826] "N126_20150101_003000_20150101_005000";"N126_20150101_010000_20150101_012000";"N126_20150101_013000_20150101_015000";"N126_20150101_020000_20150101_022000";"N126_20150101_023000_20150101_025000";"N126_20150101_030000_20150101_032000";"N126_20150101_033000_20150101_035000";"N126_20150101_040000_20150101_042000";"N126_20150101_043000_20150101_045000";"N126_20150101_050000_20150101_052000";
"N126_20150101_053000_20150101_055000";"N126_20150101_060000_20150101_062000";"N126_20150101_063000_20150101_065000";"N126_20150101_070000_20150101_072000";"N126_20150101_073000_20150101_075000";"N126_20150101_080000_20150101_082000";"N126_20150101_083000_20150101_085000";"N126_20150101_090000_20150101_092000";"N126_20150101_093000_20150101_095000";"N126_20150101_100000_20150101_102000";
"N126_20150101_103000_20150101_105000";"N126_20150101_113000_20150101_115000";"N126_20150101_120000_20150101_122000";"N126_20150101_123000_20150101_125000";"N126_20150101_130000_20150101_132000";"N126_20150101_133000_20150101_135000";"N126_20150101_140000_20150101_142000";"N126_20150101_143000_20150101_145000";"N126_20150101_150000_20150101_152000";"N126_20150101_153000_20150101_155000";
"N126_20150101_160000_20150101_162000";"N126_20150101_163000_20150101_165000";"N126_20150101_170000_20150101_172000";"N126_20150101_173000_20150101_175000";"N126_20150101_180000_20150101_182000";"N126_20150101_183000_20150101_185000";"N126_20150101_190000_20150101_192000";"N126_20150101_193000_20150101_195000";"N126_20150101_200000_20150101_202000";"N126_20150101_203000_20150101_205000";
"N126_20150101_210000_20150101_212000";"N126_20150101_213000_20150101_215000";"N126_20150101_220000_20150101_222000";"N126_20150101_223000_20150101_225000";"N126_20150101_233000_20150101_235000";"N126_20150102_000000_20150102_002000";"N126_20150102_003000_20150102_005000";"N126_20150102_010000_20150102_012000";"N126_20150102_013000_20150102_015000";"N126_20150102_020000_20150102_022000";
"N126_20150102_023000_20150102_025000";"N126_20150102_030000_20150102_032000";"N126_20150102_033000_20150102_035000";"N126_20150102_040000_20150102_042000";"N126_20150102_043000_20150102_045000";"N126_20150102_050000_20150102_052000";"N126_20150102_053000_20150102_055000";"N126_20150102_060000_20150102_062000";"N126_20150102_063000_20150102_065000";"N126_20150102_070000_20150102_072000";
"N126_20150102_073000_20150102_075000";"N126_20150102_080000_20150102_082000";"N126_20150102_083000_20150102_085000";"N126_20150102_090000_20150102_092000";"N126_20150102_093000_20150102_095000";"N126_20150102_100000_20150102_102000";"N126_20150102_103000_20150102_105000";"N126_20150102_113000_20150102_115000";"N126_20150102_120000_20150102_122000";"N126_20150102_123000_20150102_125000";
"N126_20150102_130000_20150102_132000";"N126_20150102_133000_20150102_135000";"N126_20150102_140000_20150102_142000";"N126_20150102_143000_20150102_145000";"N126_20150102_150000_20150102_152000";"N126_20150102_153000_20150102_155000";"N126_20150102_160000_20150102_162000";"N126_20150102_163000_20150102_165000";"N126_20150102_170000_20150102_172000";"N126_20150102_173000_20150102_175000";
"N126_20150102_180000_20150102_182000";"N126_20150102_183000_20150102_185000";"N126_20150102_190000_20150102_192000";"N126_20150102_193000_20150102_195000";"N126_20150102_200000_20150102_202000";"N126_20150102_203000_20150102_205000";"N126_20150102_210000_20150102_212000";"N126_20150102_213000_20150102_215000";"N126_20150102_220000_20150102_222000";"N126_20150102_223000_20150102_225000";
"N126_20150102_233000_20150102_235000";"N126_20150103_000000_20150103_002000";"N126_20150103_003000_20150103_005000";"N126_20150103_010000_20150103_012000";"N126_20150103_013000_20150103_015000";"N126_20150103_020000_20150103_022000";"N126_20150103_023000_20150103_025000";"N126_20150103_030000_20150103_032000";"N126_20150103_033000_20150103_035000";"N126_20150103_040000_20150103_042000";
"N126_20150103_043000_20150103_045000";"N126_20150103_050000_20150103_052000";"N126_20150103_053000_20150103_055000";"N126_20150103_060000_20150103_062000";"N126_20150103_063000_20150103_065000";"N126_20150103_070000_20150103_072000";"N126_20150103_073000_20150103_075000";"N126_20150103_080000_20150103_082000";"N126_20150103_083000_20150103_085000";"N126_20150103_090000_20150103_092000";
"N126_20150103_093000_20150103_095000";"N126_20150103_100000_20150103_102000";"N126_20150103_103000_20150103_105000";"N126_20150103_113000_20150103_115000";"N126_20150103_120000_20150103_122000";"N126_20150103_123000_20150103_125000";"N126_20150103_130000_20150103_132000";"N126_20150103_133000_20150103_135000";"N126_20150103_140000_20150103_142000";"N126_20150103_143000_20150103_145000";
"N126_20150103_150000_20150103_152000";"N126_20150103_153000_20150103_155000";"N126_20150103_160000_20150103_162000";"N126_20150103_163000_20150103_165000";"N126_20150103_170000_20150103_172000";"N126_20150103_173000_20150103_175000";"N126_20150103_180000_20150103_182000";"N126_20150103_183000_20150103_185000";"N126_20150103_190000_20150103_192000";"N126_20150103_193000_20150103_195000";
"N126_20150103_200000_20150103_202000";"N126_20150103_203000_20150103_205000";"N126_20150103_210000_20150103_212000";"N126_20150103_213000_20150103_215000";"N126_20150103_220000_20150103_222000";"N126_20150103_223000_20150103_225000";"N126_20150103_233000_20150103_235000";"N126_20150104_000000_20150104_002000";"N126_20150104_003000_20150104_005000";"N126_20150104_010000_20150104_012000";
"N126_20150104_013000_20150104_015000";"N126_20150104_020000_20150104_022000";"N126_20150104_023000_20150104_025000";"N126_20150104_030000_20150104_032000";"N126_20150104_033000_20150104_035000";"N126_20150104_040000_20150104_042000";"N126_20150104_043000_20150104_045000";"N126_20150104_050000_20150104_052000";"N126_20150104_053000_20150104_055000";"N126_20150104_060000_20150104_062000";
"N126_20150104_063000_20150104_065000";"N126_20150104_070000_20150104_072000";"N126_20150104_073000_20150104_075000";"N126_20150104_080000_20150104_082000";"N126_20150104_083000_20150104_085000";"N126_20150104_090000_20150104_092000";"N126_20150104_093000_20150104_095000";"N126_20150104_100000_20150104_102000";"N126_20150104_103000_20150104_105000";"N126_20150104_113000_20150104_115000";
"N126_20150104_120000_20150104_122000";"N126_20150104_123000_20150104_125000";"N126_20150104_130000_20150104_132000";"N126_20150104_133000_20150104_135000";"N126_20150104_140000_20150104_142000";"N126_20150104_143000_20150104_145000";"N126_20150104_150000_20150104_152000";"N126_20150104_153000_20150104_155000";"N126_20150104_160000_20150104_162000";"N126_20150104_163000_20150104_165000";
"N126_20150104_170000_20150104_172000";"N126_20150104_173000_20150104_175000";"N126_20150104_180000_20150104_182000";"N126_20150104_183000_20150104_185000";"N126_20150104_190000_20150104_192000";"N126_20150104_193000_20150104_195000";"N126_20150104_200000_20150104_202000";"N126_20150104_203000_20150104_205000";"N126_20150104_210000_20150104_212000";"N126_20150104_213000_20150104_215000";
"N126_20150104_220000_20150104_222000";"N126_20150104_223000_20150104_225000";"N126_20150104_233000_20150104_235000";"N126_20150105_000000_20150105_002000";"N126_20150105_003000_20150105_005000";"N126_20150105_010000_20150105_012000";"N126_20150105_013000_20150105_015000";"N126_20150105_020000_20150105_022000";"N126_20150105_023000_20150105_025000";"N126_20150105_030000_20150105_032000";
"N126_20150105_033000_20150105_035000";"N126_20150105_040000_20150105_042000";"N126_20150105_043000_20150105_045000";"N126_20150105_050000_20150105_052000";"N126_20150105_053000_20150105_055000";"N126_20150105_060000_20150105_062000";"N126_20150105_063000_20150105_065000";"N126_20150105_070000_20150105_072000";"N126_20150105_073000_20150105_075000";"N126_20150105_080000_20150105_082000";
"N126_20150105_083000_20150105_085000";"N126_20150105_090000_20150105_092000";"N126_20150105_093000_20150105_095000";"N126_20150105_100000_20150105_102000";"N126_20150105_103000_20150105_105000";"N126_20150105_113000_20150105_115000";"N126_20150105_120000_20150105_122000";"N126_20150105_123000_20150105_125000";"N126_20150105_130000_20150105_132000";"N126_20150105_133000_20150105_135000";
"N126_20150105_140000_20150105_142000";"N126_20150105_143000_20150105_145000";"N126_20150105_150000_20150105_152000";"N126_20150105_153000_20150105_155000";"N126_20150105_160000_20150105_162000";"N126_20150105_163000_20150105_165000";"N126_20150105_170000_20150105_172000";"N126_20150105_173000_20150105_175000";"N126_20150105_180000_20150105_182000";"N126_20150105_183000_20150105_185000";
"N126_20150105_190000_20150105_192000";"N126_20150105_193000_20150105_195000";"N126_20150105_200000_20150105_202000";"N126_20150105_203000_20150105_205000";"N126_20150105_210000_20150105_212000";"N126_20150105_213000_20150105_215000";"N126_20150105_220000_20150105_222000";"N126_20150105_223000_20150105_225000";"N126_20150105_233000_20150105_235000";"N126_20150106_000000_20150106_002000";
"N126_20150106_003000_20150106_005000";"N126_20150106_010000_20150106_012000";"N126_20150106_013000_20150106_015000";"N126_20150106_020000_20150106_022000";"N126_20150106_023000_20150106_025000";"N126_20150106_030000_20150106_032000";"N126_20150106_033000_20150106_035000";"N126_20150106_040000_20150106_042000";"N126_20150106_043000_20150106_045000";"N126_20150106_050000_20150106_052000";
"N126_20150106_053000_20150106_055000";"N126_20150106_060000_20150106_062000";"N126_20150106_063000_20150106_065000";"N126_20150106_070000_20150106_072000";"N126_20150106_073000_20150106_075000";"N126_20150106_080000_20150106_082000";"N126_20150106_083000_20150106_085000";"N126_20150106_090000_20150106_092000";"N126_20150106_093000_20150106_095000";"N126_20150106_100000_20150106_102000";
"N126_20150106_103000_20150106_105000";"N126_20150106_113000_20150106_115000";"N126_20150106_120000_20150106_122000";"N126_20150106_123000_20150106_125000";"N126_20150106_130000_20150106_132000";"N126_20150106_133000_20150106_135000";"N126_20150106_140000_20150106_142000";"N126_20150106_143000_20150106_145000";"N126_20150106_150000_20150106_152000";"N126_20150106_153000_20150106_155000";
"N126_20150106_160000_20150106_162000";"N126_20150106_170000_20150106_172000";"N126_20150106_173000_20150106_175000";"N126_20150106_180000_20150106_182000";"N126_20150106_183000_20150106_185000";"N126_20150106_190000_20150106_192000";"N126_20150106_193000_20150106_195000";"N126_20150106_200000_20150106_202000";"N126_20150106_203000_20150106_205000";"N126_20150106_210000_20150106_212000";
"N126_20150106_213000_20150106_215000";"N126_20150106_220000_20150106_222000";"N126_20150106_223000_20150106_225000";"N126_20150106_233000_20150106_235000";"N126_20150107_000000_20150107_002000";"N126_20150107_003000_20150107_005000";"N126_20150107_010000_20150107_012000";"N126_20150107_013000_20150107_015000";"N126_20150107_020000_20150107_022000";"N126_20150107_023000_20150107_025000";
"N126_20150107_030000_20150107_032000";"N126_20150107_033000_20150107_035000";"N126_20150107_040000_20150107_042000";"N126_20150107_043000_20150107_045000";"N126_20150107_050000_20150107_052000";"N126_20150107_053000_20150107_055000";"N126_20150107_060000_20150107_062000";"N126_20150107_063000_20150107_065000";"N126_20150107_070000_20150107_072000";"N126_20150107_073000_20150107_075000";
"N126_20150107_080000_20150107_082000";"N126_20150107_083000_20150107_085000";"N126_20150107_090000_20150107_092000";"N126_20150107_093000_20150107_095000";"N126_20150107_100000_20150107_102000";"N126_20150107_103000_20150107_105000";"N126_20150107_113000_20150107_115000";"N126_20150107_120000_20150107_122000";"N126_20150107_123000_20150107_125000";"N126_20150107_130000_20150107_132000";
"N126_20150107_133000_20150107_135000";"N126_20150107_140000_20150107_142000";"N126_20150107_143000_20150107_145000";"N126_20150107_150000_20150107_152000";"N126_20150107_153000_20150107_155000";"N126_20150107_160000_20150107_162000";"N126_20150107_163000_20150107_165000";"N126_20150107_170000_20150107_172000";"N126_20150107_173000_20150107_175000";"N126_20150107_180000_20150107_182000";
"N126_20150107_183000_20150107_185000";"N126_20150107_190000_20150107_192000";"N126_20150107_193000_20150107_195000";"N126_20150107_200000_20150107_202000";"N126_20150107_203000_20150107_205000";"N126_20150107_210000_20150107_212000";"N126_20150107_220000_20150107_222000";"N126_20150107_223000_20150107_225000";"N126_20150107_233000_20150107_235000";"N126_20150108_000000_20150108_002000";
"N126_20150108_003000_20150108_005000";"N126_20150108_010000_20150108_012000";"N126_20150108_013000_20150108_015000";"N126_20150108_020000_20150108_022000";"N126_20150108_023000_20150108_025000";"N126_20150108_030000_20150108_032000";"N126_20150108_033000_20150108_035000";"N126_20150108_040000_20150108_042000";"N126_20150108_043000_20150108_045000";"N126_20150108_050000_20150108_052000";
"N126_20150108_053000_20150108_055000";"N126_20150108_060000_20150108_062000";"N126_20150108_063000_20150108_065000";"N126_20150108_070000_20150108_072000";"N126_20150108_073000_20150108_075000";"N126_20150108_080000_20150108_082000";"N126_20150108_083000_20150108_085000";"N126_20150108_090000_20150108_092000";"N126_20150108_093000_20150108_095000";"N126_20150108_100000_20150108_102000";
"N126_20150108_103000_20150108_105000";"N126_20150108_113000_20150108_115000";"N126_20150108_120000_20150108_122000";"N126_20150108_123000_20150108_125000";"N126_20150108_130000_20150108_132000";"N126_20150108_133000_20150108_135000";"N126_20150108_140000_20150108_142000";"N126_20150108_143000_20150108_145000";"N126_20150108_150000_20150108_152000";"N126_20150108_153000_20150108_155000";
"N126_20150108_160000_20150108_162000";"N126_20150108_163000_20150108_165000";"N126_20150108_170000_20150108_172000";"N126_20150108_173000_20150108_175000";"N126_20150108_180000_20150108_182000";"N126_20150108_183000_20150108_185000";"N126_20150108_190000_20150108_192000";"N126_20150108_193000_20150108_195000";"N126_20150108_200000_20150108_202000";"N126_20150108_203000_20150108_205000";
"N126_20150108_210000_20150108_212000";"N126_20150108_213000_20150108_215000";"N126_20150108_220000_20150108_222000";"N126_20150108_223000_20150108_225000";"N126_20150108_233000_20150108_235000";"N126_20150109_000000_20150109_002000";"N126_20150109_003000_20150109_005000";"N126_20150109_010000_20150109_012000";"N126_20150109_013000_20150109_015000";"N126_20150109_020000_20150109_022000";
"N126_20150109_023000_20150109_025000";"N126_20150109_030000_20150109_032000";"N126_20150109_033000_20150109_035000";"N126_20150109_040000_20150109_042000";"N126_20150109_043000_20150109_045000";"N126_20150109_050000_20150109_052000";"N126_20150109_053000_20150109_055000";"N126_20150109_060000_20150109_062000";"N126_20150109_063000_20150109_065000";"N126_20150109_073000_20150109_075000";
"N126_20150109_080000_20150109_082000";"N126_20150109_083000_20150109_085000";"N126_20150109_090000_20150109_092000";"N126_20150109_093000_20150109_095000";"N126_20150109_100000_20150109_102000";"N126_20150109_103000_20150109_105000";"N126_20150109_113000_20150109_115000";"N126_20150109_120000_20150109_122000";"N126_20150109_123000_20150109_125000";"N126_20150109_130000_20150109_132000";
"N126_20150109_133000_20150109_135000";"N126_20150109_140000_20150109_142000";"N126_20150109_143000_20150109_145000";"N126_20150109_150000_20150109_152000";"N126_20150109_153000_20150109_155000";"N126_20150109_160000_20150109_162000";"N126_20150109_163000_20150109_165000";"N126_20150109_170000_20150109_172000";"N126_20150109_173000_20150109_175000";"N126_20150109_180000_20150109_182000";
"N126_20150109_183000_20150109_185000";"N126_20150109_190000_20150109_192000";"N126_20150109_193000_20150109_195000";"N126_20150109_200000_20150109_202000";"N126_20150109_203000_20150109_205000";"N126_20150109_210000_20150109_212000";"N126_20150109_213000_20150109_215000";"N126_20150109_220000_20150109_222000";"N126_20150109_223000_20150109_225000";"N126_20150109_233000_20150109_235000";
"N126_20150110_000000_20150110_002000";"N126_20150110_003000_20150110_005000";"N126_20150110_010000_20150110_012000";"N126_20150110_013000_20150110_015000";"N126_20150110_020000_20150110_022000";"N126_20150110_023000_20150110_025000";"N126_20150110_030000_20150110_032000";"N126_20150110_033000_20150110_035000";"N126_20150110_040000_20150110_042000";"N126_20150110_043000_20150110_045000";
"N126_20150110_050000_20150110_052000";"N126_20150110_053000_20150110_055000";"N126_20150110_060000_20150110_062000";"N126_20150110_063000_20150110_065000";"N126_20150110_070000_20150110_072000";"N126_20150110_073000_20150110_075000";"N126_20150110_080000_20150110_082000";"N126_20150110_083000_20150110_085000";"N126_20150110_090000_20150110_092000";"N126_20150110_093000_20150110_095000";
"N126_20150110_100000_20150110_102000";"N126_20150110_103000_20150110_105000";"N126_20150110_113000_20150110_115000";"N126_20150110_120000_20150110_122000";"N126_20150110_123000_20150110_125000";"N126_20150110_130000_20150110_132000";"N126_20150110_133000_20150110_135000";"N126_20150110_140000_20150110_142000";"N126_20150110_143000_20150110_145000";"N126_20150110_150000_20150110_152000";
"N126_20150110_153000_20150110_155000";"N126_20150110_160000_20150110_162000";"N126_20150110_163000_20150110_165000";"N126_20150110_170000_20150110_172000";"N126_20150110_173000_20150110_175000";"N126_20150110_180000_20150110_182000";"N126_20150110_183000_20150110_185000";"N126_20150110_190000_20150110_192000";"N126_20150110_193000_20150110_195000";"N126_20150110_200000_20150110_202000";
"N126_20150110_203000_20150110_205000";"N126_20150110_210000_20150110_212000";"N126_20150110_213000_20150110_215000";"N126_20150110_220000_20150110_222000";"N126_20150110_223000_20150110_225000";"N126_20150110_233000_20150110_235000";"N126_20150111_000000_20150111_002000";"N126_20150111_003000_20150111_005000";"N126_20150111_010000_20150111_012000";"N126_20150111_013000_20150111_015000";
"N126_20150111_020000_20150111_022000";"N126_20150111_023000_20150111_025000";"N126_20150111_030000_20150111_032000";"N126_20150111_033000_20150111_035000";"N126_20150111_040000_20150111_042000";"N126_20150111_043000_20150111_045000";"N126_20150111_050000_20150111_052000";"N126_20150111_053000_20150111_055000";"N126_20150111_060000_20150111_062000";"N126_20150111_063000_20150111_065000";
"N126_20150111_070000_20150111_072000";"N126_20150111_073000_20150111_075000";"N126_20150111_080000_20150111_082000";"N126_20150111_083000_20150111_085000";"N126_20150111_090000_20150111_092000";"N126_20150111_093000_20150111_095000";"N126_20150111_100000_20150111_102000";"N126_20150111_103000_20150111_105000";"N126_20150111_113000_20150111_115000";"N126_20150111_120000_20150111_122000";
"N126_20150111_123000_20150111_125000";"N126_20150111_130000_20150111_132000";"N126_20150111_133000_20150111_135000";"N126_20150111_140000_20150111_142000";"N126_20150111_143000_20150111_145000";"N126_20150111_150000_20150111_152000";"N126_20150111_153000_20150111_155000";"N126_20150111_160000_20150111_162000";"N126_20150111_163000_20150111_165000";"N126_20150111_170000_20150111_172000";
"N126_20150111_173000_20150111_175000";"N126_20150111_180000_20150111_182000";"N126_20150111_183000_20150111_185000";"N126_20150111_190000_20150111_192000";"N126_20150111_193000_20150111_195000";"N126_20150111_200000_20150111_202000";"N126_20150111_203000_20150111_205000";"N126_20150111_210000_20150111_212000";"N126_20150111_213000_20150111_215000";"N126_20150111_220000_20150111_222000";
"N126_20150111_223000_20150111_225000";"N126_20150111_233000_20150111_235000";"N126_20150112_000000_20150112_002000";"N126_20150112_003000_20150112_005000";"N126_20150112_010000_20150112_012000";"N126_20150112_013000_20150112_015000";"N126_20150112_020000_20150112_022000";"N126_20150112_023000_20150112_025000";"N126_20150112_030000_20150112_032000";"N126_20150112_033000_20150112_035000";
"N126_20150112_040000_20150112_042000";"N126_20150112_043000_20150112_045000";"N126_20150112_050000_20150112_052000";"N126_20150112_053000_20150112_055000";"N126_20150112_060000_20150112_062000";"N126_20150112_063000_20150112_065000";"N126_20150112_070000_20150112_072000";"N126_20150112_073000_20150112_075000";"N126_20150112_080000_20150112_082000";"N126_20150112_083000_20150112_085000";
"N126_20150112_090000_20150112_092000";"N126_20150112_093000_20150112_095000";"N126_20150112_100000_20150112_102000";"N126_20150112_103000_20150112_105000";"N126_20150112_113000_20150112_115000";"N126_20150112_120000_20150112_122000";"N126_20150112_123000_20150112_125000";"N126_20150112_130000_20150112_132000";"N126_20150112_133000_20150112_135000";"N126_20150112_140000_20150112_142000";
"N126_20150112_143000_20150112_145000";"N126_20150112_150000_20150112_152000";"N126_20150112_153000_20150112_155000";"N126_20150112_160000_20150112_162000";"N126_20150112_163000_20150112_165000";"N126_20150112_170000_20150112_172000";"N126_20150112_173000_20150112_175000";"N126_20150112_180000_20150112_182000";"N126_20150112_183000_20150112_185000";"N126_20150112_190000_20150112_192000";
"N126_20150112_193000_20150112_195000";"N126_20150112_200000_20150112_202000";"N126_20150112_203000_20150112_205000";"N126_20150112_210000_20150112_212000";"N126_20150112_213000_20150112_215000";"N126_20150112_220000_20150112_222000";"N126_20150112_223000_20150112_225000";"N126_20150112_233000_20150112_235000";"N126_20150113_000000_20150113_002000";"N126_20150113_003000_20150113_005000";
"N126_20150113_010000_20150113_012000";"N126_20150113_013000_20150113_015000";"N126_20150113_020000_20150113_022000";"N126_20150113_023000_20150113_025000";"N126_20150113_030000_20150113_032000";"N126_20150113_033000_20150113_035000";"N126_20150113_040000_20150113_042000";"N126_20150113_043000_20150113_045000";"N126_20150113_050000_20150113_052000";"N126_20150113_053000_20150113_055000";
"N126_20150113_060000_20150113_062000";"N126_20150113_063000_20150113_065000";"N126_20150113_070000_20150113_072000";"N126_20150113_073000_20150113_075000";"N126_20150113_080000_20150113_082000";"N126_20150113_083000_20150113_085000";"N126_20150113_090000_20150113_092000";"N126_20150113_093000_20150113_095000";"N126_20150113_100000_20150113_102000";"N126_20150113_103000_20150113_105000";
"N126_20150113_113000_20150113_115000";"N126_20150113_120000_20150113_122000";"N126_20150113_123000_20150113_125000";"N126_20150113_130000_20150113_132000";"N126_20150113_133000_20150113_135000";"N126_20150113_140000_20150113_142000";"N126_20150113_143000_20150113_145000";"N126_20150113_150000_20150113_152000";"N126_20150113_153000_20150113_155000";"N126_20150113_160000_20150113_162000";
"N126_20150113_163000_20150113_165000";"N126_20150113_170000_20150113_172000";"N126_20150113_173000_20150113_175000";"N126_20150113_180000_20150113_182000";"N126_20150113_183000_20150113_185000";"N126_20150113_190000_20150113_192000";"N126_20150113_193000_20150113_195000";"N126_20150113_200000_20150113_202000";"N126_20150113_203000_20150113_205000";"N126_20150113_210000_20150113_212000";
"N126_20150113_213000_20150113_215000";"N126_20150113_220000_20150113_222000";"N126_20150113_223000_20150113_225000";"N126_20150113_233000_20150113_235000";"N126_20150114_000000_20150114_002000";"N126_20150114_003000_20150114_005000";"N126_20150114_010000_20150114_012000";"N126_20150114_013000_20150114_015000";"N126_20150114_020000_20150114_022000";"N126_20150114_023000_20150114_025000";
"N126_20150114_030000_20150114_032000";"N126_20150114_033000_20150114_035000";"N126_20150114_040000_20150114_042000";"N126_20150114_043000_20150114_045000";"N126_20150114_050000_20150114_052000";"N126_20150114_053000_20150114_055000";"N126_20150114_060000_20150114_062000";"N126_20150114_063000_20150114_065000";"N126_20150114_070000_20150114_072000";"N126_20150114_073000_20150114_075000";
"N126_20150114_080000_20150114_082000";"N126_20150114_083000_20150114_085000";"N126_20150114_090000_20150114_092000";"N126_20150114_093000_20150114_095000";"N126_20150114_100000_20150114_102000";"N126_20150114_103000_20150114_105000";"N126_20150114_113000_20150114_115000";"N126_20150114_120000_20150114_122000";"N126_20150114_123000_20150114_125000";"N126_20150114_130000_20150114_132000";
"N126_20150114_133000_20150114_135000";"N126_20150114_140000_20150114_142000";"N126_20150114_143000_20150114_145000";"N126_20150114_150000_20150114_152000";"N126_20150114_153000_20150114_155000";"N126_20150114_160000_20150114_162000";"N126_20150114_163000_20150114_165000";"N126_20150114_170000_20150114_172000";"N126_20150114_173000_20150114_175000";"N126_20150114_180000_20150114_182000";
"N126_20150114_183000_20150114_185000";"N126_20150114_190000_20150114_192000";"N126_20150114_193000_20150114_195000";"N126_20150114_200000_20150114_202000";"N126_20150114_203000_20150114_205000";"N126_20150114_210000_20150114_212000";"N126_20150114_213000_20150114_215000";"N126_20150114_223000_20150114_225000";"N126_20150114_233000_20150114_235000";"N126_20150115_000000_20150115_002000";
"N126_20150115_003000_20150115_005000";"N126_20150115_013000_20150115_015000";"N126_20150115_020000_20150115_022000";"N126_20150115_023000_20150115_025000";"N126_20150115_030000_20150115_032000";"N126_20150115_033000_20150115_035000";"N126_20150115_040000_20150115_042000";"N126_20150115_043000_20150115_045000";"N126_20150115_050000_20150115_052000";"N126_20150115_053000_20150115_055000";
"N126_20150115_060000_20150115_062000";"N126_20150115_063000_20150115_065000";"N126_20150115_070000_20150115_072000";"N126_20150115_073000_20150115_075000";"N126_20150115_080000_20150115_082000";"N126_20150115_083000_20150115_085000";"N126_20150115_090000_20150115_092000";"N126_20150115_093000_20150115_095000";"N126_20150115_100000_20150115_102000";"N126_20150115_103000_20150115_105000";
"N126_20150115_113000_20150115_115000";"N126_20150115_120000_20150115_122000";"N126_20150115_123000_20150115_125000";"N126_20150115_130000_20150115_132000";"N126_20150115_133000_20150115_135000";"N126_20150115_140000_20150115_142000";"N126_20150115_143000_20150115_145000";"N126_20150115_150000_20150115_152000";"N126_20150115_153000_20150115_155000";"N126_20150115_160000_20150115_162000";
"N126_20150115_163000_20150115_165000";"N126_20150115_170000_20150115_172000";"N126_20150115_173000_20150115_175000";"N126_20150115_180000_20150115_182000";"N126_20150115_183000_20150115_185000";"N126_20150115_190000_20150115_192000";"N126_20150115_193000_20150115_195000";"N126_20150115_200000_20150115_202000";"N126_20150115_203000_20150115_205000";"N126_20150115_210000_20150115_212000";
"N126_20150115_213000_20150115_215000";"N126_20150115_220000_20150115_222000";"N126_20150115_223000_20150115_225000";"N126_20150115_233000_20150115_235000";"N126_20150116_000000_20150116_002000";"N126_20150116_003000_20150116_005000";"N126_20150116_010000_20150116_012000";"N126_20150116_013000_20150116_015000";"N126_20150116_020000_20150116_022000";"N126_20150116_023000_20150116_025000";
"N126_20150116_030000_20150116_032000";"N126_20150116_033000_20150116_035000";"N126_20150116_040000_20150116_042000";"N126_20150116_043000_20150116_045000";"N126_20150116_050000_20150116_052000";"N126_20150116_053000_20150116_055000";"N126_20150116_060000_20150116_062000";"N126_20150116_063000_20150116_065000";"N126_20150116_070000_20150116_072000";"N126_20150116_073000_20150116_075000";
"N126_20150116_080000_20150116_082000";"N126_20150116_083000_20150116_085000";"N126_20150116_090000_20150116_092000";"N126_20150116_093000_20150116_095000";"N126_20150116_100000_20150116_102000";"N126_20150116_103000_20150116_105000";"N126_20150116_113000_20150116_115000";"N126_20150116_120000_20150116_122000";"N126_20150116_123000_20150116_125000";"N126_20150116_130000_20150116_132000";
"N126_20150116_133000_20150116_135000";"N126_20150116_140000_20150116_142000";"N126_20150116_150000_20150116_152000";"N126_20150116_160000_20150116_162000";"N126_20150116_163000_20150116_165000";"N126_20150116_170000_20150116_172000";"N126_20150116_173000_20150116_175000";"N126_20150116_180000_20150116_182000";"N126_20150116_183000_20150116_185000";"N126_20150116_190000_20150116_192000";
"N126_20150116_193000_20150116_195000";"N126_20150116_200000_20150116_202000";"N126_20150116_203000_20150116_205000";"N126_20150116_210000_20150116_212000";"N126_20150116_213000_20150116_215000";"N126_20150116_220000_20150116_222000";"N126_20150116_223000_20150116_225000";"N126_20150116_233000_20150116_235000";"N126_20150117_000000_20150117_002000";"N126_20150117_003000_20150117_005000";
"N126_20150117_010000_20150117_012000";"N126_20150117_013000_20150117_015000";"N126_20150117_020000_20150117_022000";"N126_20150117_023000_20150117_025000";"N126_20150117_030000_20150117_032000";"N126_20150117_033000_20150117_035000";"N126_20150117_040000_20150117_042000";"N126_20150117_043000_20150117_045000";"N126_20150117_050000_20150117_052000";"N126_20150117_053000_20150117_055000";
"N126_20150117_060000_20150117_062000";"N126_20150117_063000_20150117_065000";"N126_20150117_070000_20150117_072000";"N126_20150117_073000_20150117_075000";"N126_20150117_080000_20150117_082000";"N126_20150117_083000_20150117_085000";"N126_20150117_090000_20150117_092000";"N126_20150117_093000_20150117_095000";"N126_20150117_100000_20150117_102000";"N126_20150117_103000_20150117_105000";
"N126_20150117_113000_20150117_115000";"N126_20150117_120000_20150117_122000";"N126_20150117_123000_20150117_125000";"N126_20150117_130000_20150117_132000";"N126_20150117_133000_20150117_135000";"N126_20150117_140000_20150117_142000";"N126_20150117_143000_20150117_145000";"N126_20150117_150000_20150117_152000";"N126_20150117_153000_20150117_155000";"N126_20150117_160000_20150117_162000";
"N126_20150117_163000_20150117_165000";"N126_20150117_170000_20150117_172000";"N126_20150117_173000_20150117_175000";"N126_20150117_180000_20150117_182000";"N126_20150117_183000_20150117_185000";"N126_20150117_190000_20150117_192000";"N126_20150117_193000_20150117_195000";"N126_20150117_200000_20150117_202000";"N126_20150117_203000_20150117_205000";"N126_20150117_210000_20150117_212000";
"N126_20150117_213000_20150117_215000";"N126_20150117_220000_20150117_222000";"N126_20150117_223000_20150117_225000";"N126_20150117_233000_20150117_235000";"N126_20150118_000000_20150118_002000";"N126_20150118_003000_20150118_005000";"N126_20150118_010000_20150118_012000";"N126_20150118_013000_20150118_015000";"N126_20150118_020000_20150118_022000";"N126_20150118_023000_20150118_025000";
"N126_20150118_030000_20150118_032000";"N126_20150118_033000_20150118_035000";"N126_20150118_040000_20150118_042000";"N126_20150118_043000_20150118_045000";"N126_20150118_050000_20150118_052000";"N126_20150118_053000_20150118_055000";"N126_20150118_060000_20150118_062000";"N126_20150118_063000_20150118_065000";"N126_20150118_070000_20150118_072000";"N126_20150118_073000_20150118_075000";
"N126_20150118_080000_20150118_082000";"N126_20150118_083000_20150118_085000";"N126_20150118_090000_20150118_092000";"N126_20150118_093000_20150118_095000";"N126_20150118_100000_20150118_102000";"N126_20150118_103000_20150118_105000";"N126_20150118_113000_20150118_115000";"N126_20150118_120000_20150118_122000";"N126_20150118_123000_20150118_125000";"N126_20150118_130000_20150118_132000";
"N126_20150118_133000_20150118_135000";"N126_20150118_140000_20150118_142000";"N126_20150118_143000_20150118_145000";"N126_20150118_150000_20150118_152000";"N126_20150118_153000_20150118_155000";"N126_20150118_160000_20150118_162000";"N126_20150118_163000_20150118_165000";"N126_20150118_170000_20150118_172000";"N126_20150118_173000_20150118_175000";"N126_20150118_180000_20150118_182000";
"N126_20150118_183000_20150118_185000";"N126_20150118_190000_20150118_192000";"N126_20150118_193000_20150118_195000";"N126_20150118_200000_20150118_202000";"N126_20150118_203000_20150118_205000";"N126_20150118_210000_20150118_212000";"N126_20150118_213000_20150118_215000";"N126_20150118_220000_20150118_222000";"N126_20150118_223000_20150118_225000";"N126_20150118_233000_20150118_235000";
"N126_20150119_000000_20150119_002000";"N126_20150119_003000_20150119_005000";"N126_20150119_010000_20150119_012000";"N126_20150119_013000_20150119_015000";"N126_20150119_020000_20150119_022000";"N126_20150119_023000_20150119_025000";"N126_20150119_030000_20150119_032000";"N126_20150119_033000_20150119_035000";"N126_20150119_040000_20150119_042000";"N126_20150119_043000_20150119_045000";
"N126_20150119_050000_20150119_052000";"N126_20150119_053000_20150119_055000";"N126_20150119_060000_20150119_062000";"N126_20150119_063000_20150119_065000";"N126_20150119_070000_20150119_072000";"N126_20150119_073000_20150119_075000";"N126_20150119_080000_20150119_082000";"N126_20150119_083000_20150119_085000";"N126_20150119_090000_20150119_092000";"N126_20150119_093000_20150119_095000";
"N126_20150119_100000_20150119_102000";"N126_20150119_103000_20150119_105000";"N126_20150119_113000_20150119_115000";"N126_20150119_120000_20150119_122000";"N126_20150119_123000_20150119_125000";"N126_20150119_130000_20150119_132000";"N126_20150119_133000_20150119_135000";"N126_20150119_140000_20150119_142000";"N126_20150119_143000_20150119_145000";"N126_20150119_150000_20150119_152000";
"N126_20150119_153000_20150119_155000";"N126_20150119_160000_20150119_162000";"N126_20150119_163000_20150119_165000";"N126_20150119_170000_20150119_172000";"N126_20150119_173000_20150119_175000";"N126_20150119_180000_20150119_182000";"N126_20150119_183000_20150119_185000";"N126_20150119_190000_20150119_192000";"N126_20150119_193000_20150119_195000";"N126_20150119_200000_20150119_202000";
"N126_20150119_203000_20150119_205000";"N126_20150119_210000_20150119_212000";"N126_20150119_220000_20150119_222000";"N126_20150119_223000_20150119_225000";"N126_20150119_233000_20150119_235000";"N126_20150120_000000_20150120_002000";"N126_20150120_003000_20150120_005000";"N126_20150120_010000_20150120_012000";"N126_20150120_013000_20150120_015000";"N126_20150120_020000_20150120_022000";
"N126_20150120_023000_20150120_025000";"N126_20150120_030000_20150120_032000";"N126_20150120_033000_20150120_035000";"N126_20150120_040000_20150120_042000";"N126_20150120_043000_20150120_045000";"N126_20150120_050000_20150120_052000";"N126_20150120_053000_20150120_055000";"N126_20150120_060000_20150120_062000";"N126_20150120_063000_20150120_065000";"N126_20150120_070000_20150120_072000";
"N126_20150120_073000_20150120_075000";"N126_20150120_080000_20150120_082000";"N126_20150120_083000_20150120_085000";"N126_20150120_090000_20150120_092000";"N126_20150120_093000_20150120_095000";"N126_20150120_100000_20150120_102000";"N126_20150120_103000_20150120_105000";"N126_20150120_113000_20150120_115000";"N126_20150120_120000_20150120_122000";"N126_20150120_123000_20150120_125000";
"N126_20150120_130000_20150120_132000";"N126_20150120_133000_20150120_135000";"N126_20150120_140000_20150120_142000";"N126_20150120_143000_20150120_145000";"N126_20150120_150000_20150120_152000";"N126_20150120_153000_20150120_155000";"N126_20150120_160000_20150120_162000";"N126_20150120_163000_20150120_165000";"N126_20150120_170000_20150120_172000";"N126_20150120_173000_20150120_175000";
"N126_20150120_180000_20150120_182000";"N126_20150120_183000_20150120_185000";"N126_20150120_190000_20150120_192000";"N126_20150120_193000_20150120_195000";"N126_20150120_200000_20150120_202000";"N126_20150120_203000_20150120_205000";"N126_20150120_210000_20150120_212000";"N126_20150120_213000_20150120_215000";"N126_20150120_220000_20150120_222000";"N126_20150120_223000_20150120_225000";
"N126_20150120_233000_20150120_235000";"N126_20150121_000000_20150121_002000";"N126_20150121_003000_20150121_005000";"N126_20150121_010000_20150121_012000";"N126_20150121_013000_20150121_015000";"N126_20150121_020000_20150121_022000";"N126_20150121_023000_20150121_025000";"N126_20150121_030000_20150121_032000";"N126_20150121_033000_20150121_035000";"N126_20150121_040000_20150121_042000";
"N126_20150121_043000_20150121_045000";"N126_20150121_050000_20150121_052000";"N126_20150121_053000_20150121_055000";"N126_20150121_060000_20150121_062000";"N126_20150121_063000_20150121_065000";"N126_20150121_070000_20150121_072000";"N126_20150121_073000_20150121_075000";"N126_20150121_080000_20150121_082000";"N126_20150121_083000_20150121_085000";"N126_20150121_090000_20150121_092000";
"N126_20150121_093000_20150121_095000";"N126_20150121_100000_20150121_102000";"N126_20150121_103000_20150121_105000";"N126_20150121_113000_20150121_115000";"N126_20150121_120000_20150121_122000";"N126_20150121_123000_20150121_125000";"N126_20150121_130000_20150121_132000";"N126_20150121_133000_20150121_135000";"N126_20150121_140000_20150121_142000";"N126_20150121_143000_20150121_145000";
"N126_20150121_150000_20150121_152000";"N126_20150121_153000_20150121_155000";"N126_20150121_160000_20150121_162000";"N126_20150121_163000_20150121_165000";"N126_20150121_170000_20150121_172000";"N126_20150121_173000_20150121_175000";"N126_20150121_180000_20150121_182000";"N126_20150121_183000_20150121_185000";"N126_20150121_190000_20150121_192000";"N126_20150121_193000_20150121_195000";
"N126_20150121_200000_20150121_202000";"N126_20150121_203000_20150121_205000";"N126_20150121_210000_20150121_212000";"N126_20150121_213000_20150121_215000";"N126_20150121_220000_20150121_222000";"N126_20150121_223000_20150121_225000";"N126_20150121_233000_20150121_235000";"N126_20150122_000000_20150122_002000";"N126_20150122_003000_20150122_005000";"N126_20150122_010000_20150122_012000";
"N126_20150122_013000_20150122_015000";"N126_20150122_023000_20150122_025000";"N126_20150122_030000_20150122_032000";"N126_20150122_033000_20150122_035000";"N126_20150122_040000_20150122_042000";"N126_20150122_043000_20150122_045000";"N126_20150122_050000_20150122_052000";"N126_20150122_053000_20150122_055000";"N126_20150122_060000_20150122_062000";"N126_20150122_063000_20150122_065000";
"N126_20150122_070000_20150122_072000";"N126_20150122_073000_20150122_075000";"N126_20150122_080000_20150122_082000";"N126_20150122_083000_20150122_085000";"N126_20150122_090000_20150122_092000";"N126_20150122_093000_20150122_095000";"N126_20150122_100000_20150122_102000";"N126_20150122_103000_20150122_105000";"N126_20150122_113000_20150122_115000";"N126_20150122_120000_20150122_122000";
"N126_20150122_123000_20150122_125000";"N126_20150122_130000_20150122_132000";"N126_20150122_133000_20150122_135000";"N126_20150122_140000_20150122_142000";"N126_20150122_143000_20150122_145000";"N126_20150122_150000_20150122_152000";"N126_20150122_153000_20150122_155000";"N126_20150122_160000_20150122_162000";"N126_20150122_163000_20150122_165000";"N126_20150122_170000_20150122_172000";
"N126_20150122_173000_20150122_175000";"N126_20150122_180000_20150122_182000";"N126_20150122_183000_20150122_185000";"N126_20150122_190000_20150122_192000";"N126_20150122_193000_20150122_195000";"N126_20150122_200000_20150122_202000";"N126_20150122_203000_20150122_205000";"N126_20150122_210000_20150122_212000";"N126_20150122_213000_20150122_215000";"N126_20150122_220000_20150122_222000";
"N126_20150122_223000_20150122_225000";"N126_20150122_233000_20150122_235000";"N126_20150123_003000_20150123_005000";"N126_20150123_010000_20150123_012000";"N126_20150123_013000_20150123_015000";"N126_20150123_020000_20150123_022000";"N126_20150123_023000_20150123_025000";"N126_20150123_030000_20150123_032000";"N126_20150123_033000_20150123_035000";"N126_20150123_040000_20150123_042000";
"N126_20150123_043000_20150123_045000";"N126_20150123_050000_20150123_052000";"N126_20150123_053000_20150123_055000";"N126_20150123_060000_20150123_062000";"N126_20150123_063000_20150123_065000";"N126_20150123_070000_20150123_072000";"N126_20150123_073000_20150123_075000";"N126_20150123_080000_20150123_082000";"N126_20150123_083000_20150123_085000";"N126_20150123_090000_20150123_092000";
"N126_20150123_093000_20150123_095000";"N126_20150123_100000_20150123_102000";"N126_20150123_103000_20150123_105000";"N126_20150123_113000_20150123_115000";"N126_20150123_120000_20150123_122000";"N126_20150123_123000_20150123_125000";"N126_20150123_130000_20150123_132000";"N126_20150123_133000_20150123_135000";"N126_20150123_140000_20150123_142000";"N126_20150123_143000_20150123_145000";
"N126_20150123_150000_20150123_152000";"N126_20150123_153000_20150123_155000";"N126_20150123_160000_20150123_162000";"N126_20150123_163000_20150123_165000";"N126_20150123_170000_20150123_172000";"N126_20150123_173000_20150123_175000";"N126_20150123_180000_20150123_182000";"N126_20150123_183000_20150123_185000";"N126_20150123_190000_20150123_192000";"N126_20150123_193000_20150123_195000";
"N126_20150123_200000_20150123_202000";"N126_20150123_203000_20150123_205000";"N126_20150123_210000_20150123_212000";"N126_20150123_213000_20150123_215000";"N126_20150123_220000_20150123_222000";"N126_20150123_223000_20150123_225000";"N126_20150123_233000_20150123_235000";"N126_20150124_000000_20150124_002000";"N126_20150124_003000_20150124_005000";"N126_20150124_010000_20150124_012000";
"N126_20150124_013000_20150124_015000";"N126_20150124_020000_20150124_022000";"N126_20150124_023000_20150124_025000";"N126_20150124_030000_20150124_032000";"N126_20150124_033000_20150124_035000";"N126_20150124_040000_20150124_042000";"N126_20150124_043000_20150124_045000";"N126_20150124_050000_20150124_052000";"N126_20150124_053000_20150124_055000";"N126_20150124_060000_20150124_062000";
"N126_20150124_063000_20150124_065000";"N126_20150124_070000_20150124_072000";"N126_20150124_073000_20150124_075000";"N126_20150124_080000_20150124_082000";"N126_20150124_083000_20150124_085000";"N126_20150124_090000_20150124_092000";"N126_20150124_093000_20150124_095000";"N126_20150124_100000_20150124_102000";"N126_20150124_103000_20150124_105000";"N126_20150124_113000_20150124_115000";
"N126_20150124_120000_20150124_122000";"N126_20150124_123000_20150124_125000";"N126_20150124_130000_20150124_132000";"N126_20150124_133000_20150124_135000";"N126_20150124_140000_20150124_142000";"N126_20150124_143000_20150124_145000";"N126_20150124_150000_20150124_152000";"N126_20150124_153000_20150124_155000";"N126_20150124_160000_20150124_162000";"N126_20150124_163000_20150124_165000";
"N126_20150124_170000_20150124_172000";"N126_20150124_173000_20150124_175000";"N126_20150124_180000_20150124_182000";"N126_20150124_183000_20150124_185000";"N126_20150124_190000_20150124_192000";"N126_20150124_193000_20150124_195000";"N126_20150124_200000_20150124_202000";"N126_20150124_203000_20150124_205000";"N126_20150124_210000_20150124_212000";"N126_20150124_213000_20150124_215000";
"N126_20150124_220000_20150124_222000";"N126_20150124_223000_20150124_225000";"N126_20150124_233000_20150124_235000";"N126_20150125_000000_20150125_002000";"N126_20150125_003000_20150125_005000";"N126_20150125_010000_20150125_012000";"N126_20150125_013000_20150125_015000";"N126_20150125_020000_20150125_022000";"N126_20150125_023000_20150125_025000";"N126_20150125_030000_20150125_032000";
"N126_20150125_033000_20150125_035000";"N126_20150125_040000_20150125_042000";"N126_20150125_043000_20150125_045000";"N126_20150125_050000_20150125_052000";"N126_20150125_053000_20150125_055000";"N126_20150125_060000_20150125_062000";"N126_20150125_063000_20150125_065000";"N126_20150125_070000_20150125_072000";"N126_20150125_073000_20150125_075000";"N126_20150125_080000_20150125_082000";
"N126_20150125_083000_20150125_085000";"N126_20150125_090000_20150125_092000";"N126_20150125_093000_20150125_095000";"N126_20150125_100000_20150125_102000";"N126_20150125_103000_20150125_105000";"N126_20150125_113000_20150125_115000";"N126_20150125_120000_20150125_122000";"N126_20150125_123000_20150125_125000";"N126_20150125_130000_20150125_132000";"N126_20150125_133000_20150125_135000";
"N126_20150125_140000_20150125_142000";"N126_20150125_143000_20150125_145000";"N126_20150125_150000_20150125_152000";"N126_20150125_153000_20150125_155000";"N126_20150125_160000_20150125_162000";"N126_20150125_163000_20150125_165000";"N126_20150125_170000_20150125_172000";"N126_20150125_173000_20150125_175000";"N126_20150125_180000_20150125_182000";"N126_20150125_183000_20150125_185000";
"N126_20150125_190000_20150125_192000";"N126_20150125_193000_20150125_195000";"N126_20150125_200000_20150125_202000";"N126_20150125_203000_20150125_205000";"N126_20150125_210000_20150125_212000";"N126_20150125_213000_20150125_215000";"N126_20150125_220000_20150125_222000";"N126_20150125_223000_20150125_225000";"N126_20150125_233000_20150125_235000";"N126_20150126_000000_20150126_002000";
"N126_20150126_003000_20150126_005000";"N126_20150126_010000_20150126_012000";"N126_20150126_013000_20150126_015000";"N126_20150126_020000_20150126_022000";"N126_20150126_023000_20150126_025000";"N126_20150126_030000_20150126_032000";"N126_20150126_033000_20150126_035000";"N126_20150126_040000_20150126_042000";"N126_20150126_043000_20150126_045000";"N126_20150126_050000_20150126_052000";
"N126_20150126_053000_20150126_055000";"N126_20150126_060000_20150126_062000";"N126_20150126_063000_20150126_065000";"N126_20150126_070000_20150126_072000";"N126_20150126_073000_20150126_075000";"N126_20150126_080000_20150126_082000";"N126_20150126_083000_20150126_085000";"N126_20150126_090000_20150126_092000";"N126_20150126_093000_20150126_095000";"N126_20150126_100000_20150126_102000";
"N126_20150126_103000_20150126_105000";"N126_20150126_113000_20150126_115000";"N126_20150126_120000_20150126_122000";"N126_20150126_123000_20150126_125000";"N126_20150126_130000_20150126_132000";"N126_20150126_133000_20150126_135000";"N126_20150126_140000_20150126_142000";"N126_20150126_143000_20150126_145000";"N126_20150126_150000_20150126_152000";"N126_20150126_153000_20150126_155000";
"N126_20150126_160000_20150126_162000";"N126_20150126_163000_20150126_165000";"N126_20150126_170000_20150126_172000";"N126_20150126_173000_20150126_175000";"N126_20150126_180000_20150126_182000";"N126_20150126_183000_20150126_185000";"N126_20150126_190000_20150126_192000";"N126_20150126_193000_20150126_195000";"N126_20150126_200000_20150126_202000";"N126_20150126_203000_20150126_205000";
"N126_20150126_210000_20150126_212000";"N126_20150126_213000_20150126_215000";"N126_20150126_220000_20150126_222000";"N126_20150126_223000_20150126_225000";"N126_20150126_233000_20150126_235000";"N126_20150127_000000_20150127_002000";"N126_20150127_003000_20150127_005000";"N126_20150127_010000_20150127_012000";"N126_20150127_013000_20150127_015000";"N126_20150127_020000_20150127_022000";
"N126_20150127_023000_20150127_025000";"N126_20150127_030000_20150127_032000";"N126_20150127_033000_20150127_035000";"N126_20150127_040000_20150127_042000";"N126_20150127_043000_20150127_045000";"N126_20150127_050000_20150127_052000";"N126_20150127_053000_20150127_055000";"N126_20150127_060000_20150127_062000";"N126_20150127_063000_20150127_065000";"N126_20150127_070000_20150127_072000";
"N126_20150127_073000_20150127_075000";"N126_20150127_080000_20150127_082000";"N126_20150127_083000_20150127_085000";"N126_20150127_090000_20150127_092000";"N126_20150127_093000_20150127_095000";"N126_20150127_100000_20150127_102000";"N126_20150127_103000_20150127_105000";"N126_20150127_113000_20150127_115000";"N126_20150127_120000_20150127_122000";"N126_20150127_123000_20150127_125000";
"N126_20150127_130000_20150127_132000";"N126_20150127_133000_20150127_135000";"N126_20150127_140000_20150127_142000";"N126_20150127_143000_20150127_145000";"N126_20150127_150000_20150127_152000";"N126_20150127_153000_20150127_155000";"N126_20150127_160000_20150127_162000";"N126_20150127_163000_20150127_165000";"N126_20150127_170000_20150127_172000";"N126_20150127_173000_20150127_175000";
"N126_20150127_180000_20150127_182000";"N126_20150127_183000_20150127_185000";"N126_20150127_190000_20150127_192000";"N126_20150127_193000_20150127_195000";"N126_20150127_200000_20150127_202000";"N126_20150127_203000_20150127_205000";"N126_20150127_210000_20150127_212000";"N126_20150127_213000_20150127_215000";"N126_20150127_220000_20150127_222000";"N126_20150127_223000_20150127_225000";
"N126_20150127_233000_20150127_235000";"N126_20150128_000000_20150128_002000";"N126_20150128_010000_20150128_012000";"N126_20150128_013000_20150128_015000";"N126_20150128_020000_20150128_022000";"N126_20150128_023000_20150128_025000";"N126_20150128_030000_20150128_032000";"N126_20150128_033000_20150128_035000";"N126_20150128_040000_20150128_042000";"N126_20150128_043000_20150128_045000";
"N126_20150128_050000_20150128_052000";"N126_20150128_053000_20150128_055000";"N126_20150128_060000_20150128_062000";"N126_20150128_063000_20150128_065000";"N126_20150128_070000_20150128_072000";"N126_20150128_073000_20150128_075000";"N126_20150128_080000_20150128_082000";"N126_20150128_083000_20150128_085000";"N126_20150128_090000_20150128_092000";"N126_20150128_093000_20150128_095000";
"N126_20150128_100000_20150128_102000";"N126_20150128_103000_20150128_105000";"N126_20150128_113000_20150128_115000";"N126_20150128_120000_20150128_122000";"N126_20150128_123000_20150128_125000";"N126_20150128_130000_20150128_132000";"N126_20150128_133000_20150128_135000";"N126_20150128_140000_20150128_142000";"N126_20150128_143000_20150128_145000";"N126_20150128_150000_20150128_152000";
"N126_20150128_153000_20150128_155000";"N126_20150128_160000_20150128_162000";"N126_20150128_163000_20150128_165000";"N126_20150128_170000_20150128_172000";"N126_20150128_173000_20150128_175000";"N126_20150128_180000_20150128_182000";"N126_20150128_183000_20150128_185000";"N126_20150128_190000_20150128_192000";"N126_20150128_193000_20150128_195000";"N126_20150128_200000_20150128_202000";
"N126_20150128_203000_20150128_205000";"N126_20150128_210000_20150128_212000";"N126_20150128_213000_20150128_215000";"N126_20150128_220000_20150128_222000";"N126_20150128_223000_20150128_225000";"N126_20150128_233000_20150128_235000";"N126_20150129_000000_20150129_002000";"N126_20150129_003000_20150129_005000";"N126_20150129_010000_20150129_012000";"N126_20150129_013000_20150129_015000";
"N126_20150129_020000_20150129_022000";"N126_20150129_023000_20150129_025000";"N126_20150129_030000_20150129_032000";"N126_20150129_033000_20150129_035000";"N126_20150129_040000_20150129_042000";"N126_20150129_043000_20150129_045000";"N126_20150129_050000_20150129_052000";"N126_20150129_053000_20150129_055000";"N126_20150129_060000_20150129_062000";"N126_20150129_063000_20150129_065000";
"N126_20150129_070000_20150129_072000";"N126_20150129_073000_20150129_075000";"N126_20150129_080000_20150129_082000";"N126_20150129_083000_20150129_085000";"N126_20150129_090000_20150129_092000";"N126_20150129_093000_20150129_095000";"N126_20150129_100000_20150129_102000";"N126_20150129_103000_20150129_105000";"N126_20150129_113000_20150129_115000";"N126_20150129_120000_20150129_122000";
"N126_20150129_123000_20150129_125000";"N126_20150129_130000_20150129_132000";"N126_20150129_133000_20150129_135000";"N126_20150129_140000_20150129_142000";"N126_20150129_143000_20150129_145000";"N126_20150129_150000_20150129_152000";"N126_20150129_153000_20150129_155000";"N126_20150129_160000_20150129_162000";"N126_20150129_163000_20150129_165000";"N126_20150129_170000_20150129_172000";
"N126_20150129_173000_20150129_175000";"N126_20150129_180000_20150129_182000";"N126_20150129_183000_20150129_185000";"N126_20150129_190000_20150129_192000";"N126_20150129_193000_20150129_195000";"N126_20150129_200000_20150129_202000";"N126_20150129_203000_20150129_205000";"N126_20150129_210000_20150129_212000";"N126_20150129_213000_20150129_215000";"N126_20150129_220000_20150129_222000";
"N126_20150129_223000_20150129_225000";"N126_20150129_233000_20150129_235000";"N126_20150130_000000_20150130_002000";"N126_20150130_003000_20150130_005000";"N126_20150130_010000_20150130_012000";"N126_20150130_013000_20150130_015000";"N126_20150130_020000_20150130_022000";"N126_20150130_023000_20150130_025000";"N126_20150130_030000_20150130_032000";"N126_20150130_033000_20150130_035000";
"N126_20150130_040000_20150130_042000";"N126_20150130_043000_20150130_045000";"N126_20150130_050000_20150130_052000";"N126_20150130_053000_20150130_055000";"N126_20150130_060000_20150130_062000";"N126_20150130_063000_20150130_065000";"N126_20150130_070000_20150130_072000";"N126_20150130_073000_20150130_075000";"N126_20150130_080000_20150130_082000";"N126_20150130_083000_20150130_085000";
"N126_20150130_090000_20150130_092000";"N126_20150130_093000_20150130_095000";"N126_20150130_100000_20150130_102000";"N126_20150130_103000_20150130_105000";"N126_20150130_113000_20150130_115000";"N126_20150130_120000_20150130_122000";"N126_20150130_123000_20150130_125000";"N126_20150130_130000_20150130_132000";"N126_20150130_133000_20150130_135000";"N126_20150130_140000_20150130_142000";
"N126_20150130_143000_20150130_145000";"N126_20150130_150000_20150130_152000";"N126_20150130_153000_20150130_155000";"N126_20150130_160000_20150130_162000";"N126_20150130_163000_20150130_165000";"N126_20150130_170000_20150130_172000";"N126_20150130_173000_20150130_175000";"N126_20150130_180000_20150130_182000";"N126_20150130_183000_20150130_185000";"N126_20150130_190000_20150130_192000";
"N126_20150130_193000_20150130_195000";"N126_20150130_200000_20150130_202000";"N126_20150130_203000_20150130_205000";"N126_20150130_210000_20150130_212000";"N126_20150130_213000_20150130_215000";"N126_20150130_220000_20150130_222000";"N126_20150130_223000_20150130_225000";"N126_20150130_233000_20150130_235000";"N126_20150131_000000_20150131_002000";"N126_20150131_003000_20150131_005000";
"N126_20150131_010000_20150131_012000";"N126_20150131_013000_20150131_015000";"N126_20150131_023000_20150131_025000";"N126_20150131_030000_20150131_032000";"N126_20150131_033000_20150131_035000";"N126_20150131_040000_20150131_042000";"N126_20150131_043000_20150131_045000";"N126_20150131_050000_20150131_052000";"N126_20150131_053000_20150131_055000";"N126_20150131_060000_20150131_062000";
"N126_20150131_063000_20150131_065000";"N126_20150131_070000_20150131_072000";"N126_20150131_073000_20150131_075000";"N126_20150131_080000_20150131_082000";"N126_20150131_083000_20150131_085000";"N126_20150131_090000_20150131_092000";"N126_20150131_093000_20150131_095000";"N126_20150131_100000_20150131_102000";"N126_20150131_103000_20150131_105000";"N126_20150131_113000_20150131_115000";
"N126_20150131_120000_20150131_122000";"N126_20150131_123000_20150131_125000";"N126_20150131_130000_20150131_132000";"N126_20150131_133000_20150131_135000";"N126_20150131_140000_20150131_142000";"N126_20150131_143000_20150131_145000";"N126_20150131_150000_20150131_152000";"N126_20150131_153000_20150131_155000";"N126_20150131_160000_20150131_162000";"N126_20150131_163000_20150131_165000";
"N126_20150131_170000_20150131_172000";"N126_20150131_173000_20150131_175000";"N126_20150131_180000_20150131_182000";"N126_20150131_183000_20150131_185000";"N126_20150131_190000_20150131_192000";"N126_20150131_193000_20150131_195000";"N126_20150131_200000_20150131_202000";"N126_20150131_203000_20150131_205000";"N126_20150131_210000_20150131_212000";"N126_20150131_213000_20150131_215000";
"N126_20150131_220000_20150131_222000";"N126_20150131_223000_20150131_225000";"N126_20150131_233000_20150131_235000";"N126_20150101_003000_20150101_005000";"N126_20150101_010000_20150101_012000";"N126_20150101_013000_20150101_015000";"N126_20150101_020000_20150101_022000";"N126_20150101_023000_20150101_025000";"N126_20150101_030000_20150101_032000";"N126_20150101_033000_20150101_035000";
"N126_20150101_040000_20150101_042000";"N126_20150101_043000_20150101_045000";"N126_20150101_050000_20150101_052000";"N126_20150101_053000_20150101_055000";"N126_20150101_060000_20150101_062000";"N126_20150101_063000_20150101_065000";"N126_20150101_070000_20150101_072000";"N126_20150101_073000_20150101_075000";"N126_20150101_080000_20150101_082000";"N126_20150101_083000_20150101_085000";
"N126_20150101_090000_20150101_092000";"N126_20150101_093000_20150101_095000";"N126_20150101_100000_20150101_102000";"N126_20150101_103000_20150101_105000";"N126_20150101_113000_20150101_115000";"N126_20150101_120000_20150101_122000";"N126_20150101_123000_20150101_125000";"N126_20150101_130000_20150101_132000";"N126_20150101_133000_20150101_135000";"N126_20150101_140000_20150101_142000";
"N126_20150101_143000_20150101_145000";"N126_20150101_150000_20150101_152000";"N126_20150101_153000_20150101_155000";"N126_20150101_160000_20150101_162000";"N126_20150101_163000_20150101_165000";"N126_20150101_170000_20150101_172000";"N126_20150101_173000_20150101_175000";"N126_20150101_180000_20150101_182000";"N126_20150101_183000_20150101_185000";"N126_20150101_190000_20150101_192000";
"N126_20150101_193000_20150101_195000";"N126_20150101_200000_20150101_202000";"N126_20150101_203000_20150101_205000";"N126_20150101_210000_20150101_212000";"N126_20150101_213000_20150101_215000";"N126_20150101_220000_20150101_222000";"N126_20150101_223000_20150101_225000";"N126_20150101_233000_20150101_235000";"N126_20150102_000000_20150102_002000";"N126_20150102_003000_20150102_005000";
"N126_20150102_010000_20150102_012000";"N126_20150102_013000_20150102_015000";"N126_20150102_020000_20150102_022000";"N126_20150102_023000_20150102_025000";"N126_20150102_030000_20150102_032000";"N126_20150102_033000_20150102_035000";"N126_20150102_040000_20150102_042000";"N126_20150102_043000_20150102_045000";"N126_20150102_050000_20150102_052000";"N126_20150102_053000_20150102_055000";
"N126_20150102_060000_20150102_062000";"N126_20150102_063000_20150102_065000";"N126_20150102_070000_20150102_072000";"N126_20150102_073000_20150102_075000";"N126_20150102_080000_20150102_082000";"N126_20150102_083000_20150102_085000";"N126_20150102_090000_20150102_092000";"N126_20150102_093000_20150102_095000";"N126_20150102_100000_20150102_102000";"N126_20150102_103000_20150102_105000";
"N126_20150102_113000_20150102_115000";"N126_20150102_120000_20150102_122000";"N126_20150102_123000_20150102_125000";"N126_20150102_130000_20150102_132000";"N126_20150102_133000_20150102_135000";"N126_20150102_140000_20150102_142000";"N126_20150102_143000_20150102_145000";"N126_20150102_150000_20150102_152000";"N126_20150102_153000_20150102_155000";"N126_20150102_160000_20150102_162000";
"N126_20150102_163000_20150102_165000";"N126_20150102_170000_20150102_172000";"N126_20150102_173000_20150102_175000";"N126_20150102_180000_20150102_182000";"N126_20150102_183000_20150102_185000";"N126_20150102_190000_20150102_192000";"N126_20150102_193000_20150102_195000";"N126_20150102_200000_20150102_202000";"N126_20150102_203000_20150102_205000";"N126_20150102_210000_20150102_212000";
"N126_20150102_213000_20150102_215000";"N126_20150102_220000_20150102_222000";"N126_20150102_223000_20150102_225000";"N126_20150102_233000_20150102_235000";"N126_20150103_000000_20150103_002000";"N126_20150103_003000_20150103_005000";"N126_20150103_010000_20150103_012000";"N126_20150103_013000_20150103_015000";"N126_20150103_020000_20150103_022000";"N126_20150103_023000_20150103_025000";
"N126_20150103_030000_20150103_032000";"N126_20150103_033000_20150103_035000";"N126_20150103_040000_20150103_042000";"N126_20150103_043000_20150103_045000";"N126_20150103_050000_20150103_052000";"N126_20150103_053000_20150103_055000";"N126_20150103_060000_20150103_062000";"N126_20150103_063000_20150103_065000";"N126_20150103_070000_20150103_072000";"N126_20150103_073000_20150103_075000";
"N126_20150103_080000_20150103_082000";"N126_20150103_083000_20150103_085000";"N126_20150103_090000_20150103_092000";"N126_20150103_093000_20150103_095000";"N126_20150103_100000_20150103_102000";"N126_20150103_103000_20150103_105000";"N126_20150103_113000_20150103_115000";"N126_20150103_120000_20150103_122000";"N126_20150103_123000_20150103_125000";"N126_20150103_130000_20150103_132000";
"N126_20150103_133000_20150103_135000";"N126_20150103_140000_20150103_142000";"N126_20150103_143000_20150103_145000";"N126_20150103_150000_20150103_152000";"N126_20150103_153000_20150103_155000";"N126_20150103_160000_20150103_162000";"N126_20150103_163000_20150103_165000";"N126_20150103_170000_20150103_172000";"N126_20150103_173000_20150103_175000";"N126_20150103_180000_20150103_182000";
"N126_20150103_183000_20150103_185000";"N126_20150103_190000_20150103_192000";"N126_20150103_193000_20150103_195000";"N126_20150103_200000_20150103_202000";"N126_20150103_203000_20150103_205000";"N126_20150103_210000_20150103_212000";"N126_20150103_213000_20150103_215000";"N126_20150103_220000_20150103_222000";"N126_20150103_223000_20150103_225000";"N126_20150103_233000_20150103_235000";
"N126_20150104_000000_20150104_002000";"N126_20150104_003000_20150104_005000";"N126_20150104_010000_20150104_012000";"N126_20150104_013000_20150104_015000";"N126_20150104_020000_20150104_022000";"N126_20150104_023000_20150104_025000";"N126_20150104_030000_20150104_032000";"N126_20150104_033000_20150104_035000";"N126_20150104_040000_20150104_042000";"N126_20150104_043000_20150104_045000";
"N126_20150104_050000_20150104_052000";"N126_20150104_053000_20150104_055000";"N126_20150104_060000_20150104_062000";"N126_20150104_063000_20150104_065000";"N126_20150104_070000_20150104_072000";"N126_20150104_073000_20150104_075000";"N126_20150104_080000_20150104_082000";"N126_20150104_083000_20150104_085000";"N126_20150104_090000_20150104_092000";"N126_20150104_093000_20150104_095000";
"N126_20150104_100000_20150104_102000";"N126_20150104_103000_20150104_105000";"N126_20150104_113000_20150104_115000";"N126_20150104_120000_20150104_122000";"N126_20150104_123000_20150104_125000";"N126_20150104_130000_20150104_132000";"N126_20150104_133000_20150104_135000";"N126_20150104_140000_20150104_142000";"N126_20150104_143000_20150104_145000";"N126_20150104_150000_20150104_152000";
"N126_20150104_153000_20150104_155000";"N126_20150104_160000_20150104_162000";"N126_20150104_163000_20150104_165000";"N126_20150104_170000_20150104_172000";"N126_20150104_173000_20150104_175000";"N126_20150104_180000_20150104_182000";"N126_20150104_183000_20150104_185000";"N126_20150104_190000_20150104_192000";"N126_20150104_193000_20150104_195000";"N126_20150104_200000_20150104_202000";
"N126_20150104_203000_20150104_205000";"N126_20150104_210000_20150104_212000";"N126_20150104_213000_20150104_215000";"N126_20150104_220000_20150104_222000";"N126_20150104_223000_20150104_225000";"N126_20150104_233000_20150104_235000";"N126_20150105_000000_20150105_002000";"N126_20150105_003000_20150105_005000";"N126_20150105_010000_20150105_012000";"N126_20150105_013000_20150105_015000";
"N126_20150105_020000_20150105_022000";"N126_20150105_023000_20150105_025000";"N126_20150105_030000_20150105_032000";"N126_20150105_033000_20150105_035000";"N126_20150105_040000_20150105_042000";"N126_20150105_043000_20150105_045000";"N126_20150105_050000_20150105_052000";"N126_20150105_053000_20150105_055000";"N126_20150105_060000_20150105_062000";"N126_20150105_063000_20150105_065000";
"N126_20150105_070000_20150105_072000";"N126_20150105_073000_20150105_075000";"N126_20150105_080000_20150105_082000";"N126_20150105_083000_20150105_085000";"N126_20150105_090000_20150105_092000";"N126_20150105_093000_20150105_095000";"N126_20150105_100000_20150105_102000";"N126_20150105_103000_20150105_105000";"N126_20150105_113000_20150105_115000";"N126_20150105_120000_20150105_122000";
"N126_20150105_123000_20150105_125000";"N126_20150105_130000_20150105_132000";"N126_20150105_133000_20150105_135000";"N126_20150105_140000_20150105_142000";"N126_20150105_143000_20150105_145000";"N126_20150105_150000_20150105_152000";"N126_20150105_153000_20150105_155000";"N126_20150105_160000_20150105_162000";"N126_20150105_163000_20150105_165000";"N126_20150105_170000_20150105_172000";
"N126_20150105_173000_20150105_175000";"N126_20150105_180000_20150105_182000";"N126_20150105_183000_20150105_185000";"N126_20150105_190000_20150105_192000";"N126_20150105_193000_20150105_195000";"N126_20150105_200000_20150105_202000";"N126_20150105_203000_20150105_205000";"N126_20150105_210000_20150105_212000";"N126_20150105_213000_20150105_215000";"N126_20150105_220000_20150105_222000";
"N126_20150105_223000_20150105_225000";"N126_20150105_233000_20150105_235000";"N126_20150106_000000_20150106_002000";"N126_20150106_003000_20150106_005000";"N126_20150106_010000_20150106_012000";"N126_20150106_013000_20150106_015000";"N126_20150106_020000_20150106_022000";"N126_20150106_023000_20150106_025000";"N126_20150106_030000_20150106_032000";"N126_20150106_033000_20150106_035000";
"N126_20150106_040000_20150106_042000";"N126_20150106_043000_20150106_045000";"N126_20150106_050000_20150106_052000";"N126_20150106_053000_20150106_055000";"N126_20150106_060000_20150106_062000";"N126_20150106_063000_20150106_065000";"N126_20150106_070000_20150106_072000";"N126_20150106_073000_20150106_075000";"N126_20150106_080000_20150106_082000";"N126_20150106_083000_20150106_085000";
"N126_20150106_090000_20150106_092000";"N126_20150106_093000_20150106_095000";"N126_20150106_100000_20150106_102000";"N126_20150106_103000_20150106_105000";"N126_20150106_113000_20150106_115000";"N126_20150106_120000_20150106_122000";"N126_20150106_123000_20150106_125000";"N126_20150106_130000_20150106_132000";"N126_20150106_133000_20150106_135000";"N126_20150106_140000_20150106_142000";
"N126_20150106_143000_20150106_145000";"N126_20150106_150000_20150106_152000";"N126_20150106_153000_20150106_155000";"N126_20150106_160000_20150106_162000";"N126_20150106_170000_20150106_172000";"N126_20150106_173000_20150106_175000";"N126_20150106_180000_20150106_182000";"N126_20150106_183000_20150106_185000";"N126_20150106_190000_20150106_192000";"N126_20150106_193000_20150106_195000";
"N126_20150106_200000_20150106_202000";"N126_20150106_203000_20150106_205000";"N126_20150106_210000_20150106_212000";"N126_20150106_213000_20150106_215000";"N126_20150106_220000_20150106_222000";"N126_20150106_223000_20150106_225000";"N126_20150106_233000_20150106_235000";"N126_20150107_000000_20150107_002000";"N126_20150107_003000_20150107_005000";"N126_20150107_010000_20150107_012000";
"N126_20150107_013000_20150107_015000";"N126_20150107_020000_20150107_022000";"N126_20150107_023000_20150107_025000";"N126_20150107_030000_20150107_032000";"N126_20150107_033000_20150107_035000";"N126_20150107_040000_20150107_042000";"N126_20150107_043000_20150107_045000";"N126_20150107_050000_20150107_052000";"N126_20150107_053000_20150107_055000";"N126_20150107_060000_20150107_062000";
"N126_20150107_063000_20150107_065000";"N126_20150107_070000_20150107_072000";"N126_20150107_073000_20150107_075000";"N126_20150107_080000_20150107_082000";"N126_20150107_083000_20150107_085000";"N126_20150107_090000_20150107_092000";"N126_20150107_093000_20150107_095000";"N126_20150107_100000_20150107_102000";"N126_20150107_103000_20150107_105000";"N126_20150107_113000_20150107_115000";
"N126_20150107_120000_20150107_122000";"N126_20150107_123000_20150107_125000";"N126_20150107_130000_20150107_132000";"N126_20150107_133000_20150107_135000";"N126_20150107_140000_20150107_142000";"N126_20150107_143000_20150107_145000";"N126_20150107_150000_20150107_152000";"N126_20150107_153000_20150107_155000";"N126_20150107_160000_20150107_162000";"N126_20150107_163000_20150107_165000";
"N126_20150107_170000_20150107_172000";"N126_20150107_173000_20150107_175000";"N126_20150107_180000_20150107_182000";"N126_20150107_183000_20150107_185000";"N126_20150107_190000_20150107_192000";"N126_20150107_193000_20150107_195000";"N126_20150107_200000_20150107_202000";"N126_20150107_203000_20150107_205000";"N126_20150107_210000_20150107_212000";"N126_20150107_220000_20150107_222000";
"N126_20150107_223000_20150107_225000";"N126_20150107_233000_20150107_235000";"N126_20150108_000000_20150108_002000";"N126_20150108_003000_20150108_005000";"N126_20150108_010000_20150108_012000";"N126_20150108_013000_20150108_015000";"N126_20150108_020000_20150108_022000";"N126_20150108_023000_20150108_025000";"N126_20150108_030000_20150108_032000";"N126_20150108_033000_20150108_035000";
"N126_20150108_040000_20150108_042000";"N126_20150108_043000_20150108_045000";"N126_20150108_050000_20150108_052000";"N126_20150108_053000_20150108_055000";"N126_20150108_060000_20150108_062000";"N126_20150108_063000_20150108_065000";"N126_20150108_070000_20150108_072000";"N126_20150108_073000_20150108_075000";"N126_20150108_080000_20150108_082000";"N126_20150108_083000_20150108_085000";
"N126_20150108_090000_20150108_092000";"N126_20150108_093000_20150108_095000";"N126_20150108_100000_20150108_102000";"N126_20150108_103000_20150108_105000";"N126_20150108_113000_20150108_115000";"N126_20150108_120000_20150108_122000";"N126_20150108_123000_20150108_125000";"N126_20150108_130000_20150108_132000";"N126_20150108_133000_20150108_135000";"N126_20150108_140000_20150108_142000";
"N126_20150108_143000_20150108_145000";"N126_20150108_150000_20150108_152000";"N126_20150108_153000_20150108_155000";"N126_20150108_160000_20150108_162000";"N126_20150108_163000_20150108_165000";"N126_20150108_170000_20150108_172000";"N126_20150108_173000_20150108_175000";"N126_20150108_180000_20150108_182000";"N126_20150108_183000_20150108_185000";"N126_20150108_190000_20150108_192000";
"N126_20150108_193000_20150108_195000";"N126_20150108_200000_20150108_202000";"N126_20150108_203000_20150108_205000";"N126_20150108_210000_20150108_212000";"N126_20150108_213000_20150108_215000";"N126_20150108_220000_20150108_222000";"N126_20150108_223000_20150108_225000";"N126_20150108_233000_20150108_235000";"N126_20150109_000000_20150109_002000";"N126_20150109_003000_20150109_005000";
"N126_20150109_010000_20150109_012000";"N126_20150109_013000_20150109_015000";"N126_20150109_020000_20150109_022000";"N126_20150109_023000_20150109_025000";"N126_20150109_030000_20150109_032000";"N126_20150109_033000_20150109_035000";"N126_20150109_040000_20150109_042000";"N126_20150109_043000_20150109_045000";"N126_20150109_050000_20150109_052000";"N126_20150109_053000_20150109_055000";
"N126_20150109_060000_20150109_062000";"N126_20150109_063000_20150109_065000";"N126_20150109_073000_20150109_075000";"N126_20150109_080000_20150109_082000";"N126_20150109_083000_20150109_085000";"N126_20150109_090000_20150109_092000";"N126_20150109_093000_20150109_095000";"N126_20150109_100000_20150109_102000";"N126_20150109_103000_20150109_105000";"N126_20150109_113000_20150109_115000";
"N126_20150109_120000_20150109_122000";"N126_20150109_123000_20150109_125000";"N126_20150109_130000_20150109_132000";"N126_20150109_133000_20150109_135000";"N126_20150109_140000_20150109_142000";"N126_20150109_143000_20150109_145000";"N126_20150109_150000_20150109_152000";"N126_20150109_153000_20150109_155000";"N126_20150109_160000_20150109_162000";"N126_20150109_163000_20150109_165000";
"N126_20150109_170000_20150109_172000";"N126_20150109_173000_20150109_175000";"N126_20150109_180000_20150109_182000";"N126_20150109_183000_20150109_185000";"N126_20150109_190000_20150109_192000";"N126_20150109_193000_20150109_195000";"N126_20150109_200000_20150109_202000";"N126_20150109_203000_20150109_205000";"N126_20150109_210000_20150109_212000";"N126_20150109_213000_20150109_215000";
"N126_20150109_220000_20150109_222000";"N126_20150109_223000_20150109_225000";"N126_20150109_233000_20150109_235000";"N126_20150110_000000_20150110_002000";"N126_20150110_003000_20150110_005000";"N126_20150110_010000_20150110_012000";"N126_20150110_013000_20150110_015000";"N126_20150110_020000_20150110_022000";"N126_20150110_023000_20150110_025000";"N126_20150110_030000_20150110_032000";
"N126_20150110_033000_20150110_035000";"N126_20150110_040000_20150110_042000";"N126_20150110_043000_20150110_045000";"N126_20150110_050000_20150110_052000";"N126_20150110_053000_20150110_055000";"N126_20150110_060000_20150110_062000";"N126_20150110_063000_20150110_065000";"N126_20150110_070000_20150110_072000";"N126_20150110_073000_20150110_075000";"N126_20150110_080000_20150110_082000";
"N126_20150110_083000_20150110_085000";"N126_20150110_090000_20150110_092000";"N126_20150110_093000_20150110_095000";"N126_20150110_100000_20150110_102000";"N126_20150110_103000_20150110_105000";"N126_20150110_113000_20150110_115000";"N126_20150110_120000_20150110_122000";"N126_20150110_123000_20150110_125000";"N126_20150110_130000_20150110_132000";"N126_20150110_133000_20150110_135000";
"N126_20150110_140000_20150110_142000";"N126_20150110_143000_20150110_145000";"N126_20150110_150000_20150110_152000";"N126_20150110_153000_20150110_155000";"N126_20150110_160000_20150110_162000";"N126_20150110_163000_20150110_165000";"N126_20150110_170000_20150110_172000";"N126_20150110_173000_20150110_175000";"N126_20150110_180000_20150110_182000";"N126_20150110_183000_20150110_185000";
"N126_20150110_190000_20150110_192000";"N126_20150110_193000_20150110_195000";"N126_20150110_200000_20150110_202000";"N126_20150110_203000_20150110_205000";"N126_20150110_210000_20150110_212000";"N126_20150110_213000_20150110_215000";"N126_20150110_220000_20150110_222000";"N126_20150110_223000_20150110_225000";"N126_20150110_233000_20150110_235000";"N126_20150111_000000_20150111_002000";
"N126_20150111_003000_20150111_005000";"N126_20150111_010000_20150111_012000";"N126_20150111_013000_20150111_015000";"N126_20150111_020000_20150111_022000";"N126_20150111_023000_20150111_025000";"N126_20150111_030000_20150111_032000";"N126_20150111_033000_20150111_035000";"N126_20150111_040000_20150111_042000";"N126_20150111_043000_20150111_045000";"N126_20150111_050000_20150111_052000";
"N126_20150111_053000_20150111_055000";"N126_20150111_060000_20150111_062000";"N126_20150111_063000_20150111_065000";"N126_20150111_070000_20150111_072000";"N126_20150111_073000_20150111_075000";"N126_20150111_080000_20150111_082000";"N126_20150111_083000_20150111_085000";"N126_20150111_090000_20150111_092000";"N126_20150111_093000_20150111_095000";"N126_20150111_100000_20150111_102000";
"N126_20150111_103000_20150111_105000";"N126_20150111_113000_20150111_115000";"N126_20150111_120000_20150111_122000";"N126_20150111_123000_20150111_125000";"N126_20150111_130000_20150111_132000";"N126_20150111_133000_20150111_135000";"N126_20150111_140000_20150111_142000";"N126_20150111_143000_20150111_145000";"N126_20150111_150000_20150111_152000";"N126_20150111_153000_20150111_155000";
"N126_20150111_160000_20150111_162000";"N126_20150111_163000_20150111_165000";"N126_20150111_170000_20150111_172000";"N126_20150111_173000_20150111_175000";"N126_20150111_180000_20150111_182000";"N126_20150111_183000_20150111_185000";"N126_20150111_190000_20150111_192000";"N126_20150111_193000_20150111_195000";"N126_20150111_200000_20150111_202000";"N126_20150111_203000_20150111_205000";
"N126_20150111_210000_20150111_212000";"N126_20150111_213000_20150111_215000";"N126_20150111_220000_20150111_222000";"N126_20150111_223000_20150111_225000";"N126_20150111_233000_20150111_235000";"N126_20150112_000000_20150112_002000";"N126_20150112_003000_20150112_005000";"N126_20150112_010000_20150112_012000";"N126_20150112_013000_20150112_015000";"N126_20150112_020000_20150112_022000";
"N126_20150112_023000_20150112_025000";"N126_20150112_030000_20150112_032000";"N126_20150112_033000_20150112_035000";"N126_20150112_040000_20150112_042000";"N126_20150112_043000_20150112_045000";"N126_20150112_050000_20150112_052000";"N126_20150112_053000_20150112_055000";"N126_20150112_060000_20150112_062000";"N126_20150112_063000_20150112_065000";"N126_20150112_070000_20150112_072000";
"N126_20150112_073000_20150112_075000";"N126_20150112_080000_20150112_082000";"N126_20150112_083000_20150112_085000";"N126_20150112_090000_20150112_092000";"N126_20150112_093000_20150112_095000";"N126_20150112_100000_20150112_102000";"N126_20150112_103000_20150112_105000";"N126_20150112_113000_20150112_115000";"N126_20150112_120000_20150112_122000";"N126_20150112_123000_20150112_125000";
"N126_20150112_130000_20150112_132000";"N126_20150112_133000_20150112_135000";"N126_20150112_140000_20150112_142000";"N126_20150112_143000_20150112_145000";"N126_20150112_150000_20150112_152000";"N126_20150112_153000_20150112_155000";"N126_20150112_160000_20150112_162000";"N126_20150112_163000_20150112_165000";"N126_20150112_170000_20150112_172000";"N126_20150112_173000_20150112_175000";
"N126_20150112_180000_20150112_182000";"N126_20150112_183000_20150112_185000";"N126_20150112_190000_20150112_192000";"N126_20150112_193000_20150112_195000";"N126_20150112_200000_20150112_202000";"N126_20150112_203000_20150112_205000";"N126_20150112_210000_20150112_212000";"N126_20150112_213000_20150112_215000";"N126_20150112_220000_20150112_222000";"N126_20150112_223000_20150112_225000";
"N126_20150112_233000_20150112_235000";"N126_20150113_000000_20150113_002000";"N126_20150113_003000_20150113_005000";"N126_20150113_010000_20150113_012000";"N126_20150113_013000_20150113_015000";"N126_20150113_020000_20150113_022000";"N126_20150113_023000_20150113_025000";"N126_20150113_030000_20150113_032000";"N126_20150113_033000_20150113_035000";"N126_20150113_040000_20150113_042000";
"N126_20150113_043000_20150113_045000";"N126_20150113_050000_20150113_052000";"N126_20150113_053000_20150113_055000";"N126_20150113_060000_20150113_062000";"N126_20150113_063000_20150113_065000";"N126_20150113_070000_20150113_072000";"N126_20150113_073000_20150113_075000";"N126_20150113_080000_20150113_082000";"N126_20150113_083000_20150113_085000";"N126_20150113_090000_20150113_092000";
"N126_20150113_093000_20150113_095000";"N126_20150113_100000_20150113_102000";"N126_20150113_103000_20150113_105000";"N126_20150113_113000_20150113_115000";"N126_20150113_120000_20150113_122000";"N126_20150113_123000_20150113_125000";"N126_20150113_130000_20150113_132000";"N126_20150113_133000_20150113_135000";"N126_20150113_140000_20150113_142000";"N126_20150113_143000_20150113_145000";
"N126_20150113_150000_20150113_152000";"N126_20150113_153000_20150113_155000";"N126_20150113_160000_20150113_162000";"N126_20150113_163000_20150113_165000";"N126_20150113_170000_20150113_172000";"N126_20150113_173000_20150113_175000";"N126_20150113_180000_20150113_182000";"N126_20150113_183000_20150113_185000";"N126_20150113_190000_20150113_192000";"N126_20150113_193000_20150113_195000";
"N126_20150113_200000_20150113_202000";"N126_20150113_203000_20150113_205000";"N126_20150113_210000_20150113_212000";"N126_20150113_213000_20150113_215000";"N126_20150113_220000_20150113_222000";"N126_20150113_223000_20150113_225000";"N126_20150113_233000_20150113_235000";"N126_20150114_000000_20150114_002000";"N126_20150114_003000_20150114_005000";"N126_20150114_010000_20150114_012000";
"N126_20150114_013000_20150114_015000";"N126_20150114_020000_20150114_022000";"N126_20150114_023000_20150114_025000";"N126_20150114_030000_20150114_032000";"N126_20150114_033000_20150114_035000";"N126_20150114_040000_20150114_042000";"N126_20150114_043000_20150114_045000";"N126_20150114_050000_20150114_052000";"N126_20150114_053000_20150114_055000";"N126_20150114_060000_20150114_062000";
"N126_20150114_063000_20150114_065000";"N126_20150114_070000_20150114_072000";"N126_20150114_073000_20150114_075000";"N126_20150114_080000_20150114_082000";"N126_20150114_083000_20150114_085000";"N126_20150114_090000_20150114_092000";"N126_20150114_093000_20150114_095000";"N126_20150114_100000_20150114_102000";"N126_20150114_103000_20150114_105000";"N126_20150114_113000_20150114_115000";
"N126_20150114_120000_20150114_122000";"N126_20150114_123000_20150114_125000";"N126_20150114_130000_20150114_132000";"N126_20150114_133000_20150114_135000";"N126_20150114_140000_20150114_142000";"N126_20150114_143000_20150114_145000";"N126_20150114_150000_20150114_152000";"N126_20150114_153000_20150114_155000";"N126_20150114_160000_20150114_162000";"N126_20150114_163000_20150114_165000";
"N126_20150114_170000_20150114_172000";"N126_20150114_173000_20150114_175000";"N126_20150114_180000_20150114_182000";"N126_20150114_183000_20150114_185000";"N126_20150114_190000_20150114_192000";"N126_20150114_193000_20150114_195000";"N126_20150114_200000_20150114_202000";"N126_20150114_203000_20150114_205000";"N126_20150114_210000_20150114_212000";"N126_20150114_213000_20150114_215000";
"N126_20150114_223000_20150114_225000";"N126_20150114_233000_20150114_235000";"N126_20150115_000000_20150115_002000";"N126_20150115_003000_20150115_005000";"N126_20150115_013000_20150115_015000";"N126_20150115_020000_20150115_022000";"N126_20150115_023000_20150115_025000";"N126_20150115_030000_20150115_032000";"N126_20150115_033000_20150115_035000";"N126_20150115_040000_20150115_042000";
"N126_20150115_043000_20150115_045000";"N126_20150115_050000_20150115_052000";"N126_20150115_053000_20150115_055000";"N126_20150115_060000_20150115_062000";"N126_20150115_063000_20150115_065000";"N126_20150115_070000_20150115_072000";"N126_20150115_073000_20150115_075000";"N126_20150115_080000_20150115_082000";"N126_20150115_083000_20150115_085000";"N126_20150115_090000_20150115_092000";
"N126_20150115_093000_20150115_095000";"N126_20150115_100000_20150115_102000";"N126_20150115_103000_20150115_105000";"N126_20150115_113000_20150115_115000";"N126_20150115_120000_20150115_122000";"N126_20150115_123000_20150115_125000";"N126_20150115_130000_20150115_132000";"N126_20150115_133000_20150115_135000";"N126_20150115_140000_20150115_142000";"N126_20150115_143000_20150115_145000";
"N126_20150115_150000_20150115_152000";"N126_20150115_153000_20150115_155000";"N126_20150115_160000_20150115_162000";"N126_20150115_163000_20150115_165000";"N126_20150115_170000_20150115_172000";"N126_20150115_173000_20150115_175000";"N126_20150115_180000_20150115_182000";"N126_20150115_183000_20150115_185000";"N126_20150115_190000_20150115_192000";"N126_20150115_193000_20150115_195000";
"N126_20150115_200000_20150115_202000";"N126_20150115_203000_20150115_205000";"N126_20150115_210000_20150115_212000";"N126_20150115_213000_20150115_215000";"N126_20150115_220000_20150115_222000";"N126_20150115_223000_20150115_225000";"N126_20150115_233000_20150115_235000";"N126_20150116_000000_20150116_002000";"N126_20150116_003000_20150116_005000";"N126_20150116_010000_20150116_012000";
"N126_20150116_013000_20150116_015000";"N126_20150116_020000_20150116_022000";"N126_20150116_023000_20150116_025000";"N126_20150116_030000_20150116_032000";"N126_20150116_033000_20150116_035000";"N126_20150116_040000_20150116_042000";"N126_20150116_043000_20150116_045000";"N126_20150116_050000_20150116_052000";"N126_20150116_053000_20150116_055000";"N126_20150116_060000_20150116_062000";
"N126_20150116_063000_20150116_065000";"N126_20150116_070000_20150116_072000";"N126_20150116_073000_20150116_075000";"N126_20150116_080000_20150116_082000";"N126_20150116_083000_20150116_085000";"N126_20150116_090000_20150116_092000";"N126_20150116_093000_20150116_095000";"N126_20150116_100000_20150116_102000";"N126_20150116_103000_20150116_105000";"N126_20150116_113000_20150116_115000";
"N126_20150116_120000_20150116_122000";"N126_20150116_123000_20150116_125000";"N126_20150116_130000_20150116_132000";"N126_20150116_133000_20150116_135000";"N126_20150116_140000_20150116_142000";"N126_20150116_150000_20150116_152000";"N126_20150116_160000_20150116_162000";"N126_20150116_163000_20150116_165000";"N126_20150116_170000_20150116_172000";"N126_20150116_173000_20150116_175000";
"N126_20150116_180000_20150116_182000";"N126_20150116_183000_20150116_185000";"N126_20150116_190000_20150116_192000";"N126_20150116_193000_20150116_195000";"N126_20150116_200000_20150116_202000";"N126_20150116_203000_20150116_205000";"N126_20150116_210000_20150116_212000";"N126_20150116_213000_20150116_215000";"N126_20150116_220000_20150116_222000";"N126_20150116_223000_20150116_225000";
"N126_20150116_233000_20150116_235000";"N126_20150117_000000_20150117_002000";"N126_20150117_003000_20150117_005000";"N126_20150117_010000_20150117_012000";"N126_20150117_013000_20150117_015000";"N126_20150117_020000_20150117_022000";"N126_20150117_023000_20150117_025000";"N126_20150117_030000_20150117_032000";"N126_20150117_033000_20150117_035000";"N126_20150117_040000_20150117_042000";
"N126_20150117_043000_20150117_045000";"N126_20150117_050000_20150117_052000";"N126_20150117_053000_20150117_055000";"N126_20150117_060000_20150117_062000";"N126_20150117_063000_20150117_065000";"N126_20150117_070000_20150117_072000";"N126_20150117_073000_20150117_075000";"N126_20150117_080000_20150117_082000";"N126_20150117_083000_20150117_085000";"N126_20150117_090000_20150117_092000";
"N126_20150117_093000_20150117_095000";"N126_20150117_100000_20150117_102000";"N126_20150117_103000_20150117_105000";"N126_20150117_113000_20150117_115000";"N126_20150117_120000_20150117_122000";"N126_20150117_123000_20150117_125000";"N126_20150117_130000_20150117_132000";"N126_20150117_133000_20150117_135000";"N126_20150117_140000_20150117_142000";"N126_20150117_143000_20150117_145000";
"N126_20150117_150000_20150117_152000";"N126_20150117_153000_20150117_155000";"N126_20150117_160000_20150117_162000";"N126_20150117_163000_20150117_165000";"N126_20150117_170000_20150117_172000";"N126_20150117_173000_20150117_175000";"N126_20150117_180000_20150117_182000";"N126_20150117_183000_20150117_185000";"N126_20150117_190000_20150117_192000";"N126_20150117_193000_20150117_195000";
"N126_20150117_200000_20150117_202000";"N126_20150117_203000_20150117_205000";"N126_20150117_210000_20150117_212000";"N126_20150117_213000_20150117_215000";"N126_20150117_220000_20150117_222000";"N126_20150117_223000_20150117_225000";"N126_20150117_233000_20150117_235000";"N126_20150118_000000_20150118_002000";"N126_20150118_003000_20150118_005000";"N126_20150118_010000_20150118_012000";
"N126_20150118_013000_20150118_015000";"N126_20150118_020000_20150118_022000";"N126_20150118_023000_20150118_025000";"N126_20150118_030000_20150118_032000";"N126_20150118_033000_20150118_035000";"N126_20150118_040000_20150118_042000";"N126_20150118_043000_20150118_045000";"N126_20150118_050000_20150118_052000";"N126_20150118_053000_20150118_055000";"N126_20150118_060000_20150118_062000";
"N126_20150118_063000_20150118_065000";"N126_20150118_070000_20150118_072000";"N126_20150118_073000_20150118_075000";"N126_20150118_080000_20150118_082000";"N126_20150118_083000_20150118_085000";"N126_20150118_090000_20150118_092000";"N126_20150118_093000_20150118_095000";"N126_20150118_100000_20150118_102000";"N126_20150118_103000_20150118_105000";"N126_20150118_113000_20150118_115000";
"N126_20150118_120000_20150118_122000";"N126_20150118_123000_20150118_125000";"N126_20150118_130000_20150118_132000";"N126_20150118_133000_20150118_135000";"N126_20150118_140000_20150118_142000";"N126_20150118_143000_20150118_145000";"N126_20150118_150000_20150118_152000";"N126_20150118_153000_20150118_155000";"N126_20150118_160000_20150118_162000";"N126_20150118_163000_20150118_165000";
"N126_20150118_170000_20150118_172000";"N126_20150118_173000_20150118_175000";"N126_20150118_180000_20150118_182000";"N126_20150118_183000_20150118_185000";"N126_20150118_190000_20150118_192000";"N126_20150118_193000_20150118_195000";"N126_20150118_200000_20150118_202000";"N126_20150118_203000_20150118_205000";"N126_20150118_210000_20150118_212000";"N126_20150118_213000_20150118_215000";
"N126_20150118_220000_20150118_222000";"N126_20150118_223000_20150118_225000";"N126_20150118_233000_20150118_235000";"N126_20150119_000000_20150119_002000";"N126_20150119_003000_20150119_005000";"N126_20150119_010000_20150119_012000";"N126_20150119_013000_20150119_015000";"N126_20150119_020000_20150119_022000";"N126_20150119_023000_20150119_025000";"N126_20150119_030000_20150119_032000";
"N126_20150119_033000_20150119_035000";"N126_20150119_040000_20150119_042000";"N126_20150119_043000_20150119_045000";"N126_20150119_050000_20150119_052000";"N126_20150119_053000_20150119_055000";"N126_20150119_060000_20150119_062000";"N126_20150119_063000_20150119_065000";"N126_20150119_070000_20150119_072000";"N126_20150119_073000_20150119_075000";"N126_20150119_080000_20150119_082000";
"N126_20150119_083000_20150119_085000";"N126_20150119_090000_20150119_092000";"N126_20150119_093000_20150119_095000";"N126_20150119_100000_20150119_102000";"N126_20150119_103000_20150119_105000";"N126_20150119_113000_20150119_115000";"N126_20150119_120000_20150119_122000";"N126_20150119_123000_20150119_125000";"N126_20150119_130000_20150119_132000";"N126_20150119_133000_20150119_135000";
"N126_20150119_140000_20150119_142000";"N126_20150119_143000_20150119_145000";"N126_20150119_150000_20150119_152000";"N126_20150119_153000_20150119_155000";"N126_20150119_160000_20150119_162000";"N126_20150119_163000_20150119_165000";"N126_20150119_170000_20150119_172000";"N126_20150119_173000_20150119_175000";"N126_20150119_180000_20150119_182000";"N126_20150119_183000_20150119_185000";
"N126_20150119_190000_20150119_192000";"N126_20150119_193000_20150119_195000";"N126_20150119_200000_20150119_202000";"N126_20150119_203000_20150119_205000";"N126_20150119_210000_20150119_212000";"N126_20150119_220000_20150119_222000";"N126_20150119_223000_20150119_225000";"N126_20150119_233000_20150119_235000";"N126_20150120_000000_20150120_002000";"N126_20150120_003000_20150120_005000";
"N126_20150120_010000_20150120_012000";"N126_20150120_013000_20150120_015000";"N126_20150120_020000_20150120_022000";"N126_20150120_023000_20150120_025000";"N126_20150120_030000_20150120_032000";"N126_20150120_033000_20150120_035000";"N126_20150120_040000_20150120_042000";"N126_20150120_043000_20150120_045000";"N126_20150120_050000_20150120_052000";"N126_20150120_053000_20150120_055000";
"N126_20150120_060000_20150120_062000";"N126_20150120_063000_20150120_065000";"N126_20150120_070000_20150120_072000";"N126_20150120_073000_20150120_075000";"N126_20150120_080000_20150120_082000";"N126_20150120_083000_20150120_085000";"N126_20150120_090000_20150120_092000";"N126_20150120_093000_20150120_095000";"N126_20150120_100000_20150120_102000";"N126_20150120_103000_20150120_105000";
"N126_20150120_113000_20150120_115000";"N126_20150120_120000_20150120_122000";"N126_20150120_123000_20150120_125000";"N126_20150120_130000_20150120_132000";"N126_20150120_133000_20150120_135000";"N126_20150120_140000_20150120_142000";"N126_20150120_143000_20150120_145000";"N126_20150120_150000_20150120_152000";"N126_20150120_153000_20150120_155000";"N126_20150120_160000_20150120_162000";
"N126_20150120_163000_20150120_165000";"N126_20150120_170000_20150120_172000";"N126_20150120_173000_20150120_175000";"N126_20150120_180000_20150120_182000";"N126_20150120_183000_20150120_185000";"N126_20150120_190000_20150120_192000";"N126_20150120_193000_20150120_195000";"N126_20150120_200000_20150120_202000";"N126_20150120_203000_20150120_205000";"N126_20150120_210000_20150120_212000";
"N126_20150120_213000_20150120_215000";"N126_20150120_220000_20150120_222000";"N126_20150120_223000_20150120_225000";"N126_20150120_233000_20150120_235000";"N126_20150121_000000_20150121_002000";"N126_20150121_003000_20150121_005000";"N126_20150121_010000_20150121_012000";"N126_20150121_013000_20150121_015000";"N126_20150121_020000_20150121_022000";"N126_20150121_023000_20150121_025000";
"N126_20150121_030000_20150121_032000";"N126_20150121_033000_20150121_035000";"N126_20150121_040000_20150121_042000";"N126_20150121_043000_20150121_045000";"N126_20150121_050000_20150121_052000";"N126_20150121_053000_20150121_055000";"N126_20150121_060000_20150121_062000";"N126_20150121_063000_20150121_065000";"N126_20150121_070000_20150121_072000";"N126_20150121_073000_20150121_075000";
"N126_20150121_080000_20150121_082000";"N126_20150121_083000_20150121_085000";"N126_20150121_090000_20150121_092000";"N126_20150121_093000_20150121_095000";"N126_20150121_100000_20150121_102000";"N126_20150121_103000_20150121_105000";"N126_20150121_113000_20150121_115000";"N126_20150121_120000_20150121_122000";"N126_20150121_123000_20150121_125000";"N126_20150121_130000_20150121_132000";
"N126_20150121_133000_20150121_135000";"N126_20150121_140000_20150121_142000";"N126_20150121_143000_20150121_145000";"N126_20150121_150000_20150121_152000";"N126_20150121_153000_20150121_155000";"N126_20150121_160000_20150121_162000";"N126_20150121_163000_20150121_165000";"N126_20150121_170000_20150121_172000";"N126_20150121_173000_20150121_175000";"N126_20150121_180000_20150121_182000";
"N126_20150121_183000_20150121_185000";"N126_20150121_190000_20150121_192000";"N126_20150121_193000_20150121_195000";"N126_20150121_200000_20150121_202000";"N126_20150121_203000_20150121_205000";"N126_20150121_210000_20150121_212000";"N126_20150121_213000_20150121_215000";"N126_20150121_220000_20150121_222000";"N126_20150121_223000_20150121_225000";"N126_20150121_233000_20150121_235000";
"N126_20150122_000000_20150122_002000";"N126_20150122_003000_20150122_005000";"N126_20150122_010000_20150122_012000";"N126_20150122_013000_20150122_015000";"N126_20150122_023000_20150122_025000";"N126_20150122_030000_20150122_032000";"N126_20150122_033000_20150122_035000";"N126_20150122_040000_20150122_042000";"N126_20150122_043000_20150122_045000";"N126_20150122_050000_20150122_052000";
"N126_20150122_053000_20150122_055000";"N126_20150122_060000_20150122_062000";"N126_20150122_063000_20150122_065000";"N126_20150122_070000_20150122_072000";"N126_20150122_073000_20150122_075000";"N126_20150122_080000_20150122_082000";"N126_20150122_083000_20150122_085000";"N126_20150122_090000_20150122_092000";"N126_20150122_093000_20150122_095000";"N126_20150122_100000_20150122_102000";
"N126_20150122_103000_20150122_105000";"N126_20150122_113000_20150122_115000";"N126_20150122_120000_20150122_122000";"N126_20150122_123000_20150122_125000";"N126_20150122_130000_20150122_132000";"N126_20150122_133000_20150122_135000";"N126_20150122_140000_20150122_142000";"N126_20150122_143000_20150122_145000";"N126_20150122_150000_20150122_152000";"N126_20150122_153000_20150122_155000";
"N126_20150122_160000_20150122_162000";"N126_20150122_163000_20150122_165000";"N126_20150122_170000_20150122_172000";"N126_20150122_173000_20150122_175000";"N126_20150122_180000_20150122_182000";"N126_20150122_183000_20150122_185000";"N126_20150122_190000_20150122_192000";"N126_20150122_193000_20150122_195000";"N126_20150122_200000_20150122_202000";"N126_20150122_203000_20150122_205000";
"N126_20150122_210000_20150122_212000";"N126_20150122_213000_20150122_215000";"N126_20150122_220000_20150122_222000";"N126_20150122_223000_20150122_225000";"N126_20150122_233000_20150122_235000";"N126_20150123_003000_20150123_005000";"N126_20150123_010000_20150123_012000";"N126_20150123_013000_20150123_015000";"N126_20150123_020000_20150123_022000";"N126_20150123_023000_20150123_025000";
"N126_20150123_030000_20150123_032000";"N126_20150123_033000_20150123_035000";"N126_20150123_040000_20150123_042000";"N126_20150123_043000_20150123_045000";"N126_20150123_050000_20150123_052000";"N126_20150123_053000_20150123_055000";"N126_20150123_060000_20150123_062000";"N126_20150123_063000_20150123_065000";"N126_20150123_070000_20150123_072000";"N126_20150123_073000_20150123_075000";
"N126_20150123_080000_20150123_082000";"N126_20150123_083000_20150123_085000";"N126_20150123_090000_20150123_092000";"N126_20150123_093000_20150123_095000";"N126_20150123_100000_20150123_102000";"N126_20150123_103000_20150123_105000";"N126_20150123_113000_20150123_115000";"N126_20150123_120000_20150123_122000";"N126_20150123_123000_20150123_125000";"N126_20150123_130000_20150123_132000";
"N126_20150123_133000_20150123_135000";"N126_20150123_140000_20150123_142000";"N126_20150123_143000_20150123_145000";"N126_20150123_150000_20150123_152000";"N126_20150123_153000_20150123_155000";"N126_20150123_160000_20150123_162000";"N126_20150123_163000_20150123_165000";"N126_20150123_170000_20150123_172000";"N126_20150123_173000_20150123_175000";"N126_20150123_180000_20150123_182000";
"N126_20150123_183000_20150123_185000";"N126_20150123_190000_20150123_192000";"N126_20150123_193000_20150123_195000";"N126_20150123_200000_20150123_202000";"N126_20150123_203000_20150123_205000";"N126_20150123_210000_20150123_212000";"N126_20150123_213000_20150123_215000";"N126_20150123_220000_20150123_222000";"N126_20150123_223000_20150123_225000";"N126_20150123_233000_20150123_235000";
"N126_20150124_000000_20150124_002000";"N126_20150124_003000_20150124_005000";"N126_20150124_010000_20150124_012000";"N126_20150124_013000_20150124_015000";"N126_20150124_020000_20150124_022000";"N126_20150124_023000_20150124_025000";"N126_20150124_030000_20150124_032000";"N126_20150124_033000_20150124_035000";"N126_20150124_040000_20150124_042000";"N126_20150124_043000_20150124_045000";
"N126_20150124_050000_20150124_052000";"N126_20150124_053000_20150124_055000";"N126_20150124_060000_20150124_062000";"N126_20150124_063000_20150124_065000";"N126_20150124_070000_20150124_072000";"N126_20150124_073000_20150124_075000";"N126_20150124_080000_20150124_082000";"N126_20150124_083000_20150124_085000";"N126_20150124_090000_20150124_092000";"N126_20150124_093000_20150124_095000";
"N126_20150124_100000_20150124_102000";"N126_20150124_103000_20150124_105000";"N126_20150124_113000_20150124_115000";"N126_20150124_120000_20150124_122000";"N126_20150124_123000_20150124_125000";"N126_20150124_130000_20150124_132000";"N126_20150124_133000_20150124_135000";"N126_20150124_140000_20150124_142000";"N126_20150124_143000_20150124_145000";"N126_20150124_150000_20150124_152000";
"N126_20150124_153000_20150124_155000";"N126_20150124_160000_20150124_162000";"N126_20150124_163000_20150124_165000";"N126_20150124_170000_20150124_172000";"N126_20150124_173000_20150124_175000";"N126_20150124_180000_20150124_182000";"N126_20150124_183000_20150124_185000";"N126_20150124_190000_20150124_192000";"N126_20150124_193000_20150124_195000";"N126_20150124_200000_20150124_202000";
"N126_20150124_203000_20150124_205000";"N126_20150124_210000_20150124_212000";"N126_20150124_213000_20150124_215000";"N126_20150124_220000_20150124_222000";"N126_20150124_223000_20150124_225000";"N126_20150124_233000_20150124_235000";"N126_20150125_000000_20150125_002000";"N126_20150125_003000_20150125_005000";"N126_20150125_010000_20150125_012000";"N126_20150125_013000_20150125_015000";
"N126_20150125_020000_20150125_022000";"N126_20150125_023000_20150125_025000";"N126_20150125_030000_20150125_032000";"N126_20150125_033000_20150125_035000";"N126_20150125_040000_20150125_042000";"N126_20150125_043000_20150125_045000";"N126_20150125_050000_20150125_052000";"N126_20150125_053000_20150125_055000";"N126_20150125_060000_20150125_062000";"N126_20150125_063000_20150125_065000";
"N126_20150125_070000_20150125_072000";"N126_20150125_073000_20150125_075000";"N126_20150125_080000_20150125_082000";"N126_20150125_083000_20150125_085000";"N126_20150125_090000_20150125_092000";"N126_20150125_093000_20150125_095000";"N126_20150125_100000_20150125_102000";"N126_20150125_103000_20150125_105000";"N126_20150125_113000_20150125_115000";"N126_20150125_120000_20150125_122000";
"N126_20150125_123000_20150125_125000";"N126_20150125_130000_20150125_132000";"N126_20150125_133000_20150125_135000";"N126_20150125_140000_20150125_142000";"N126_20150125_143000_20150125_145000";"N126_20150125_150000_20150125_152000";"N126_20150125_153000_20150125_155000";"N126_20150125_160000_20150125_162000";"N126_20150125_163000_20150125_165000";"N126_20150125_170000_20150125_172000";
"N126_20150125_173000_20150125_175000";"N126_20150125_180000_20150125_182000";"N126_20150125_183000_20150125_185000";"N126_20150125_190000_20150125_192000";"N126_20150125_193000_20150125_195000";"N126_20150125_200000_20150125_202000";"N126_20150125_203000_20150125_205000";"N126_20150125_210000_20150125_212000";"N126_20150125_213000_20150125_215000";"N126_20150125_220000_20150125_222000";
"N126_20150125_223000_20150125_225000";"N126_20150125_233000_20150125_235000";"N126_20150126_000000_20150126_002000";"N126_20150126_003000_20150126_005000";"N126_20150126_010000_20150126_012000";"N126_20150126_013000_20150126_015000";"N126_20150126_020000_20150126_022000";"N126_20150126_023000_20150126_025000";"N126_20150126_030000_20150126_032000";"N126_20150126_033000_20150126_035000";
"N126_20150126_040000_20150126_042000";"N126_20150126_043000_20150126_045000";"N126_20150126_050000_20150126_052000";"N126_20150126_053000_20150126_055000";"N126_20150126_060000_20150126_062000";"N126_20150126_063000_20150126_065000";"N126_20150126_070000_20150126_072000";"N126_20150126_073000_20150126_075000";"N126_20150126_080000_20150126_082000";"N126_20150126_083000_20150126_085000";
"N126_20150126_090000_20150126_092000";"N126_20150126_093000_20150126_095000";"N126_20150126_100000_20150126_102000";"N126_20150126_103000_20150126_105000";"N126_20150126_113000_20150126_115000";"N126_20150126_120000_20150126_122000";"N126_20150126_123000_20150126_125000";"N126_20150126_130000_20150126_132000";"N126_20150126_133000_20150126_135000";"N126_20150126_140000_20150126_142000";
"N126_20150126_143000_20150126_145000";"N126_20150126_150000_20150126_152000";"N126_20150126_153000_20150126_155000";"N126_20150126_160000_20150126_162000";"N126_20150126_163000_20150126_165000";"N126_20150126_170000_20150126_172000";"N126_20150126_173000_20150126_175000";"N126_20150126_180000_20150126_182000";"N126_20150126_183000_20150126_185000";"N126_20150126_190000_20150126_192000";
"N126_20150126_193000_20150126_195000";"N126_20150126_200000_20150126_202000";"N126_20150126_203000_20150126_205000";"N126_20150126_210000_20150126_212000";"N126_20150126_213000_20150126_215000";"N126_20150126_220000_20150126_222000";"N126_20150126_223000_20150126_225000";"N126_20150126_233000_20150126_235000";"N126_20150127_000000_20150127_002000";"N126_20150127_003000_20150127_005000";
"N126_20150127_010000_20150127_012000";"N126_20150127_013000_20150127_015000";"N126_20150127_020000_20150127_022000";"N126_20150127_023000_20150127_025000";"N126_20150127_030000_20150127_032000";"N126_20150127_033000_20150127_035000";"N126_20150127_040000_20150127_042000";"N126_20150127_043000_20150127_045000";"N126_20150127_050000_20150127_052000";"N126_20150127_053000_20150127_055000";
"N126_20150127_060000_20150127_062000";"N126_20150127_063000_20150127_065000";"N126_20150127_070000_20150127_072000";"N126_20150127_073000_20150127_075000";"N126_20150127_080000_20150127_082000";"N126_20150127_083000_20150127_085000";"N126_20150127_090000_20150127_092000";"N126_20150127_093000_20150127_095000";"N126_20150127_100000_20150127_102000";"N126_20150127_103000_20150127_105000";
"N126_20150127_113000_20150127_115000";"N126_20150127_120000_20150127_122000";"N126_20150127_123000_20150127_125000";"N126_20150127_130000_20150127_132000";"N126_20150127_133000_20150127_135000";"N126_20150127_140000_20150127_142000";"N126_20150127_143000_20150127_145000";"N126_20150127_150000_20150127_152000";"N126_20150127_153000_20150127_155000";"N126_20150127_160000_20150127_162000";
"N126_20150127_163000_20150127_165000";"N126_20150127_170000_20150127_172000";"N126_20150127_173000_20150127_175000";"N126_20150127_180000_20150127_182000";"N126_20150127_183000_20150127_185000";"N126_20150127_190000_20150127_192000";"N126_20150127_193000_20150127_195000";"N126_20150127_200000_20150127_202000";"N126_20150127_203000_20150127_205000";"N126_20150127_210000_20150127_212000";
"N126_20150127_213000_20150127_215000";"N126_20150127_220000_20150127_222000";"N126_20150127_223000_20150127_225000";"N126_20150127_233000_20150127_235000";"N126_20150128_000000_20150128_002000";"N126_20150128_010000_20150128_012000";"N126_20150128_013000_20150128_015000";"N126_20150128_020000_20150128_022000";"N126_20150128_023000_20150128_025000";"N126_20150128_030000_20150128_032000";
"N126_20150128_033000_20150128_035000";"N126_20150128_040000_20150128_042000";"N126_20150128_043000_20150128_045000";"N126_20150128_050000_20150128_052000";"N126_20150128_053000_20150128_055000";"N126_20150128_060000_20150128_062000";"N126_20150128_063000_20150128_065000";"N126_20150128_070000_20150128_072000";"N126_20150128_073000_20150128_075000";"N126_20150128_080000_20150128_082000";
"N126_20150128_083000_20150128_085000";"N126_20150128_090000_20150128_092000";"N126_20150128_093000_20150128_095000";"N126_20150128_100000_20150128_102000";"N126_20150128_103000_20150128_105000";"N126_20150128_113000_20150128_115000";"N126_20150128_120000_20150128_122000";"N126_20150128_123000_20150128_125000";"N126_20150128_130000_20150128_132000";"N126_20150128_133000_20150128_135000";
"N126_20150128_140000_20150128_142000";"N126_20150128_143000_20150128_145000";"N126_20150128_150000_20150128_152000";"N126_20150128_153000_20150128_155000";"N126_20150128_160000_20150128_162000";"N126_20150128_163000_20150128_165000";"N126_20150128_170000_20150128_172000";"N126_20150128_173000_20150128_175000";"N126_20150128_180000_20150128_182000";"N126_20150128_183000_20150128_185000";
"N126_20150128_190000_20150128_192000";"N126_20150128_193000_20150128_195000";"N126_20150128_200000_20150128_202000";"N126_20150128_203000_20150128_205000";"N126_20150128_210000_20150128_212000";"N126_20150128_213000_20150128_215000";"N126_20150128_220000_20150128_222000";"N126_20150128_223000_20150128_225000";"N126_20150128_233000_20150128_235000";"N126_20150129_000000_20150129_002000";
"N126_20150129_003000_20150129_005000";"N126_20150129_010000_20150129_012000";"N126_20150129_013000_20150129_015000";"N126_20150129_020000_20150129_022000";"N126_20150129_023000_20150129_025000";"N126_20150129_030000_20150129_032000";"N126_20150129_033000_20150129_035000";"N126_20150129_040000_20150129_042000";"N126_20150129_043000_20150129_045000";"N126_20150129_050000_20150129_052000";
"N126_20150129_053000_20150129_055000";"N126_20150129_060000_20150129_062000";"N126_20150129_063000_20150129_065000";"N126_20150129_070000_20150129_072000";"N126_20150129_073000_20150129_075000";"N126_20150129_080000_20150129_082000";"N126_20150129_083000_20150129_085000";"N126_20150129_090000_20150129_092000";"N126_20150129_093000_20150129_095000";"N126_20150129_100000_20150129_102000";
"N126_20150129_103000_20150129_105000";"N126_20150129_113000_20150129_115000";"N126_20150129_120000_20150129_122000";"N126_20150129_123000_20150129_125000";"N126_20150129_130000_20150129_132000";"N126_20150129_133000_20150129_135000";"N126_20150129_140000_20150129_142000";"N126_20150129_143000_20150129_145000";"N126_20150129_150000_20150129_152000";"N126_20150129_153000_20150129_155000";
"N126_20150129_160000_20150129_162000";"N126_20150129_163000_20150129_165000";"N126_20150129_170000_20150129_172000";"N126_20150129_173000_20150129_175000";"N126_20150129_180000_20150129_182000";"N126_20150129_183000_20150129_185000";"N126_20150129_190000_20150129_192000";"N126_20150129_193000_20150129_195000";"N126_20150129_200000_20150129_202000";"N126_20150129_203000_20150129_205000";
"N126_20150129_210000_20150129_212000";"N126_20150129_213000_20150129_215000";"N126_20150129_220000_20150129_222000";"N126_20150129_223000_20150129_225000";"N126_20150129_233000_20150129_235000";"N126_20150130_000000_20150130_002000";"N126_20150130_003000_20150130_005000";"N126_20150130_010000_20150130_012000";"N126_20150130_013000_20150130_015000";"N126_20150130_020000_20150130_022000";
"N126_20150130_023000_20150130_025000";"N126_20150130_030000_20150130_032000";"N126_20150130_033000_20150130_035000";"N126_20150130_040000_20150130_042000";"N126_20150130_043000_20150130_045000";"N126_20150130_050000_20150130_052000";"N126_20150130_053000_20150130_055000";"N126_20150130_060000_20150130_062000";"N126_20150130_063000_20150130_065000";"N126_20150130_070000_20150130_072000";
"N126_20150130_073000_20150130_075000";"N126_20150130_080000_20150130_082000";"N126_20150130_083000_20150130_085000";"N126_20150130_090000_20150130_092000";"N126_20150130_093000_20150130_095000";"N126_20150130_100000_20150130_102000";"N126_20150130_103000_20150130_105000";"N126_20150130_113000_20150130_115000";"N126_20150130_120000_20150130_122000";"N126_20150130_123000_20150130_125000";
"N126_20150130_130000_20150130_132000";"N126_20150130_133000_20150130_135000";"N126_20150130_140000_20150130_142000";"N126_20150130_143000_20150130_145000";"N126_20150130_150000_20150130_152000";"N126_20150130_153000_20150130_155000";"N126_20150130_160000_20150130_162000";"N126_20150130_163000_20150130_165000";"N126_20150130_170000_20150130_172000";"N126_20150130_173000_20150130_175000";
"N126_20150130_180000_20150130_182000";"N126_20150130_183000_20150130_185000";"N126_20150130_190000_20150130_192000";"N126_20150130_193000_20150130_195000";"N126_20150130_200000_20150130_202000";"N126_20150130_203000_20150130_205000";"N126_20150130_210000_20150130_212000";"N126_20150130_213000_20150130_215000";"N126_20150130_220000_20150130_222000";"N126_20150130_223000_20150130_225000";
"N126_20150130_233000_20150130_235000";"N126_20150131_000000_20150131_002000";"N126_20150131_003000_20150131_005000";"N126_20150131_010000_20150131_012000";"N126_20150131_013000_20150131_015000";"N126_20150131_023000_20150131_025000";"N126_20150131_030000_20150131_032000";"N126_20150131_033000_20150131_035000";"N126_20150131_040000_20150131_042000";"N126_20150131_043000_20150131_045000";
"N126_20150131_050000_20150131_052000";"N126_20150131_053000_20150131_055000";"N126_20150131_060000_20150131_062000";"N126_20150131_063000_20150131_065000";"N126_20150131_070000_20150131_072000";"N126_20150131_073000_20150131_075000";"N126_20150131_080000_20150131_082000";"N126_20150131_083000_20150131_085000";"N126_20150131_090000_20150131_092000";"N126_20150131_093000_20150131_095000";
"N126_20150131_100000_20150131_102000";"N126_20150131_103000_20150131_105000";"N126_20150131_113000_20150131_115000";"N126_20150131_120000_20150131_122000";"N126_20150131_123000_20150131_125000";"N126_20150131_130000_20150131_132000";"N126_20150131_133000_20150131_135000";"N126_20150131_140000_20150131_142000";"N126_20150131_143000_20150131_145000";"N126_20150131_150000_20150131_152000";
"N126_20150131_153000_20150131_155000";"N126_20150131_160000_20150131_162000";"N126_20150131_163000_20150131_165000";"N126_20150131_170000_20150131_172000";"N126_20150131_173000_20150131_175000";"N126_20150131_180000_20150131_182000";"N126_20150131_183000_20150131_185000";"N126_20150131_190000_20150131_192000";"N126_20150131_193000_20150131_195000";"N126_20150131_200000_20150131_202000";
"N126_20150131_203000_20150131_205000";"N126_20150131_210000_20150131_212000";"N126_20150131_213000_20150131_215000";"N126_20150131_220000_20150131_222000";"N126_20150131_223000_20150131_225000";"N126_20150131_233000_20150131_235000";      };
     };
     float_Data @[1] {
      name="Input";
      col_flags=SAVE_DATA|AUTO_WIDTH;
      is_matrix=1;
      cell_geom{ 17;1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [2] ;;      };
      width=17;
      matrix_col_width=10;
      ar {
       name="ar";
      [17 1 2826] 0.0208333;0;0;0;0;1;0;0;0;0;
0.47999999;0.65454501;0;0;0;1;0;0.041666701;0;0;
0;0;1;0;0;0;0;0.56999999;0.65454501;0;
0;0;1;0;0.0625;0;0;0;0;1;
0;0;0;0;0.60000002;0.65454501;0;0;0;1;
0;0.083333299;0;0;0;0;1;0;0;0;
0;0.56;0.65454501;0;0;0;1;0;0.104167;0;
0;0;0;1;0;0;0;0;0.56;0.65454501;
0;0;0;1;0;0.125;0;0;0;0;
1;0;0;0;0;0.55000001;0.65454501;0;0;0;
1;0;0.145833;0;0;0;0;1;0;0;
0;0;0.54000002;0.65454501;0;0;0;1;0;0.166667;
0;0;0;0;1;0;0;0;0;0.5;
0.62424201;0;0;0;1;0;0.1875;0;0;0;
0;1;0;0;0;0;0.5;0.62424201;0;0;
0;1;0;0.208333;0;0;0;0;1;0;
0;0;0;0.52999997;0.62424201;0;0;0;1;0;
0.229167;0;0;0;0;1;0;0;0;0;
0.56;0.59393901;0;0;0;1;0;0.25;0;0;
0;0;1;0;0;0;0;0.55000001;0.59393901;0;
0;0;1;0;0.27083299;0;0;0;0;1;
0;0;0;0;0.56999999;0.59393901;0;0;0;1;
0;0.29166701;0;0;0;0;1;0;0;0;
0;0.62;0.563636;0;0;0;1;0;0.3125;0;
0;0;0;1;0;0;0;0;0.63;0.533333;
0;0;0;1;0;0.33333299;0;0;0;0;
1;0;0;0;0;0.63999999;0.533333;0;0;0;
1;0;0.35416701;0;0;0;0;1;0;0;
0;0;0.64999998;0.533333;0;0;0;1;0;0.375;
0;0;0;0;1;0;0;0;0;0.67000002;
0.533333;0;0;0;1;0;0.39583299;0;0;0;
0;1;0;0;0;0;0.68000001;0.50303;0;0;
0;1;0;0.41666701;0;0;0;0;1;0;
0;0;0;0.70999998;0.50303;0;0;0;1;0;
0.4375;0;0;0;0;1;0;0;0;0;
0.74000001;0.50303;0;0;0;1;0;0.47916701;0;0;
0;0;1;0;0;0;0;0.77999997;0.472727;0;
0;0;0;1;0.5;0;0;0;0;1;
0;0;0;0;0.79000002;0.472727;0;0;0;0;
1;0.52083302;0;0;0;0;1;0;0;0;
0;0.80000001;0.472727;0;0;0;0;1;0.54166698;0;
0;0;0;1;0;0;0;0;0.82999998;0.472727;
0;0;0;0;1;0.5625;0;0;0;0;
1;0;0;0;0;0.85000002;0.472727;0;0;0;
0;1;0.58333302;0;0;0;0;1;0;0;
0;0;0.89999998;0.442424;0;0;0;0;1;0.60416698;
0;0;0;0;1;0;0;0;0;0.88999999;
0.442424;0;0;0;0;1;0.625;0;0;0;
0;1;0;0;0;0;0.92000002;0.412121;0;0;
0;0;1;0.64583302;0;0;0;0;1;0;
0;0;0;0.91000003;0.412121;0;0;0;0;1;
0.66666698;0;0;0;0;1;0;0;0;0;
0.94999999;0.412121;0;0;0;0;1;0.6875;0;0;
0;0;1;0;0;0;0;0.94999999;0.381818;0;
0;0;0;1;0.70833302;0;0;0;0;1;
0;0;0;0;0.97000003;0.381818;0;0;0;1;
0;0.72916698;0;0;0;0;1;0;0;0;
0;0.95999998;0.381818;0;0;0;1;0;0.75;0;
0;0;0;1;0;0;0;0;0.94;0.412121;
0;0;0;1;0;0.77083302;0;0;0;0;
1;0;0;0;0;0.92000002;0.472727;0;0;0;
1;0;0.79166698;0;0;0;0;1;0;0;
0;0;0.88;0.472727;0;0;0;1;0;0.8125;
0;0;0;0;1;0;0;0;0;0.83999997;
0.533333;0;0;0;1;0;0.83333302;0;0;0;
0;1;0;0;0;0;0.77999997;0.563636;0;0;
0;1;0;0.85416698;0;0;0;0;1;0;
0;0;0;0.75999999;0.59393901;0;0;0;1;0;
0.875;0;0;0;0;1;0;0;0;0;
0.73000002;0.59393901;0;0;0;1;0;0.89583302;0;0;
0;0;1;0;0;0;0;0.72000003;0.59393901;0;
0;0;1;0;0.91666698;0;0;0;0;1;
0;0;0;0;0.72000003;0.62424201;0;0;0;1;
0;0.9375;0;0;0;0;1;0;0;0;
0;0.66000003;0.62424201;0;0;0;1;0;0.97916698;0;
0;0;0;1;0;0;0;0;0.60000002;0.65454501;
0;0;0;1;0;0;0.0027397301;0;0;0;
0;1;0;0;0;0.63999999;0.68484801;0;0;0;
1;0;0.0208333;0.0027397301;0;0;0;0;1;0;
0;0;0.63999999;0.68484801;0;0;0;1;0;0.041666701;
0.0027397301;0;0;0;0;1;0;0;0;0.57999998;
0.68484801;0;0;0;1;0;0.0625;0.0027397301;0;0;
0;0;1;0;0;0;0.55000001;0.71515101;0;0;
0;1;0;0.083333299;0.0027397301;0;0;0;0;1;
0;0;0;0.56999999;0.71515101;0;0;0;1;0;
0.104167;0.0027397301;0;0;0;0;1;0;0;0;
0.64999998;0.71515101;0;0;0;1;0;0.125;0.0027397301;0;
0;0;0;1;0;0;0;0.63999999;0.71515101;0;
0;0;1;0;0.145833;0.0027397301;0;0;0;0;
1;0;0;0;0.66000003;0.68484801;0;0;0;1;
0;0.166667;0.0027397301;0;0;0;0;1;0;0;
0;0.66000003;0.68484801;0;0;0;1;0;0.1875;0.0027397301;
0;0;0;0;1;0;0;0;0.69999999;0.65454501;
0;0;0;1;0;0.208333;0.0027397301;0;0;0;
0;1;0;0;0;0.68000001;0.68484801;0;0;0;
1;0;0.229167;0.0027397301;0;0;0;0;1;0;
0;0;0.68000001;0.65454501;0;0;0;1;0;0.25;
0.0027397301;0;0;0;0;1;0;0;0;0.68000001;
0.62424201;0;0;0;1;0;0.27083299;0.0027397301;0;0;
0;0;1;0;0;0;0.70999998;0.62424201;0;0;
0;1;0;0.29166701;0.0027397301;0;0;0;0;1;
0;0;0;0.74000001;0.59393901;0;0;0;1;0;
0.3125;0.0027397301;0;0;0;0;1;0;0;0;
0.75999999;0.563636;0;0;0;1;0;0.33333299;0.0027397301;0;
0;0;0;1;0;0;0;0.75999999;0.563636;0;
0;0;1;0;0.35416701;0.0027397301;0;0;0;0;
1;0;0;0;0.79000002;0.563636;0;0;0;1;
0;0.375;0.0027397301;0;0;0;0;1;0;0;
0;0.76999998;0.563636;0;0;0;1;0;0.39583299;0.0027397301;
0;0;0;0;1;0;0;0;0.79000002;0.533333;
0;0;0;1;0;0.41666701;0.0027397301;0;0;0;
0;1;0;0;0;0.80000001;0.533333;0;0;0;
1;0;0.4375;0.0027397301;0;0;0;0;1;0;
0;0;0.79000002;0.533333;0;0;0;1;0;0.47916701;
0.0027397301;0;0;0;0;1;0;0;0;0.79000002;
0.533333;0;0;0;1;0;0.5;0.0027397301;0;0;
0;0;1;0;0;0;0.80000001;0.533333;0;0;
0;1;0;0.52083302;0.0027397301;0;0;0;0;1;
0;0;0;0.79000002;0.533333;0;0;0;1;0;
0.54166698;0.0027397301;0;0;0;0;1;0;0;0;
0.80000001;0.533333;0;0;0;1;0;0.5625;0.0027397301;0;
0;0;0;1;0;0;0;0.79000002;0.533333;0;
0;0;1;0;0.58333302;0.0027397301;0;0;0;0;
1;0;0;0;0.77999997;0.533333;0;0;0;0;
1;0.60416698;0.0027397301;0;0;0;0;1;0;0;
0;0.80000001;0.533333;0;0;0;0;1;0.625;0.0027397301;
0;0;0;0;1;0;0;0;0.80000001;0.533333;
0;0;0;0;1;0.64583302;0.0027397301;0;0;0;
0;1;0;0;0;0.85000002;0.50303;0;0;0;
0;1;0.66666698;0.0027397301;0;0;0;0;1;0;
0;0;0.87;0.50303;0;0;0;0;1;0.6875;
0.0027397301;0;0;0;0;1;0;0;0;0.91000003;
0.472727;0;0;0;0;1;0.70833302;0.0027397301;0;0;
0;0;1;0;0;0;0.93000001;0.472727;0;0;
0;0;1;0.72916698;0.0027397301;0;0;0;0;1;
0;0;0;0.93000001;0.442424;0;0;0;0;1;
0.75;0.0027397301;0;0;0;0;1;0;0;0;
0.93000001;0.472727;0;0;0;0;1;0.77083302;0.0027397301;0;
0;0;0;1;0;0;0;0.93000001;0.472727;0;
0;0;0;1;0.79166698;0.0027397301;0;0;0;0;
1;0;0;0;0.89999998;0.50303;0;0;0;0;
1;0.8125;0.0027397301;0;0;0;0;1;0;0;
0;0.81;0.533333;0;0;0;0;1;0.83333302;0.0027397301;
0;0;0;0;1;0;0;0;0.77999997;0.563636;
0;0;0;0;1;0.85416698;0.0027397301;0;0;0;
0;1;0;0;0;0.74000001;0.59393901;0;0;0;
0;1;0.875;0.0027397301;0;0;0;0;1;0;
0;0;0.67000002;0.62424201;0;0;0;0;1;0.89583302;
0.0027397301;0;0;0;0;1;0;0;0;0.64999998;
0.65454501;0;0;0;0;1;0.91666698;0.0027397301;0;0;
0;0;1;0;0;0;0.63999999;0.68484801;0;0;
0;0;1;0.9375;0.0027397301;0;0;0;0;1;
0;0;0;0.68000001;0.62424201;0;0;0;0;1;
0.97916698;0.0027397301;0;0;0;0;1;0;0;0;
0.69999999;0.62424201;0;0;0;1;0;0;0.0054794499;0;
0;0;0;0;1;0;0;0.72000003;0.62424201;0;
0;0;1;0;0.0208333;0.0054794499;0;0;0;0;
0;1;0;0;0.76999998;0.62424201;0;0;0;1;
0;0.041666701;0.0054794499;0;0;0;0;0;1;0;
0;0.77999997;0.62424201;0;0;0;1;0;0.0625;0.0054794499;
0;0;0;0;0;1;0;0;0.72000003;0.65454501;
0;0;0;1;0;0.083333299;0.0054794499;0;0;0;
0;0;1;0;0;0.73000002;0.65454501;0;0;0;
1;0;0.104167;0.0054794499;0;0;0;0;0;1;
0;0;0.73000002;0.65454501;0;0;0;1;0;0.125;
0.0054794499;0;0;0;0;0;1;0;0;0.68000001;
0.68484801;0;0;0;1;0;0.145833;0.0054794499;0;0;
0;0;0;1;0;0;0.73000002;0.68484801;0;0;
0;1;0;0.166667;0.0054794499;0;0;0;0;0;
1;0;0;0.70999998;0.68484801;0;0;0;1;0;
0.1875;0.0054794499;0;0;0;0;0;1;0;0;
0.75;0.68484801;0;0;0;1;0;0.208333;0.0054794499;0;
0;0;0;0;1;0;0;0.73000002;0.65454501;0;
0;0;1;0;0.229167;0.0054794499;0;0;0;0;
0;1;0;0;0.69999999;0.65454501;0;0;0;1;
0;0.25;0.0054794499;0;0;0;0;0;1;0;
0;0.74000001;0.62424201;0;0;0;1;0;0.27083299;0.0054794499;
0;0;0;0;0;1;0;0;0.75999999;0.62424201;
0;0;0;1;0;0.29166701;0.0054794499;0;0;0;
0;0;1;0;0;0.79000002;0.62424201;0;0;0;
1;0;0.3125;0.0054794499;0;0;0;0;0;1;
0;0;0.81;0.59393901;0;0;0;1;0;0.33333299;
0.0054794499;0;0;0;0;0;1;0;0;0.83999997;
0.563636;0;0;0;1;0;0.35416701;0.0054794499;0;0;
0;0;0;1;0;0;0.87;0.563636;0;0;
0;1;0;0.375;0.0054794499;0;0;0;0;0;
1;0;0;0.87;0.563636;0;0;0;1;0;
0.39583299;0.0054794499;0;0;0;0;0;1;0;0;
0.85000002;0.563636;0;0;0;1;0;0.41666701;0.0054794499;0;
0;0;0;0;1;0;0;0.88;0.563636;0;
0;0;1;0;0.4375;0.0054794499;0;0;0;0;
0;1;0;0;0.88999999;0.563636;0;0;0;1;
0;0.47916701;0.0054794499;0;0;0;0;0;1;0;
0;0.92000002;0.533333;0;0;0;1;0;0.5;0.0054794499;
0;0;0;0;0;1;0;0;0.95999998;0.50303;
0;0;0;1;0;0.52083302;0.0054794499;0;0;0;
0;0;1;0;0;0.95999998;0.50303;0;0;0;
1;0;0.54166698;0.0054794499;0;0;0;0;0;1;
0;0;0.95999998;0.533333;0;0;0;1;0;0.5625;
0.0054794499;0;0;0;0;0;1;0;0;0.94999999;
0.50303;0;0;0;1;0;0.58333302;0.0054794499;0;0;
0;0;0;1;0;0;0.94999999;0.50303;0;0;
0;1;0;0.60416698;0.0054794499;0;0;0;0;0;
1;0;0;0.97000003;0.472727;0;0;0;1;0;
0.625;0.0054794499;0;0;0;0;0;1;0;0;
0.97000003;0.472727;0;0;0;1;0;0.64583302;0.0054794499;0;
0;0;0;0;1;0;0;0.99000001;0.472727;0;
0;0;1;0;0.66666698;0.0054794499;0;0;0;0;
0;1;0;0;1;0.472727;0;0;0;1;
0;0.6875;0.0054794499;0;0;0;0;0;1;0;
0;1;0.472727;0;0;0;1;0;0.70833302;0.0054794499;
0;0;0;0;0;1;0;0;1;0.472727;
0;0;0;1;0;0.72916698;0.0054794499;0;0;0;
0;0;1;0;0;0.99000001;0.472727;0;0;0;
1;0;0.75;0.0054794499;0;0;0;0;0;1;
0;0;1;0.472727;0;0;0;1;0;0.77083302;
0.0054794499;0;0;0;0;0;1;0;0;0.97000003;
0.50303;0;0;0;1;0;0.79166698;0.0054794499;0;0;
0;0;0;1;0;0;0.91000003;0.533333;0;0;
0;1;0;0.8125;0.0054794499;0;0;0;0;0;
1;0;0;0.87;0.563636;0;0;0;1;0;
0.83333302;0.0054794499;0;0;0;0;0;1;0;0;
0.83999997;0.62424201;0;0;0;1;0;0.85416698;0.0054794499;0;
0;0;0;0;1;0;0;0.81999999;0.62424201;0;
0;0;1;0;0.875;0.0054794499;0;0;0;0;
0;1;0;0;0.81;0.65454501;0;0;0;1;
0;0.89583302;0.0054794499;0;0;0;0;0;1;0;
0;0.81999999;0.62424201;0;0;0;1;0;0.91666698;0.0054794499;
0;0;0;0;0;1;0;0;0.76999998;0.65454501;
0;0;0;1;0;0.9375;0.0054794499;0;0;0;
0;0;1;0;0;0.77999997;0.65454501;0;0;0;
1;0;0.97916698;0.0054794499;0;0;0;0;0;1;
0;0;0.73000002;0.71515101;0;0;0;1;0;0;
0.0082191797;0;0;0;0;0;0;1;0;0.68000001;
0.74545503;0;0;0;1;0;0.0208333;0.0082191797;0;0;
0;0;0;0;1;0;0.69999999;0.71515101;0;0;
0;1;0;0.041666701;0.0082191797;0;0;0;0;0;
0;1;0;0.57999998;0.77575803;0;0;0;1;0;
0.0625;0.0082191797;0;0;0;0;0;0;1;0;
0.52999997;0.77575803;0;0;0;1;0;0.083333299;0.0082191797;0;
0;0;0;0;0;1;0;0.64999998;0.74545503;0;
0;0;1;0;0.104167;0.0082191797;0;0;0;0;
0;0;1;0;0.67000002;0.74545503;0;0;0;1;
0;0.125;0.0082191797;0;0;0;0;0;0;1;
0;0.67000002;0.77575803;0;0;0;1;0;0.145833;0.0082191797;
0;0;0;0;0;0;1;0;0.66000003;0.74545503;
0;0;0;1;0;0.166667;0.0082191797;0;0;0;
0;0;0;1;0;0.66000003;0.74545503;0;0;0;
1;0;0.1875;0.0082191797;0;0;0;0;0;0;
1;0;0.63;0.74545503;0;0;0;1;0;0.208333;
0.0082191797;0;0;0;0;0;0;1;0;0.67000002;
0.71515101;0;0;0;1;0;0.229167;0.0082191797;0;0;
0;0;0;0;1;0;0.66000003;0.71515101;0;0;
0;1;0;0.25;0.0082191797;0;0;0;0;0;
0;1;0;0.67000002;0.71515101;0;0;0;1;0;
0.27083299;0.0082191797;0;0;0;0;0;0;1;0;
0.64999998;0.68484801;0;0;0;1;0;0.29166701;0.0082191797;0;
0;0;0;0;0;1;0;0.75;0.65454501;0;
0;0;1;0;0.3125;0.0082191797;0;0;0;0;
0;0;1;0;0.79000002;0.62424201;0;0;0;1;
0;0.33333299;0.0082191797;0;0;0;0;0;0;1;
0;0.82999998;0.59393901;0;0;0;1;0;0.35416701;0.0082191797;
0;0;0;0;0;0;1;0;0.83999997;0.59393901;
0;0;0;1;0;0.375;0.0082191797;0;0;0;
0;0;0;1;0;0.86000001;0.59393901;0;0;0;
1;0;0.39583299;0.0082191797;0;0;0;0;0;0;
1;0;0.89999998;0.59393901;0;0;0;1;0;0.41666701;
0.0082191797;0;0;0;0;0;0;1;0;0.91000003;
0.563636;0;0;0;1;0;0.4375;0.0082191797;0;0;
0;0;0;0;1;0;0.92000002;0.563636;0;0;
0;1;0;0.47916701;0.0082191797;0;0;0;0;0;
0;1;0;0.95999998;0.563636;0;0;0;0;1;
0.5;0.0082191797;0;0;0;0;0;0;1;0;
0.95999998;0.563636;0;0;0;0;1;0.52083302;0.0082191797;0;
0;0;0;0;0;1;0;0.95999998;0.563636;0;
0;0;0;1;0.54166698;0.0082191797;0;0;0;0;
0;0;1;0;0.95999998;0.533333;0;0;0;0;
1;0.5625;0.0082191797;0;0;0;0;0;0;1;
0;0.94999999;0.533333;0;0;0;0;1;0.58333302;0.0082191797;
0;0;0;0;0;0;1;0;0.97000003;0.50303;
0;0;0;0;1;0.60416698;0.0082191797;0;0;0;
0;0;0;1;0;0.95999998;0.533333;0;0;0;
0;1;0.625;0.0082191797;0;0;0;0;0;0;
1;0;0.94999999;0.50303;0;0;0;0;1;0.64583302;
0.0082191797;0;0;0;0;0;0;1;0;0.94999999;
0.50303;0;0;0;0;1;0.66666698;0.0082191797;0;0;
0;0;0;0;1;0;0.95999998;0.50303;0;0;
0;0;1;0.6875;0.0082191797;0;0;0;0;0;
0;1;0;0.97000003;0.472727;0;0;0;0;1;
0.70833302;0.0082191797;0;0;0;0;0;0;1;0;
0.97000003;0.472727;0;0;0;0;1;0.72916698;0.0082191797;0;
0;0;0;0;0;1;0;0.98000002;0.472727;0;
0;0;0;1;0.75;0.0082191797;0;0;0;0;
0;0;1;0;0.98000002;0.50303;0;0;0;0;
1;0.77083302;0.0082191797;0;0;0;0;0;0;1;
0;0.97000003;0.533333;0;0;0;0;1;0.79166698;0.0082191797;
0;0;0;0;0;0;1;0;0.95999998;0.563636;
0;0;0;0;1;0.8125;0.0082191797;0;0;0;
0;0;0;1;0;0.94999999;0.59393901;0;0;0;
0;1;0.83333302;0.0082191797;0;0;0;0;0;0;
1;0;0.85000002;0.59393901;0;0;0;0;1;0.85416698;
0.0082191797;0;0;0;0;0;0;1;0;0.81999999;
0.62424201;0;0;0;0;1;0.875;0.0082191797;0;0;
0;0;0;0;1;0;0.81999999;0.62424201;0;0;
0;0;1;0.89583302;0.0082191797;0;0;0;0;0;
0;1;0;0.79000002;0.65454501;0;0;0;0;1;
0.91666698;0.0082191797;0;0;0;0;0;0;1;0;
0.75;0.68484801;0;0;0;0;1;0.9375;0.0082191797;0;
0;0;0;0;0;1;0;0.75;0.68484801;0;
0;0;0;1;0.97916698;0.0082191797;0;0;0;0;
0;0;1;0;0.72000003;0.68484801;0;0;0;0;
1;0;0.0109589;1;0;0;0;0;0;0;
0;0.72000003;0.68484801;0;0;0;0;1;0.0208333;0.0109589;
1;0;0;0;0;0;0;0;0.72000003;0.71515101;
0;0;0;0;1;0.041666701;0.0109589;1;0;0;
0;0;0;0;0;0.70999998;0.71515101;0;0;0;
0;1;0.0625;0.0109589;1;0;0;0;0;0;
0;0;0.69;0.71515101;0;0;0;0;1;0.083333299;
0.0109589;1;0;0;0;0;0;0;0;0.67000002;
0.71515101;0;0;0;0;1;0.104167;0.0109589;1;0;
0;0;0;0;0;0;0.68000001;0.71515101;0;0;
0;0;1;0.125;0.0109589;1;0;0;0;0;
0;0;0;0.68000001;0.74545503;0;0;0;0;1;
0.145833;0.0109589;1;0;0;0;0;0;0;0;
0.67000002;0.71515101;0;0;0;0;1;0.166667;0.0109589;1;
0;0;0;0;0;0;0;0.68000001;0.71515101;0;
0;0;1;0;0.1875;0.0109589;1;0;0;0;
0;0;0;0;0.69;0.68484801;0;0;0;1;
0;0.208333;0.0109589;1;0;0;0;0;0;0;
0;0.70999998;0.68484801;0;0;0;1;0;0.229167;0.0109589;
1;0;0;0;0;0;0;0;0.74000001;0.65454501;
0;0;0;1;0;0.25;0.0109589;1;0;0;
0;0;0;0;0;0.75;0.62424201;0;0;0;
1;0;0.27083299;0.0109589;1;0;0;0;0;0;
0;0;0.74000001;0.62424201;0;0;0;1;0;0.29166701;
0.0109589;1;0;0;0;0;0;0;0;0.75999999;
0.59393901;0;0;0;1;0;0.3125;0.0109589;1;0;
0;0;0;0;0;0;0.74000001;0.59393901;0;0;
0;1;0;0.33333299;0.0109589;1;0;0;0;0;
0;0;0;0.73000002;0.563636;0;0;0;1;0;
0.35416701;0.0109589;1;0;0;0;0;0;0;0;
0.75999999;0.563636;0;0;0;1;0;0.375;0.0109589;1;
0;0;0;0;0;0;0;0.81;0.563636;0;
0;0;1;0;0.39583299;0.0109589;1;0;0;0;
0;0;0;0;0.81;0.563636;0;0;0;1;
0;0.41666701;0.0109589;1;0;0;0;0;0;0;
0;0.81;0.563636;0;0;0;1;0;0.4375;0.0109589;
1;0;0;0;0;0;0;0;0.85000002;0.533333;
0;0;0;1;0;0.47916701;0.0109589;1;0;0;
0;0;0;0;0;0.83999997;0.563636;0;0;0;
0;1;0.5;0.0109589;1;0;0;0;0;0;
0;0;0.83999997;0.563636;0;0;0;0;1;0.52083302;
0.0109589;1;0;0;0;0;0;0;0;0.86000001;
0.563636;0;0;0;0;1;0.54166698;0.0109589;1;0;
0;0;0;0;0;0;0.81999999;0.563636;0;0;
0;0;1;0.5625;0.0109589;1;0;0;0;0;
0;0;0;0.86000001;0.563636;0;0;0;0;1;
0.58333302;0.0109589;1;0;0;0;0;0;0;0;
0.88999999;0.533333;0;0;0;0;1;0.60416698;0.0109589;1;
0;0;0;0;0;0;0;0.91000003;0.533333;0;
0;0;0;1;0.625;0.0109589;1;0;0;0;
0;0;0;0;0.92000002;0.533333;0;0;0;0;
1;0.64583302;0.0109589;1;0;0;0;0;0;0;
0;0.94;0.50303;0;0;0;0;1;0.66666698;0.0109589;
1;0;0;0;0;0;0;0;0.94999999;0.472727;
0;0;0;0;1;0.6875;0.0109589;1;0;0;
0;0;0;0;0;0.95999998;0.472727;0;0;0;
0;1;0.70833302;0.0109589;1;0;0;0;0;0;
0;0;0.98000002;0.442424;0;0;0;0;1;0.72916698;
0.0109589;1;0;0;0;0;0;0;0;0.97000003;
0.442424;0;0;0;0;1;0.75;0.0109589;1;0;
0;0;0;0;0;0;0.94999999;0.472727;0;0;
0;0;1;0.77083302;0.0109589;1;0;0;0;0;
0;0;0;0.91000003;0.50303;0;0;0;0;1;
0.79166698;0.0109589;1;0;0;0;0;0;0;0;
0.83999997;0.563636;0;0;0;0;1;0.8125;0.0109589;1;
0;0;0;0;0;0;0;0.81999999;0.59393901;0;
0;0;0;1;0.83333302;0.0109589;1;0;0;0;
0;0;0;0;0.73000002;0.65454501;0;0;0;0;
1;0.85416698;0.0109589;1;0;0;0;0;0;0;
0;0.74000001;0.62424201;0;0;0;0;1;0.875;0.0109589;
1;0;0;0;0;0;0;0;0.73000002;0.65454501;
0;0;0;0;1;0.89583302;0.0109589;1;0;0;
0;0;0;0;0;0.69999999;0.68484801;0;0;0;
0;1;0.91666698;0.0109589;1;0;0;0;0;0;
0;0;0.69;0.65454501;0;0;0;0;1;0.9375;
0.0109589;1;0;0;0;0;0;0;0;0.69;
0.68484801;0;0;0;0;1;0.97916698;0.0109589;1;0;
0;0;0;0;0;0;0.66000003;0.71515101;0;0;
0;0;1;0;0.0136986;0;1;0;0;0;
0;0;0;0.63;0.71515101;0;0;0;0;1;
0.0208333;0.0136986;0;1;0;0;0;0;0;0;
0.62;0.74545503;0;0;0;0;1;0.041666701;0.0136986;0;
1;0;0;0;0;0;0;0.62;0.74545503;0;
0;0;0;1;0.0625;0.0136986;0;1;0;0;
0;0;0;0;0.63;0.74545503;0;0;0;0;
1;0.083333299;0.0136986;0;1;0;0;0;0;0;
0;0.61000001;0.71515101;0;0;0;0;1;0.104167;0.0136986;
0;1;0;0;0;0;0;0;0.58999997;0.71515101;
0;0;0;0;1;0.125;0.0136986;0;1;0;
0;0;0;0;0;0.60000002;0.71515101;0;0;0;
0;1;0.145833;0.0136986;0;1;0;0;0;0;
0;0;0.58999997;0.71515101;0;0;0;0;1;0.166667;
0.0136986;0;1;0;0;0;0;0;0;0.58999997;
0.71515101;0;0;0;0;1;0.1875;0.0136986;0;1;
0;0;0;0;0;0;0.57999998;0.71515101;0;0;
0;0;1;0.208333;0.0136986;0;1;0;0;0;
0;0;0;0.60000002;0.71515101;0;0;0;0;1;
0.229167;0.0136986;0;1;0;0;0;0;0;0;
0.63999999;0.68484801;0;0;0;0;1;0.25;0.0136986;0;
1;0;0;0;0;0;0;0.63999999;0.68484801;0;
0;0;0;1;0.27083299;0.0136986;0;1;0;0;
0;0;0;0;0.69;0.65454501;0;0;0;0;
1;0.29166701;0.0136986;0;1;0;0;0;0;0;
0;0.70999998;0.65454501;0;0;0;0;1;0.3125;0.0136986;
0;1;0;0;0;0;0;0;0.75;0.62424201;
0;0;0;0;1;0.33333299;0.0136986;0;1;0;
0;0;0;0;0;0.76999998;0.59393901;0;0;0;
0;1;0.35416701;0.0136986;0;1;0;0;0;0;
0;0;0.77999997;0.59393901;0;0;0;0;1;0.375;
0.0136986;0;1;0;0;0;0;0;0;0.79000002;
0.59393901;0;0;0;0;1;0.39583299;0.0136986;0;1;
0;0;0;0;0;0;0.77999997;0.59393901;0;0;
0;0;1;0.41666701;0.0136986;0;1;0;0;0;
0;0;0;0.80000001;0.59393901;0;0;0;0;1;
0.4375;0.0136986;0;1;0;0;0;0;0;0;
0.77999997;0.59393901;0;0;0;0;1;0.47916701;0.0136986;0;
1;0;0;0;0;0;0;0.80000001;0.59393901;0;
0;0;0;1;0.5;0.0136986;0;1;0;0;
0;0;0;0;0.82999998;0.563636;0;0;0;0;
1;0.52083302;0.0136986;0;1;0;0;0;0;0;
0;0.80000001;0.59393901;0;0;1;0;0;0.54166698;0.0136986;
0;1;0;0;0;0;0;0;0.81999999;0.563636;
0;0;1;0;0;0.5625;0.0136986;0;1;0;
0;0;0;0;0;0.83999997;0.563636;0;0;1;
0;0;0.58333302;0.0136986;0;1;0;0;0;0;
0;0;0.83999997;0.563636;0;0;1;0;0;0.60416698;
0.0136986;0;1;0;0;0;0;0;0;0.85000002;
0.563636;0;0;1;0;0;0.625;0.0136986;0;1;
0;0;0;0;0;0;0.83999997;0.563636;0;0;
1;0;0;0.64583302;0.0136986;0;1;0;0;0;
0;0;0;0.83999997;0.563636;0;0;1;0;0;
0.66666698;0.0136986;0;1;0;0;0;0;0;0;
0.82999998;0.563636;0;0;1;0;0;0.70833302;0.0136986;0;
1;0;0;0;0;0;0;0.88999999;0.533333;0;
0;1;0;0;0.72916698;0.0136986;0;1;0;0;
0;0;0;0;0.93000001;0.50303;0;0;1;0;
0;0.75;0.0136986;0;1;0;0;0;0;0;
0;0.89999998;0.533333;0;0;1;0;0;0.77083302;0.0136986;
0;1;0;0;0;0;0;0;0.85000002;0.59393901;
0;0;1;0;0;0.79166698;0.0136986;0;1;0;
0;0;0;0;0;0.82999998;0.59393901;0;0;1;
0;0;0.8125;0.0136986;0;1;0;0;0;0;
0;0;0.79000002;0.62424201;0;0;1;0;0;0.83333302;
0.0136986;0;1;0;0;0;0;0;0;0.75999999;
0.62424201;0;0;1;0;0;0.85416698;0.0136986;0;1;
0;0;0;0;0;0;0.69999999;0.68484801;0;0;
1;0;0;0.875;0.0136986;0;1;0;0;0;
0;0;0;0.69;0.68484801;0;0;1;0;0;
0.89583302;0.0136986;0;1;0;0;0;0;0;0;
0.66000003;0.68484801;0;0;1;0;0;0.91666698;0.0136986;0;
1;0;0;0;0;0;0;0.64999998;0.68484801;0;
0;1;0;0;0.9375;0.0136986;0;1;0;0;
0;0;0;0;0.63;0.71515101;0;0;0;0;
1;0.97916698;0.0136986;0;1;0;0;0;0;0;
0;0.63999999;0.74545503;0;0;0;0;1;0;0.0164384;
0;0;1;0;0;0;0;0;0.63999999;0.71515101;
0;0;0;0;1;0.0208333;0.0164384;0;0;1;
0;0;0;0;0;0.61000001;0.74545503;0;0;0;
0;1;0.041666701;0.0164384;0;0;1;0;0;0;
0;0;0.63;0.74545503;0;0;0;0;1;0.0625;
0.0164384;0;0;1;0;0;0;0;0;0.61000001;
0.74545503;0;0;0;0;1;0.083333299;0.0164384;0;0;
1;0;0;0;0;0;0.63999999;0.74545503;0;0;
0;0;1;0.104167;0.0164384;0;0;1;0;0;
0;0;0;0.62;0.74545503;0;0;0;0;1;
0.125;0.0164384;0;0;1;0;0;0;0;0;
0.68000001;0.74545503;0;0;0;0;1;0.145833;0.0164384;0;
0;1;0;0;0;0;0;0.69999999;0.71515101;0;
0;0;0;1;0.166667;0.0164384;0;0;1;0;
0;0;0;0;0.72000003;0.71515101;0;0;0;0;
1;0.1875;0.0164384;0;0;1;0;0;0;0;
0;0.73000002;0.68484801;0;0;0;0;1;0.208333;0.0164384;
0;0;1;0;0;0;0;0;0.75;0.68484801;
0;0;0;0;1;0.229167;0.0164384;0;0;1;
0;0;0;0;0;0.72000003;0.68484801;0;0;0;
0;1;0.25;0.0164384;0;0;1;0;0;0;
0;0;0.75;0.65454501;0;0;0;0;1;0.27083299;
0.0164384;0;0;1;0;0;0;0;0;0.72000003;
0.62424201;0;0;0;0;1;0.29166701;0.0164384;0;0;
1;0;0;0;0;0;0.74000001;0.62424201;0;0;
0;0;1;0.3125;0.0164384;0;0;1;0;0;
0;0;0;0.75999999;0.59393901;0;0;0;0;1;
0.33333299;0.0164384;0;0;1;0;0;0;0;0;
0.74000001;0.563636;0;0;0;0;1;0.35416701;0.0164384;0;
0;1;0;0;0;0;0;0.76999998;0.563636;0;
0;0;0;1;0.375;0.0164384;0;0;1;0;
0;0;0;0;0.74000001;0.563636;0;0;0;0;
1;0.39583299;0.0164384;0;0;1;0;0;0;0;
0;0.75;0.563636;0;0;0;0;1;0.41666701;0.0164384;
0;0;1;0;0;0;0;0;0.72000003;0.563636;
0;0;0;0;1;0.4375;0.0164384;0;0;1;
0;0;0;0;0;0.75;0.563636;0;0;0;
0;1;0.47916701;0.0164384;0;0;1;0;0;0;
0;0;0.74000001;0.563636;0;0;1;0;0;0.5;
0.0164384;0;0;1;0;0;0;0;0;0.75;
0.563636;0;0;1;0;0;0.52083302;0.0164384;0;0;
1;0;0;0;0;0;0.70999998;0.563636;0;0;
1;0;0;0.54166698;0.0164384;0;0;1;0;0;
0;0;0;0.73000002;0.563636;0;0;1;0;0;
0.5625;0.0164384;0;0;1;0;0;0;0;0;
0.77999997;0.563636;0;0;1;0;0;0.58333302;0.0164384;0;
0;1;0;0;0;0;0;0.77999997;0.533333;0;
0;1;0;0;0.60416698;0.0164384;0;0;1;0;
0;0;0;0;0.80000001;0.533333;0;0;1;0;
0;0.625;0.0164384;0;0;1;0;0;0;0;
0;0.85000002;0.533333;0;0;1;0;0;0.64583302;0.0164384;
0;0;1;0;0;0;0;0;0.87;0.50303;
0;0;1;0;0;0.66666698;0.0164384;0;0;1;
0;0;0;0;0;0.88;0.50303;0;0;1;
0;0;0.6875;0.0164384;0;0;1;0;0;0;
0;0;0.93000001;0.50303;0;0;1;0;0;0.70833302;
0.0164384;0;0;1;0;0;0;0;0;0.93000001;
0.472727;0;0;1;0;0;0.72916698;0.0164384;0;0;
1;0;0;0;0;0;0.92000002;0.472727;0;0;
1;0;0;0.75;0.0164384;0;0;1;0;0;
0;0;0;0.91000003;0.472727;0;0;1;0;0;
0.77083302;0.0164384;0;0;1;0;0;0;0;0;
0.88999999;0.50303;0;0;1;0;0;0.79166698;0.0164384;0;
0;1;0;0;0;0;0;0.85000002;0.533333;0;
0;1;0;0;0.8125;0.0164384;0;0;1;0;
0;0;0;0;0.81999999;0.563636;0;0;1;0;
0;0.83333302;0.0164384;0;0;1;0;0;0;0;
0;0.76999998;0.59393901;0;0;1;0;0;0.85416698;0.0164384;
0;0;1;0;0;0;0;0;0.73000002;0.62424201;
0;0;1;0;0;0.875;0.0164384;0;0;1;
0;0;0;0;0;0.72000003;0.62424201;0;0;1;
0;0;0.91666698;0.0164384;0;0;1;0;0;0;
0;0;0.69;0.65454501;0;0;1;0;0;0.9375;
0.0164384;0;0;1;0;0;0;0;0;0.69999999;
0.65454501;0;0;1;0;0;0.97916698;0.0164384;0;0;
1;0;0;0;0;0;0.61000001;0.80606103;0;0;
1;0;0;0;0.0191781;0;0;0;1;0;
0;0;0;0.69;0.71515101;0;0;1;0;0;
0.0208333;0.0191781;0;0;0;1;0;0;0;0;
0.66000003;0.71515101;0;0;1;0;0;0.041666701;0.0191781;0;
0;0;1;0;0;0;0;0.69999999;0.68484801;0;
0;1;0;0;0.0625;0.0191781;0;0;0;1;
0;0;0;0;0.64999998;0.68484801;0;0;1;0;
0;0.083333299;0.0191781;0;0;0;1;0;0;0;
0;0.64999998;0.71515101;0;0;1;0;0;0.104167;0.0191781;
0;0;0;1;0;0;0;0;0.62;0.71515101;
0;0;1;0;0;0.125;0.0191781;0;0;0;
1;0;0;0;0;0.63;0.71515101;0;0;1;
0;0;0.145833;0.0191781;0;0;0;1;0;0;
0;0;0.56999999;0.74545503;0;0;1;0;0;0.166667;
0.0191781;0;0;0;1;0;0;0;0;0.61000001;
0.71515101;0;0;0;0;1;0.1875;0.0191781;0;0;
0;1;0;0;0;0;0.52999997;0.74545503;0;0;
0;0;1;0.208333;0.0191781;0;0;0;1;0;
0;0;0;0.61000001;0.71515101;0;0;0;0;1;
0.229167;0.0191781;0;0;0;1;0;0;0;0;
0.58999997;0.71515101;0;0;0;0;1;0.25;0.0191781;0;
0;0;1;0;0;0;0;0.63;0.68484801;0;
0;0;0;1;0.27083299;0.0191781;0;0;0;1;
0;0;0;0;0.68000001;0.65454501;0;0;0;0;
1;0.29166701;0.0191781;0;0;0;1;0;0;0;
0;0.74000001;0.62424201;0;0;0;0;1;0.3125;0.0191781;
0;0;0;1;0;0;0;0;0.75;0.62424201;
0;0;0;0;1;0.33333299;0.0191781;0;0;0;
1;0;0;0;0;0.76999998;0.59393901;0;0;0;
0;1;0.35416701;0.0191781;0;0;0;1;0;0;
0;0;0.80000001;0.59393901;0;0;0;0;1;0.375;
0.0191781;0;0;0;1;0;0;0;0;0.80000001;
0.59393901;0;0;0;0;1;0.39583299;0.0191781;0;0;
0;1;0;0;0;0;0.79000002;0.59393901;0;0;
0;0;1;0.41666701;0.0191781;0;0;0;1;0;
0;0;0;0.80000001;0.59393901;0;0;0;0;1;
0.4375;0.0191781;0;0;0;1;0;0;0;0;
0.80000001;0.59393901;0;0;0;0;1;0.47916701;0.0191781;0;
0;0;1;0;0;0;0;0.79000002;0.59393901;0;
0;0;1;0;0.5;0.0191781;0;0;0;1;
0;0;0;0;0.81;0.59393901;0;0;0;1;
0;0.52083302;0.0191781;0;0;0;1;0;0;0;
0;0.81999999;0.59393901;0;0;0;1;0;0.54166698;0.0191781;
0;0;0;1;0;0;0;0;0.82999998;0.59393901;
0;0;0;1;0;0.5625;0.0191781;0;0;0;
1;0;0;0;0;0.82999998;0.563636;0;0;0;
1;0;0.58333302;0.0191781;0;0;0;1;0;0;
0;0;0.83999997;0.563636;0;0;1;0;0;0.60416698;
0.0191781;0;0;0;1;0;0;0;0;0.82999998;
0.563636;0;0;1;0;0;0.625;0.0191781;0;0;
0;1;0;0;0;0;0.82999998;0.563636;0;0;
1;0;0;0.64583302;0.0191781;0;0;0;1;0;
0;0;0;0.81;0.59393901;0;0;1;0;0;
0.66666698;0.0191781;0;0;0;1;0;0;0;0;
0.81;0.59393901;0;0;1;0;0;0.6875;0.0191781;0;
0;0;1;0;0;0;0;0.81;0.59393901;0;
0;1;0;0;0.70833302;0.0191781;0;0;0;1;
0;0;0;0;0.80000001;0.59393901;0;0;1;0;
0;0.72916698;0.0191781;0;0;0;1;0;0;0;
0;0.80000001;0.59393901;0;0;1;0;0;0.75;0.0191781;
0;0;0;1;0;0;0;0;0.79000002;0.59393901;
0;0;1;0;0;0.77083302;0.0191781;0;0;0;
1;0;0;0;0;0.77999997;0.59393901;0;0;1;
0;0;0.79166698;0.0191781;0;0;0;1;0;0;
0;0;0.79000002;0.59393901;0;0;1;0;0;0.8125;
0.0191781;0;0;0;1;0;0;0;0;0.77999997;
0.62424201;0;0;1;0;0;0.83333302;0.0191781;0;0;
0;1;0;0;0;0;0.77999997;0.62424201;0;0;
1;0;0;0.85416698;0.0191781;0;0;0;1;0;
0;0;0;0.80000001;0.62424201;0;0;1;0;0;
0.875;0.0191781;0;0;0;1;0;0;0;0;
0.77999997;0.65454501;0;0;1;0;0;0.89583302;0.0191781;0;
0;0;1;0;0;0;0;0.70999998;0.65454501;0;
0;1;0;0;0.91666698;0.0191781;0;0;0;1;
0;0;0;0;0.69;0.65454501;0;0;1;0;
0;0.9375;0.0191781;0;0;0;1;0;0;0;
0;0.69;0.65454501;0;0;1;0;0;0.97916698;0.0191781;
0;0;0;1;0;0;0;0;0.62;0.71515101;
0;0;1;0;0;0;0.021917799;0;0;0;
0;1;0;0;0;0.60000002;0.71515101;0;0;1;
0;0;0.0208333;0.021917799;0;0;0;0;1;0;
0;0;0.60000002;0.71515101;0;0;1;0;0;0.041666701;
0.021917799;0;0;0;0;1;0;0;0;0.57999998;
0.74545503;0;0;1;0;0;0.0625;0.021917799;0;0;
0;0;1;0;0;0;0.63;0.71515101;0;0;
1;0;0;0.083333299;0.021917799;0;0;0;0;1;
0;0;0;0.63999999;0.68484801;0;0;1;0;0;
0.104167;0.021917799;0;0;0;0;1;0;0;0;
0.64999998;0.68484801;0;0;1;0;0;0.125;0.021917799;0;
0;0;0;1;0;0;0;0.58999997;0.74545503;0;
0;1;0;0;0.145833;0.021917799;0;0;0;0;
1;0;0;0;0.62;0.71515101;0;0;1;0;
0;0.166667;0.021917799;0;0;0;0;1;0;0;
0;0.63;0.71515101;0;0;1;0;0;0.1875;0.021917799;
0;0;0;0;1;0;0;0;0.63;0.68484801;
0;0;1;0;0;0.208333;0.021917799;0;0;0;
0;1;0;0;0;0.63999999;0.68484801;0;0;1;
0;0;0.229167;0.021917799;0;0;0;0;1;0;
0;0;0.66000003;0.68484801;0;0;1;0;0;0.25;
0.021917799;0;0;0;0;1;0;0;0;0.69;
0.65454501;0;0;1;0;0;0.27083299;0.021917799;0;0;
0;0;1;0;0;0;0.69999999;0.65454501;0;0;
1;0;0;0.3125;0.021917799;0;0;0;0;1;
0;0;0;0.88;0.59393901;0;0;1;0;0;
0.33333299;0.021917799;0;0;0;0;1;0;0;0;
0.89999998;0.59393901;0;0;1;0;0;0.35416701;0.021917799;0;
0;0;0;1;0;0;0;0.86000001;0.59393901;0;
0;1;0;0;0.375;0.021917799;0;0;0;0;
1;0;0;0;0.87;0.563636;0;0;1;0;
0;0.39583299;0.021917799;0;0;0;0;1;0;0;
0;0.87;0.563636;0;0;1;0;0;0.41666701;0.021917799;
0;0;0;0;1;0;0;0;0.91000003;0.563636;
0;0;1;0;0;0.4375;0.021917799;0;0;0;
0;1;0;0;0;0.89999998;0.563636;0;0;1;
0;0;0.47916701;0.021917799;0;0;0;0;1;0;
0;0;0.89999998;0.563636;0;0;0;0;1;0.5;
0.021917799;0;0;0;0;1;0;0;0;0.91000003;
0.563636;0;0;0;0;1;0.52083302;0.021917799;0;0;
0;0;1;0;0;0;0.89999998;0.533333;0;0;
0;0;1;0.54166698;0.021917799;0;0;0;0;1;
0;0;0;0.91000003;0.533333;0;0;0;0;1;
0.5625;0.021917799;0;0;0;0;1;0;0;0;
0.92000002;0.533333;0;0;0;0;1;0.58333302;0.021917799;0;
0;0;0;1;0;0;0;0.94;0.533333;0;
0;0;0;1;0.60416698;0.021917799;0;0;0;0;
1;0;0;0;0.97000003;0.50303;0;0;0;0;
1;0.625;0.021917799;0;0;0;0;1;0;0;
0;0.95999998;0.50303;0;0;0;0;1;0.64583302;0.021917799;
0;0;0;0;1;0;0;0;0.97000003;0.50303;
0;0;0;0;1;0.66666698;0.021917799;0;0;0;
0;1;0;0;0;0.97000003;0.533333;0;0;0;
0;1;0.6875;0.021917799;0;0;0;0;1;0;
0;0;0.97000003;0.533333;0;0;0;0;1;0.70833302;
0.021917799;0;0;0;0;1;0;0;0;0.94999999;
0.533333;0;0;0;0;1;0.72916698;0.021917799;0;0;
0;0;1;0;0;0;0.94999999;0.533333;0;0;
0;0;1;0.75;0.021917799;0;0;0;0;1;
0;0;0;0.94999999;0.563636;0;0;0;0;1;
0.77083302;0.021917799;0;0;0;0;1;0;0;0;
0.94;0.563636;0;0;0;0;1;0.79166698;0.021917799;0;
0;0;0;1;0;0;0;0.94;0.59393901;0;
0;0;0;1;0.8125;0.021917799;0;0;0;0;
1;0;0;0;0.89999998;0.65454501;0;0;0;0;
1;0.83333302;0.021917799;0;0;0;0;1;0;0;
0;0.83999997;0.65454501;0;0;0;0;1;0.85416698;0.021917799;
0;0;0;0;1;0;0;0;0.80000001;0.65454501;
0;0;0;0;1;0.875;0.021917799;0;0;0;
0;1;0;0;0;0.75999999;0.68484801;0;0;0;
0;1;0.89583302;0.021917799;0;0;0;0;1;0;
0;0;0.76999998;0.68484801;0;0;0;0;1;0.91666698;
0.021917799;0;0;0;0;1;0;0;0;0.72000003;
0.71515101;0;0;0;0;1;0.9375;0.021917799;0;0;
0;0;1;0;0;0;0.70999998;0.68484801;0;0;
0;0;1;0.97916698;0.021917799;0;0;0;0;1;
0;0;0;0.66000003;0.74545503;0;0;0;0;1;
0;0.024657501;0;0;0;0;0;1;0;0;
0.63;0.74545503;0;0;0;0;1;0.0208333;0.024657501;0;
0;0;0;0;1;0;0;0.63999999;0.74545503;0;
0;0;0;1;0.041666701;0.024657501;0;0;0;0;
0;1;0;0;0.62;0.74545503;0;0;0;0;
1;0.0625;0.024657501;0;0;0;0;0;1;0;
0;0.62;0.74545503;0;0;0;0;1;0.083333299;0.024657501;
0;0;0;0;0;1;0;0;0.62;0.77575803;
0;0;0;0;1;0.104167;0.024657501;0;0;0;
0;0;1;0;0;0.63999999;0.74545503;0;0;0;
0;1;0.125;0.024657501;0;0;0;0;0;1;
0;0;0.58999997;0.77575803;0;0;0;0;1;0.145833;
0.024657501;0;0;0;0;0;1;0;0;0.62;
0.74545503;0;0;0;0;1;0.166667;0.024657501;0;0;
0;0;0;1;0;0;0.63999999;0.74545503;0;0;
0;1;0;0.1875;0.024657501;0;0;0;0;0;
1;0;0;0.64999998;0.74545503;0;0;0;1;0;
0.208333;0.024657501;0;0;0;0;0;1;0;0;
0.64999998;0.74545503;0;0;0;1;0;0.229167;0.024657501;0;
0;0;0;0;1;0;0;0.64999998;0.71515101;0;
0;0;1;0;0.25;0.024657501;0;0;0;0;
0;1;0;0;0.68000001;0.68484801;0;0;0;1;
0;0.27083299;0.024657501;0;0;0;0;0;1;0;
0;0.69999999;0.68484801;0;0;0;1;0;0.29166701;0.024657501;
0;0;0;0;0;1;0;0;0.74000001;0.68484801;
0;0;0;1;0;0.3125;0.024657501;0;0;0;
0;0;1;0;0;0.77999997;0.65454501;0;0;0;
1;0;0.33333299;0.024657501;0;0;0;0;0;1;
0;0;0.80000001;0.62424201;0;0;0;1;0;0.35416701;
0.024657501;0;0;0;0;0;1;0;0;0.82999998;
0.62424201;0;0;0;1;0;0.375;0.024657501;0;0;
0;0;0;1;0;0;0.85000002;0.62424201;0;0;
0;1;0;0.39583299;0.024657501;0;0;0;0;0;
1;0;0;0.85000002;0.62424201;0;0;0;1;0;
0.41666701;0.024657501;0;0;0;0;0;1;0;0;
0.85000002;0.62424201;0;0;0;1;0;0.4375;0.024657501;0;
0;0;0;0;1;0;0;0.85000002;0.62424201;0;
0;0;1;0;0.47916701;0.024657501;0;0;0;0;
0;1;0;0;0.87;0.62424201;0;0;0;0;
1;0.5;0.024657501;0;0;0;0;0;1;0;
0;0.86000001;0.62424201;0;0;0;0;1;0.52083302;0.024657501;
0;0;0;0;0;1;0;0;0.88;0.62424201;
0;0;0;0;1;0.54166698;0.024657501;0;0;0;
0;0;1;0;0;0.88999999;0.62424201;0;0;0;
0;1;0.5625;0.024657501;0;0;0;0;0;1;
0;0;0.87;0.62424201;0;0;0;0;1;0.58333302;
0.024657501;0;0;0;0;0;1;0;0;0.88999999;
0.59393901;0;0;0;0;1;0.60416698;0.024657501;0;0;
0;0;0;1;0;0;0.88;0.59393901;0;0;
0;0;1;0.625;0.024657501;0;0;0;0;0;
1;0;0;0.88;0.59393901;0;0;0;0;1;
0.64583302;0.024657501;0;0;0;0;0;1;0;0;
0.85000002;0.62424201;0;0;0;0;1;0.66666698;0.024657501;0;
0;0;0;0;1;0;0;0.87;0.59393901;0;
0;0;0;1;0.6875;0.024657501;0;0;0;0;
0;1;0;0;0.88;0.59393901;0;0;0;0;
1;0.70833302;0.024657501;0;0;0;0;0;1;0;
0;0.86000001;0.59393901;0;0;0;0;1;0.72916698;0.024657501;
0;0;0;0;0;1;0;0;0.87;0.563636;
0;0;0;0;1;0.75;0.024657501;0;0;0;
0;0;1;0;0;0.83999997;0.59393901;0;0;0;
0;1;0.77083302;0.024657501;0;0;0;0;0;1;
0;0;0.82999998;0.59393901;0;0;0;0;1;0.79166698;
0.024657501;0;0;0;0;0;1;0;0;0.80000001;
0.62424201;0;0;0;0;1;0.8125;0.024657501;0;0;
0;0;0;1;0;0;0.77999997;0.62424201;0;0;
0;0;1;0.83333302;0.024657501;0;0;0;0;0;
1;0;0;0.70999998;0.65454501;0;0;0;0;1;
0.85416698;0.024657501;0;0;0;0;0;1;0;0;
0.64999998;0.68484801;0;0;0;0;1;0.875;0.024657501;0;
0;0;0;0;1;0;0;0.63;0.68484801;0;
0;0;0;1;0.89583302;0.024657501;0;0;0;0;
0;1;0;0;0.60000002;0.71515101;0;0;0;0;
1;0.91666698;0.024657501;0;0;0;0;0;1;0;
0;0.62;0.71515101;0;0;0;0;1;0.9375;0.024657501;
0;0;0;0;0;1;0;0;0.62;0.71515101;
0;0;0;0;1;0.97916698;0.024657501;0;0;0;
0;0;1;0;0;0.54000002;0.74545503;0;0;0;
1;0;0;0.027397299;0;0;0;0;0;0;
1;0;0.55000001;0.74545503;0;0;0;1;0;0.0208333;
0.027397299;0;0;0;0;0;0;1;0;0.54000002;
0.74545503;0;0;0;1;0;0.041666701;0.027397299;0;0;
0;0;0;0;1;0;0.54000002;0.74545503;0;0;
0;1;0;0.0625;0.027397299;0;0;0;0;0;
0;1;0;0.50999999;0.74545503;0;0;0;1;0;
0.083333299;0.027397299;0;0;0;0;0;0;1;0;
0.56;0.74545503;0;0;0;1;0;0.104167;0.027397299;0;
0;0;0;0;0;1;0;0.54000002;0.74545503;0;
0;0;1;0;0.125;0.027397299;0;0;0;0;
0;0;1;0;0.52999997;0.74545503;0;0;0;1;
0;0.145833;0.027397299;0;0;0;0;0;0;1;
0;0.56;0.74545503;0;0;0;1;0;0.166667;0.027397299;
0;0;0;0;0;0;1;0;0.56;0.71515101;
0;0;0;1;0;0.1875;0.027397299;0;0;0;
0;0;0;1;0;0.57999998;0.71515101;0;0;0;
1;0;0.208333;0.027397299;0;0;0;0;0;0;
1;0;0.60000002;0.71515101;0;0;0;1;0;0.229167;
0.027397299;0;0;0;0;0;0;1;0;0.60000002;
0.68484801;0;0;0;1;0;0.25;0.027397299;0;0;
0;0;0;0;1;0;0.62;0.65454501;0;0;
0;1;0;0.27083299;0.027397299;0;0;0;0;0;
0;1;0;0.64999998;0.65454501;0;0;0;1;0;
0.29166701;0.027397299;0;0;0;0;0;0;1;0;
0.67000002;0.62424201;0;0;0;1;0;0.3125;0.027397299;0;
0;0;0;0;0;1;0;0.66000003;0.62424201;0;
0;0;1;0;0.33333299;0.027397299;0;0;0;0;
0;0;1;0;0.69;0.59393901;0;0;0;1;
0;0.35416701;0.027397299;0;0;0;0;0;0;1;
0;0.73000002;0.59393901;0;0;0;1;0;0.375;0.027397299;
0;0;0;0;0;0;1;0;0.74000001;0.59393901;
0;0;0;1;0;0.39583299;0.027397299;0;0;0;
0;0;0;1;0;0.75;0.59393901;0;0;0;
1;0;0.41666701;0.027397299;0;0;0;0;0;0;
1;0;0.76999998;0.59393901;0;0;0;1;0;0.4375;
0.027397299;0;0;0;0;0;0;1;0;0.76999998;
0.59393901;0;0;0;1;0;0.47916701;0.027397299;0;0;
0;0;0;0;1;0;0.79000002;0.59393901;0;0;
0;0;1;0.5;0.027397299;0;0;0;0;0;
0;1;0;0.77999997;0.59393901;0;0;0;0;1;
0.52083302;0.027397299;0;0;0;0;0;0;1;0;
0.79000002;0.59393901;0;0;0;0;1;0.54166698;0.027397299;0;
0;0;0;0;0;1;0;0.80000001;0.59393901;0;
0;0;0;1;0.5625;0.027397299;0;0;0;0;
0;0;1;0;0.79000002;0.59393901;0;0;0;0;
1;0.58333302;0.027397299;0;0;0;0;0;0;1;
0;0.79000002;0.59393901;0;0;0;0;1;0.60416698;0.027397299;
0;0;0;0;0;0;1;0;0.81999999;0.59393901;
0;0;0;0;1;0.625;0.027397299;0;0;0;
0;0;0;1;0;0.82999998;0.59393901;0;0;0;
0;1;0.64583302;0.027397299;0;0;0;0;0;0;
1;0;0.83999997;0.59393901;0;0;0;0;1;0.66666698;
0.027397299;0;0;0;0;0;0;1;0;0.83999997;
0.59393901;0;0;0;0;1;0.6875;0.027397299;0;0;
0;0;0;0;1;0;0.83999997;0.62424201;0;0;
0;0;1;0.70833302;0.027397299;0;0;0;0;0;
0;1;0;0.83999997;0.59393901;0;0;0;0;1;
0.72916698;0.027397299;0;0;0;0;0;0;1;0;
0.86000001;0.59393901;0;0;0;0;1;0.75;0.027397299;0;
0;0;0;0;0;1;0;0.86000001;0.59393901;0;
0;0;0;1;0.77083302;0.027397299;0;0;0;0;
0;0;1;0;0.82999998;0.62424201;0;0;0;0;
1;0.79166698;0.027397299;0;0;0;0;0;0;1;
0;0.81;0.65454501;0;0;0;0;1;0.8125;0.027397299;
0;0;0;0;0;0;1;0;0.79000002;0.65454501;
0;0;0;0;1;0.83333302;0.027397299;0;0;0;
0;0;0;1;0;0.76999998;0.65454501;0;0;0;
0;1;0.85416698;0.027397299;0;0;0;0;0;0;
1;0;0.73000002;0.68484801;0;0;0;0;1;0.875;
0.027397299;0;0;0;0;0;0;1;0;0.70999998;
0.68484801;0;0;0;0;1;0.89583302;0.027397299;0;0;
0;0;0;0;1;0;0.69999999;0.68484801;0;0;
0;0;1;0.91666698;0.027397299;0;0;0;0;0;
0;1;0;0.69;0.71515101;0;0;0;0;1;
0.9375;0.027397299;0;0;0;0;0;0;1;0;
0.69;0.71515101;0;0;0;0;1;0.97916698;0.027397299;0;
0;0;0;0;0;1;0;0.64999998;0.74545503;0;
0;0;0;1;0;0.030137001;1;0;0;0;
0;0;0;0;0.60000002;0.74545503;0;0;0;0;
1;0.0208333;0.030137001;1;0;0;0;0;0;0;
0;0.60000002;0.74545503;0;0;0;0;1;0.041666701;0.030137001;
1;0;0;0;0;0;0;0;0.63;0.74545503;
0;0;0;0;1;0.0625;0.030137001;1;0;0;
0;0;0;0;0;0.64999998;0.74545503;0;0;0;
0;1;0.083333299;0.030137001;1;0;0;0;0;0;
0;0;0.64999998;0.74545503;0;0;0;0;1;0.104167;
0.030137001;1;0;0;0;0;0;0;0;0.63999999;
0.77575803;0;0;0;0;1;0.125;0.030137001;1;0;
0;0;0;0;0;0;0.64999998;0.77575803;0;0;
0;0;1;0.145833;0.030137001;1;0;0;0;0;
0;0;0;0.69999999;0.74545503;0;0;0;0;1;
0.166667;0.030137001;1;0;0;0;0;0;0;0;
0.68000001;0.74545503;0;0;0;0;1;0.1875;0.030137001;1;
0;0;0;0;0;0;0;0.73000002;0.71515101;0;
0;0;0;1;0.208333;0.030137001;1;0;0;0;
0;0;0;0;0.75999999;0.71515101;0;0;0;0;
1;0.229167;0.030137001;1;0;0;0;0;0;0;
0;0.77999997;0.68484801;0;0;0;0;1;0.25;0.030137001;
1;0;0;0;0;0;0;0;0.76999998;0.71515101;
0;0;0;0;1;0.27083299;0.030137001;1;0;0;
0;0;0;0;0;0.75999999;0.71515101;0;0;0;
0;1;0.29166701;0.030137001;1;0;0;0;0;0;
0;0;0.77999997;0.68484801;0;0;0;0;1;0.3125;
0.030137001;1;0;0;0;0;0;0;0;0.81999999;
0.65454501;0;0;0;0;1;0.33333299;0.030137001;1;0;
0;0;0;0;0;0;0.82999998;0.65454501;0;0;
0;0;1;0.35416701;0.030137001;1;0;0;0;0;
0;0;0;0.85000002;0.65454501;0;0;0;0;1;
0.375;0.030137001;1;0;0;0;0;0;0;0;
0.86000001;0.65454501;0;0;0;0;1;0.39583299;0.030137001;1;
0;0;0;0;0;0;0;0.88;0.65454501;0;
0;0;0;1;0.41666701;0.030137001;1;0;0;0;
0;0;0;0;0.88;0.62424201;0;0;0;0;
1;0.4375;0.030137001;1;0;0;0;0;0;0;
0;0.88;0.62424201;0;0;0;0;1;0.47916701;0.030137001;
1;0;0;0;0;0;0;0;0.81999999;0.62424201;
0;0;0;0;1;0.5;0.030137001;1;0;0;
0;0;0;0;0;0.80000001;0.62424201;0;0;0;
0;1;0.52083302;0.030137001;1;0;0;0;0;0;
0;0;0.77999997;0.62424201;0;0;0;0;1;0.54166698;
0.030137001;1;0;0;0;0;0;0;0;0.80000001;
0.62424201;0;0;0;0;1;0.5625;0.030137001;1;0;
0;0;0;0;0;0;0.83999997;0.59393901;0;0;
0;0;1;0.58333302;0.030137001;1;0;0;0;0;
0;0;0;0.82999998;0.62424201;0;0;0;0;1;
0.60416698;0.030137001;1;0;0;0;0;0;0;0;
0.81;0.59393901;0;0;0;0;1;0.625;0.030137001;1;
0;0;0;0;0;0;0;0.82999998;0.59393901;0;
0;0;0;1;0.64583302;0.030137001;1;0;0;0;
0;0;0;0;0.80000001;0.59393901;0;0;0;0;
1;0.66666698;0.030137001;1;0;0;0;0;0;0;
0;0.81999999;0.59393901;0;0;0;0;1;0.6875;0.030137001;
1;0;0;0;0;0;0;0;0.82999998;0.59393901;
0;0;0;0;1;0.70833302;0.030137001;1;0;0;
0;0;0;0;0;0.85000002;0.563636;0;0;0;
0;1;0.72916698;0.030137001;1;0;0;0;0;0;
0;0;0.82999998;0.563636;0;0;0;0;1;0.75;
0.030137001;1;0;0;0;0;0;0;0;0.83999997;
0.563636;0;0;0;0;1;0.77083302;0.030137001;1;0;
0;0;0;0;0;0;0.81;0.59393901;0;0;
0;0;1;0.79166698;0.030137001;1;0;0;0;0;
0;0;0;0.81;0.59393901;0;0;0;0;1;
0.8125;0.030137001;1;0;0;0;0;0;0;0;
0.75999999;0.62424201;0;0;0;0;1;0.83333302;0.030137001;1;
0;0;0;0;0;0;0;0.73000002;0.65454501;0;
0;0;0;1;0.85416698;0.030137001;1;0;0;0;
0;0;0;0;0.69;0.65454501;0;0;0;0;
1;0.875;0.030137001;1;0;0;0;0;0;0;
0;0.67000002;0.68484801;0;0;0;0;1;0.89583302;0.030137001;
1;0;0;0;0;0;0;0;0.66000003;0.68484801;
0;0;0;0;1;0.91666698;0.030137001;1;0;0;
0;0;0;0;0;0.63999999;0.71515101;0;0;0;
0;1;0.9375;0.030137001;1;0;0;0;0;0;
0;0;0.63;0.71515101;0;0;0;1;0;0.97916698;
0.030137001;1;0;0;0;0;0;0;0;0.62;
0.71515101;0;0;0;1;0;0;0.0328767;0;1;
0;0;0;0;0;0;0.63;0.71515101;0;0;
0;1;0;0.0208333;0.0328767;0;1;0;0;0;
0;0;0;0.62;0.71515101;0;0;0;1;0;
0.041666701;0.0328767;0;1;0;0;0;0;0;0;
0.62;0.74545503;0;0;0;1;0;0.0625;0.0328767;0;
1;0;0;0;0;0;0;0.60000002;0.74545503;0;
0;0;1;0;0.083333299;0.0328767;0;1;0;0;
0;0;0;0;0.63;0.71515101;0;0;0;1;
0;0.104167;0.0328767;0;1;0;0;0;0;0;
0;0.61000001;0.74545503;0;0;0;1;0;0.125;0.0328767;
0;1;0;0;0;0;0;0;0.61000001;0.71515101;
0;0;0;1;0;0.145833;0.0328767;0;1;0;
0;0;0;0;0;0.60000002;0.74545503;0;0;0;
1;0;0.166667;0.0328767;0;1;0;0;0;0;
0;0;0.62;0.71515101;0;0;0;0;1;0.1875;
0.0328767;0;1;0;0;0;0;0;0;0.63;
0.71515101;0;0;0;0;1;0.208333;0.0328767;0;1;
0;0;0;0;0;0;0.63999999;0.71515101;0;0;
0;0;1;0.229167;0.0328767;0;1;0;0;0;
0;0;0;0.67000002;0.68484801;0;0;0;0;1;
0.25;0.0328767;0;1;0;0;0;0;0;0;
0.69;0.68484801;0;0;0;0;1;0.27083299;0.0328767;0;
1;0;0;0;0;0;0;0.69999999;0.65454501;0;
0;0;0;1;0.29166701;0.0328767;0;1;0;0;
0;0;0;0;0.74000001;0.65454501;0;0;0;0;
1;0.3125;0.0328767;0;1;0;0;0;0;0;
0;0.75;0.62424201;0;0;0;0;1;0.33333299;0.0328767;
0;1;0;0;0;0;0;0;0.77999997;0.59393901;
0;0;0;0;1;0.35416701;0.0328767;0;1;0;
0;0;0;0;0;0.80000001;0.59393901;0;0;0;
0;1;0.375;0.0328767;0;1;0;0;0;0;
0;0;0.80000001;0.59393901;0;0;0;0;1;0.39583299;
0.0328767;0;1;0;0;0;0;0;0;0.80000001;
0.563636;0;0;0;0;1;0.41666701;0.0328767;0;1;
0;0;0;0;0;0;0.79000002;0.563636;0;0;
0;0;1;0.4375;0.0328767;0;1;0;0;0;
0;0;0;0.81;0.563636;0;0;0;0;1;
0.47916701;0.0328767;0;1;0;0;0;0;0;0;
0.81999999;0.563636;0;0;0;0;1;0.5;0.0328767;0;
1;0;0;0;0;0;0;0.83999997;0.533333;0;
0;0;0;1;0.52083302;0.0328767;0;1;0;0;
0;0;0;0;0.82999998;0.533333;0;0;0;0;
1;0.54166698;0.0328767;0;1;0;0;0;0;0;
0;0.85000002;0.533333;0;0;0;0;1;0.5625;0.0328767;
0;1;0;0;0;0;0;0;0.85000002;0.533333;
0;0;0;0;1;0.58333302;0.0328767;0;1;0;
0;0;0;0;0;0.85000002;0.533333;0;0;0;
0;1;0.60416698;0.0328767;0;1;0;0;0;0;
0;0;0.82999998;0.533333;0;0;0;0;1;0.625;
0.0328767;0;1;0;0;0;0;0;0;0.81999999;
0.533333;0;0;0;0;1;0.64583302;0.0328767;0;1;
0;0;0;0;0;0;0.81;0.533333;0;0;
0;0;1;0.66666698;0.0328767;0;1;0;0;0;
0;0;0;0.85000002;0.533333;0;0;0;0;1;
0.6875;0.0328767;0;1;0;0;0;0;0;0;
0.85000002;0.533333;0;0;0;0;1;0.70833302;0.0328767;0;
1;0;0;0;0;0;0;0.85000002;0.533333;0;
0;0;0;1;0.72916698;0.0328767;0;1;0;0;
0;0;0;0;0.86000001;0.533333;0;0;0;0;
1;0.75;0.0328767;0;1;0;0;0;0;0;
0;0.88999999;0.50303;0;0;0;0;1;0.77083302;0.0328767;
0;1;0;0;0;0;0;0;0.87;0.533333;
0;0;0;0;1;0.79166698;0.0328767;0;1;0;
0;0;0;0;0;0.81999999;0.563636;0;0;0;
0;1;0.8125;0.0328767;0;1;0;0;0;0;
0;0;0.76999998;0.59393901;0;0;0;0;1;0.83333302;
0.0328767;0;1;0;0;0;0;0;0;0.70999998;
0.59393901;0;0;0;0;1;0.85416698;0.0328767;0;1;
0;0;0;0;0;0;0.69;0.62424201;0;0;
0;0;1;0.875;0.0328767;0;1;0;0;0;
0;0;0;0.66000003;0.62424201;0;0;0;0;1;
0.89583302;0.0328767;0;1;0;0;0;0;0;0;
0.66000003;0.62424201;0;0;0;0;1;0.91666698;0.0328767;0;
1;0;0;0;0;0;0;0.63;0.65454501;0;
0;0;0;1;0.9375;0.0328767;0;1;0;0;
0;0;0;0;0.63;0.68484801;0;0;0;1;
0;0.97916698;0.0328767;0;1;0;0;0;0;0;
0;0.61000001;0.68484801;0;0;0;1;0;0;0.035616402;
0;0;1;0;0;0;0;0;0.60000002;0.68484801;
0;0;0;1;0;0.0208333;0.035616402;0;0;1;
0;0;0;0;0;0.60000002;0.68484801;0;0;0;
1;0;0.041666701;0.035616402;0;0;1;0;0;0;
0;0;0.60000002;0.71515101;0;0;0;1;0;0.0625;
0.035616402;0;0;1;0;0;0;0;0;0.57999998;
0.71515101;0;0;0;1;0;0.083333299;0.035616402;0;0;
1;0;0;0;0;0;0.57999998;0.71515101;0;0;
0;1;0;0.104167;0.035616402;0;0;1;0;0;
0;0;0;0.56999999;0.71515101;0;0;0;1;0;
0.125;0.035616402;0;0;1;0;0;0;0;0;
0.56999999;0.74545503;0;0;0;1;0;0.145833;0.035616402;0;
0;1;0;0;0;0;0;0.57999998;0.71515101;0;
0;0;1;0;0.166667;0.035616402;0;0;1;0;
0;0;0;0;0.58999997;0.71515101;0;0;0;1;
0;0.1875;0.035616402;0;0;1;0;0;0;0;
0;0.58999997;0.71515101;0;0;0;1;0;0.208333;0.035616402;
0;0;1;0;0;0;0;0;0.58999997;0.68484801;
0;0;0;1;0;0.229167;0.035616402;0;0;1;
0;0;0;0;0;0.62;0.68484801;0;0;0;
1;0;0.25;0.035616402;0;0;1;0;0;0;
0;0;0.62;0.65454501;0;0;0;1;0;0.27083299;
0.035616402;0;0;1;0;0;0;0;0;0.63999999;
0.65454501;0;0;0;1;0;0.29166701;0.035616402;0;0;
1;0;0;0;0;0;0.64999998;0.62424201;0;0;
0;1;0;0.3125;0.035616402;0;0;1;0;0;
0;0;0;0.67000002;0.62424201;0;0;0;1;0;
0.33333299;0.035616402;0;0;1;0;0;0;0;0;
0.69999999;0.59393901;0;0;0;1;0;0.35416701;0.035616402;0;
0;1;0;0;0;0;0;0.72000003;0.59393901;0;
0;0;1;0;0.375;0.035616402;0;0;1;0;
0;0;0;0;0.70999998;0.563636;0;0;0;1;
0;0.39583299;0.035616402;0;0;1;0;0;0;0;
0;0.72000003;0.563636;0;0;0;1;0;0.41666701;0.035616402;
0;0;1;0;0;0;0;0;0.74000001;0.563636;
0;0;0;1;0;0.4375;0.035616402;0;0;1;
0;0;0;0;0;0.75999999;0.563636;0;0;0;
1;0;0.47916701;0.035616402;0;0;1;0;0;0;
0;0;0.82999998;0.533333;0;0;0;1;0;0.5;
0.035616402;0;0;1;0;0;0;0;0;0.83999997;
0.533333;0;0;0;1;0;0.52083302;0.035616402;0;0;
1;0;0;0;0;0;0.86000001;0.50303;0;0;
0;1;0;0.54166698;0.035616402;0;0;1;0;0;
0;0;0;0.86000001;0.50303;0;0;0;1;0;
0.5625;0.035616402;0;0;1;0;0;0;0;0;
0.87;0.50303;0;0;0;1;0;0.58333302;0.035616402;0;
0;1;0;0;0;0;0;0.85000002;0.50303;0;
0;0;1;0;0.60416698;0.035616402;0;0;1;0;
0;0;0;0;0.86000001;0.50303;0;0;0;1;
0;0.625;0.035616402;0;0;1;0;0;0;0;
0;0.88;0.533333;0;0;0;1;0;0.64583302;0.035616402;
0;0;1;0;0;0;0;0;0.87;0.50303;
0;0;0;1;0;0.66666698;0.035616402;0;0;1;
0;0;0;0;0;0.88;0.50303;0;0;0;
1;0;0.6875;0.035616402;0;0;1;0;0;0;
0;0;0.86000001;0.533333;0;0;0;1;0;0.70833302;
0.035616402;0;0;1;0;0;0;0;0;0.83999997;
0.533333;0;0;0;1;0;0.72916698;0.035616402;0;0;
1;0;0;0;0;0;0.86000001;0.533333;0;0;
0;1;0;0.75;0.035616402;0;0;1;0;0;
0;0;0;0.87;0.533333;0;0;0;1;0;
0.77083302;0.035616402;0;0;1;0;0;0;0;0;
0.82999998;0.563636;0;0;0;1;0;0.79166698;0.035616402;0;
0;1;0;0;0;0;0;0.79000002;0.563636;0;
0;0;1;0;0.8125;0.035616402;0;0;1;0;
0;0;0;0;0.75;0.59393901;0;0;0;1;
0;0.83333302;0.035616402;0;0;1;0;0;0;0;
0;0.73000002;0.62424201;0;0;0;1;0;0.85416698;0.035616402;
0;0;1;0;0;0;0;0;0.69;0.62424201;
0;0;0;1;0;0.875;0.035616402;0;0;1;
0;0;0;0;0;0.68000001;0.65454501;0;0;0;
1;0;0.89583302;0.035616402;0;0;1;0;0;0;
0;0;0.67000002;0.68484801;0;0;0;1;0;0.9375;
0.035616402;0;0;1;0;0;0;0;0;0.60000002;
0.71515101;0;0;0;1;0;0.97916698;0.035616402;0;0;
1;0;0;0;0;0;0.55000001;0.74545503;0;0;
0;1;0;0;0.0383562;0;0;0;1;0;
0;0;0;0.54000002;0.74545503;0;0;0;1;0;
0.0208333;0.0383562;0;0;0;1;0;0;0;0;
0.54000002;0.74545503;0;0;0;1;0;0.0625;0.0383562;0;
0;0;1;0;0;0;0;0.57999998;0.80606103;0;
0;0;1;0;0.083333299;0.0383562;0;0;0;1;
0;0;0;0;0.60000002;0.80606103;0;0;0;1;
0;0.104167;0.0383562;0;0;0;1;0;0;0;
0;0.62;0.77575803;0;0;0;1;0;0.125;0.0383562;
0;0;0;1;0;0;0;0;0.63;0.77575803;
0;0;0;1;0;0.145833;0.0383562;0;0;0;
1;0;0;0;0;0.63999999;0.74545503;0;0;0;
1;0;0.166667;0.0383562;0;0;0;1;0;0;
0;0;0.66000003;0.74545503;0;0;0;1;0;0.1875;
0.0383562;0;0;0;1;0;0;0;0;0.68000001;
0.71515101;0;0;0;1;0;0.208333;0.0383562;0;0;
0;1;0;0;0;0;0.66000003;0.71515101;0;0;
0;1;0;0.229167;0.0383562;0;0;0;1;0;
0;0;0;0.67000002;0.74545503;0;0;0;1;0;
0.25;0.0383562;0;0;0;1;0;0;0;0;
0.73000002;0.68484801;0;0;0;1;0;0.27083299;0.0383562;0;
0;0;1;0;0;0;0;0.69999999;0.68484801;0;
0;0;1;0;0.29166701;0.0383562;0;0;0;1;
0;0;0;0;0.72000003;0.68484801;0;0;0;1;
0;0.3125;0.0383562;0;0;0;1;0;0;0;
0;0.75;0.65454501;0;0;0;1;0;0.33333299;0.0383562;
0;0;0;1;0;0;0;0;0.79000002;0.62424201;
0;0;0;1;0;0.35416701;0.0383562;0;0;0;
1;0;0;0;0;0.80000001;0.62424201;0;0;0;
1;0;0.375;0.0383562;0;0;0;1;0;0;
0;0;0.81999999;0.62424201;0;0;0;1;0;0.39583299;
0.0383562;0;0;0;1;0;0;0;0;0.82999998;
0.62424201;0;0;0;1;0;0.41666701;0.0383562;0;0;
0;1;0;0;0;0;0.81;0.62424201;0;0;
0;1;0;0.4375;0.0383562;0;0;0;1;0;
0;0;0;0.82999998;0.59393901;0;0;0;1;0;
0.47916701;0.0383562;0;0;0;1;0;0;0;0;
0.80000001;0.59393901;0;0;0;0;1;0.5;0.0383562;0;
0;0;1;0;0;0;0;0.87;0.563636;0;
0;0;0;1;0.52083302;0.0383562;0;0;0;1;
0;0;0;0;0.77999997;0.59393901;0;0;0;0;
1;0.54166698;0.0383562;0;0;0;1;0;0;0;
0;0.81;0.59393901;0;0;0;0;1;0.5625;0.0383562;
0;0;0;1;0;0;0;0;0.89999998;0.533333;
0;0;1;0;0;0.58333302;0.0383562;0;0;0;
1;0;0;0;0;0.91000003;0.533333;0;0;1;
0;0;0.60416698;0.0383562;0;0;0;1;0;0;
0;0;0.89999998;0.563636;0;0;1;0;0;0.625;
0.0383562;0;0;0;1;0;0;0;0;0.91000003;
0.533333;0;0;1;0;0;0.64583302;0.0383562;0;0;
0;1;0;0;0;0;0.89999998;0.533333;0;0;
1;0;0;0.66666698;0.0383562;0;0;0;1;0;
0;0;0;0.91000003;0.533333;0;0;1;0;0;
0.6875;0.0383562;0;0;0;1;0;0;0;0;
0.89999998;0.563636;0;0;1;0;0;0.70833302;0.0383562;0;
0;0;1;0;0;0;0;0.88999999;0.533333;0;
0;1;0;0;0.72916698;0.0383562;0;0;0;1;
0;0;0;0;0.89999998;0.533333;0;0;1;0;
0;0.75;0.0383562;0;0;0;1;0;0;0;
0;0.89999998;0.533333;0;0;1;0;0;0.77083302;0.0383562;
0;0;0;1;0;0;0;0;0.86000001;0.59393901;
0;0;1;0;0;0.79166698;0.0383562;0;0;0;
1;0;0;0;0;0.79000002;0.62424201;0;0;1;
0;0;0.8125;0.0383562;0;0;0;1;0;0;
0;0;0.74000001;0.65454501;0;0;1;0;0;0.83333302;
0.0383562;0;0;0;1;0;0;0;0;0.69;
0.65454501;0;0;1;0;0;0.85416698;0.0383562;0;0;
0;1;0;0;0;0;0.67000002;0.68484801;0;0;
1;0;0;0.875;0.0383562;0;0;0;1;0;
0;0;0;0.55000001;0.71515101;0;0;1;0;0;
0.89583302;0.0383562;0;0;0;1;0;0;0;0;
0.55000001;0.71515101;0;0;1;0;0;0.91666698;0.0383562;0;
0;0;1;0;0;0;0;0.52999997;0.74545503;0;
0;1;0;0;0.9375;0.0383562;0;0;0;1;
0;0;0;0;0.60000002;0.71515101;0;0;0;1;
0;0.97916698;0.0383562;0;0;0;1;0;0;0;
0;0.54000002;0.71515101;0;0;0;1;0;0;0.041095901;
0;0;0;0;1;0;0;0;0.49000001;0.77575803;
0;0;0;1;0;0.0208333;0.041095901;0;0;0;
0;1;0;0;0;0.46000001;0.77575803;0;0;0;
1;0;0.041666701;0.041095901;0;0;0;0;1;0;
0;0;0.44999999;0.77575803;0;0;0;1;0;0.0625;
0.041095901;0;0;0;0;1;0;0;0;0.46000001;
0.80606103;0;0;0;1;0;0.083333299;0.041095901;0;0;
0;0;1;0;0;0;0.47999999;0.77575803;0;0;
0;1;0;0.104167;0.041095901;0;0;0;0;1;
0;0;0;0.5;0.77575803;0;0;0;1;0;
0.125;0.041095901;0;0;0;0;1;0;0;0;
0.63999999;0.74545503;0;0;0;1;0;0.145833;0.041095901;0;
0;0;0;1;0;0;0;0.63;0.71515101;0;
0;0;1;0;0.166667;0.041095901;0;0;0;0;
1;0;0;0;0.61000001;0.74545503;0;0;0;1;
0;0.1875;0.041095901;0;0;0;0;1;0;0;
0;0.60000002;0.74545503;0;0;0;1;0;0.208333;0.041095901;
0;0;0;0;1;0;0;0;0.52999997;0.77575803;
0;0;0;1;0;0.229167;0.041095901;0;0;0;
0;1;0;0;0;0.52999997;0.77575803;0;0;0;
1;0;0.25;0.041095901;0;0;0;0;1;0;
0;0;0.52999997;0.77575803;0;0;0;1;0;0.27083299;
0.041095901;0;0;0;0;1;0;0;0;0.52999997;
0.74545503;0;0;0;1;0;0.29166701;0.041095901;0;0;
0;0;1;0;0;0;0.51999998;0.74545503;0;0;
0;1;0;0.3125;0.041095901;0;0;0;0;1;
0;0;0;0.60000002;0.68484801;0;0;0;1;0;
0.33333299;0.041095901;0;0;0;0;1;0;0;0;
0.68000001;0.68484801;0;0;0;1;0;0.35416701;0.041095901;0;
0;0;0;1;0;0;0;0.73000002;0.68484801;0;
0;0;1;0;0.375;0.041095901;0;0;0;0;
1;0;0;0;0.76999998;0.62424201;0;0;0;1;
0;0.39583299;0.041095901;0;0;0;0;1;0;0;
0;0.73000002;0.65454501;0;0;0;1;0;0.41666701;0.041095901;
0;0;0;0;1;0;0;0;0.81999999;0.62424201;
0;0;0;1;0;0.4375;0.041095901;0;0;0;
0;1;0;0;0;0.74000001;0.59393901;0;0;0;
1;0;0.47916701;0.041095901;0;0;0;0;1;0;
0;0;0.80000001;0.62424201;0;0;1;0;0;0.5;
0.041095901;0;0;0;0;1;0;0;0;0.87;
0.563636;0;0;1;0;0;0.52083302;0.041095901;0;0;
0;0;1;0;0;0;0.88;0.563636;0;0;
1;0;0;0.54166698;0.041095901;0;0;0;0;1;
0;0;0;0.91000003;0.563636;0;0;1;0;0;
0.5625;0.041095901;0;0;0;0;1;0;0;0;
0.92000002;0.563636;0;0;1;0;0;0.58333302;0.041095901;0;
0;0;0;1;0;0;0;0.91000003;0.563636;0;
0;1;0;0;0.625;0.041095901;0;0;0;0;
1;0;0;0;0.91000003;0.563636;0;0;1;0;
0;0.66666698;0.041095901;0;0;0;0;1;0;0;
0;0.88999999;0.59393901;0;0;1;0;0;0.6875;0.041095901;
0;0;0;0;1;0;0;0;0.91000003;0.563636;
0;0;1;0;0;0.70833302;0.041095901;0;0;0;
0;1;0;0;0;0.89999998;0.563636;0;0;1;
0;0;0.72916698;0.041095901;0;0;0;0;1;0;
0;0;0.88999999;0.563636;0;0;1;0;0;0.75;
0.041095901;0;0;0;0;1;0;0;0;0.91000003;
0.563636;0;0;1;0;0;0.77083302;0.041095901;0;0;
0;0;1;0;0;0;0.88999999;0.59393901;0;0;
1;0;0;0.79166698;0.041095901;0;0;0;0;1;
0;0;0;0.81999999;0.62424201;0;0;1;0;0;
0.8125;0.041095901;0;0;0;0;1;0;0;0;
0.70999998;0.65454501;0;0;1;0;0;0.83333302;0.041095901;0;
0;0;0;1;0;0;0;0.69;0.68484801;0;
0;1;0;0;0.85416698;0.041095901;0;0;0;0;
1;0;0;0;0.61000001;0.71515101;0;0;1;0;
0;0.875;0.041095901;0;0;0;0;1;0;0;
0;0.56;0.74545503;0;0;1;0;0;0.89583302;0.041095901;
0;0;0;0;1;0;0;0;0.55000001;0.77575803;
0;0;1;0;0;0.91666698;0.041095901;0;0;0;
0;1;0;0;0;0.56999999;0.74545503;0;0;1;
0;0;0.9375;0.041095901;0;0;0;0;1;0;
0;0;0.56;0.77575803;0;0;1;0;0;0.97916698;
0.041095901;0;0;0;0;1;0;0;0;0.56;
0.77575803;0;0;1;0;0;0;0.043835599;0;0;
0;0;0;1;0;0;0.63999999;0.74545503;0;0;
1;0;0;0.0208333;0.043835599;0;0;0;0;0;
1;0;0;0.64999998;0.77575803;0;0;1;0;0;
0.041666701;0.043835599;0;0;0;0;0;1;0;0;
0.80000001;0.71515101;0;0;1;0;0;0.0625;0.043835599;0;
0;0;0;0;1;0;0;0.86000001;0.68484801;0;
0;1;0;0;0.083333299;0.043835599;0;0;0;0;
0;1;0;0;0.81999999;0.71515101;0;0;1;0;
0;0.104167;0.043835599;0;0;0;0;0;1;0;
0;0.81;0.71515101;0;0;1;0;0;0.125;0.043835599;
0;0;0;0;0;1;0;0;0.75;0.71515101;
0;0;1;0;0;0.145833;0.043835599;0;0;0;
0;0;1;0;0;0.91000003;0.65454501;0;0;1;
0;0;0.166667;0.043835599;0;0;0;0;0;1;
0;0;0.94999999;0.65454501;0;0;1;0;0;0.1875;
0.043835599;0;0;0;0;0;1;0;0;0.94999999;
0.65454501;0;0;1;0;0;0.208333;0.043835599;0;0;
0;0;0;1;0;0;0.97000003;0.65454501;0;0;
1;0;0;0.229167;0.043835599;0;0;0;0;0;
1;0;0;0.92000002;0.65454501;0;0;1;0;0;
0.25;0.043835599;0;0;0;0;0;1;0;0;
0.97000003;0.65454501;0;0;1;0;0;0.27083299;0.043835599;0;
0;0;0;0;1;0;0;0.98000002;0.65454501;0;
0;1;0;0;0.29166701;0.043835599;0;0;0;0;
0;1;0;0;0.97000003;0.62424201;0;0;1;0;
0;0.3125;0.043835599;0;0;0;0;0;1;0;
0;0.97000003;0.65454501;0;0;1;0;0;0.33333299;0.043835599;
0;0;0;0;0;1;0;0;0.98000002;0.65454501;
0;0;1;0;0;0.35416701;0.043835599;0;0;0;
0;0;1;0;0;0.98000002;0.65454501;0;0;1;
0;0;0.375;0.043835599;0;0;0;0;0;1;
0;0;0.97000003;0.65454501;0;0;1;0;0;0.39583299;
0.043835599;0;0;0;0;0;1;0;0;0.97000003;
0.65454501;0;0;1;0;0;0.41666701;0.043835599;0;0;
0;0;0;1;0;0;0.97000003;0.62424201;0;0;
1;0;0;0.4375;0.043835599;0;0;0;0;0;
1;0;0;0.95999998;0.62424201;0;0;1;0;0;
0.47916701;0.043835599;0;0;0;0;0;1;0;0;
0.94;0.62424201;0;0;0;1;0;0.5;0.043835599;0;
0;0;0;0;1;0;0;0.93000001;0.62424201;0;
0;0;1;0;0.52083302;0.043835599;0;0;0;0;
0;1;0;0;0.92000002;0.62424201;0;0;0;1;
0;0.54166698;0.043835599;0;0;0;0;0;1;0;
0;0.92000002;0.59393901;0;0;0;1;0;0.5625;0.043835599;
0;0;0;0;0;1;0;0;0.94;0.59393901;
0;0;0;1;0;0.58333302;0.043835599;0;0;0;
0;0;1;0;0;0.89999998;0.59393901;0;0;0;
1;0;0.60416698;0.043835599;0;0;0;0;0;1;
0;0;0.88999999;0.59393901;0;0;0;1;0;0.625;
0.043835599;0;0;0;0;0;1;0;0;0.88;
0.59393901;0;0;0;1;0;0.64583302;0.043835599;0;0;
0;0;0;1;0;0;0.82999998;0.59393901;0;0;
0;1;0;0.66666698;0.043835599;0;0;0;0;0;
1;0;0;0.81;0.59393901;0;0;0;1;0;
0.6875;0.043835599;0;0;0;0;0;1;0;0;
0.80000001;0.59393901;0;0;0;1;0;0.70833302;0.043835599;0;
0;0;0;0;1;0;0;0.81;0.563636;0;
0;0;1;0;0.72916698;0.043835599;0;0;0;0;
0;1;0;0;0.81999999;0.563636;0;0;0;1;
0;0.75;0.043835599;0;0;0;0;0;1;0;
0;0.81;0.563636;0;0;0;1;0;0.77083302;0.043835599;
0;0;0;0;0;1;0;0;0.81;0.59393901;
0;0;0;1;0;0.79166698;0.043835599;0;0;0;
0;0;1;0;0;0.76999998;0.59393901;0;0;0;
1;0;0.8125;0.043835599;0;0;0;0;0;1;
0;0;0.72000003;0.62424201;0;0;0;1;0;0.83333302;
0.043835599;0;0;0;0;0;1;0;0;0.69;
0.62424201;0;0;0;1;0;0.85416698;0.043835599;0;0;
0;0;0;1;0;0;0.69;0.68484801;0;0;
0;1;0;0.875;0.043835599;0;0;0;0;0;
1;0;0;0.68000001;0.65454501;0;0;0;1;0;
0.89583302;0.043835599;0;0;0;0;0;1;0;0;
0.61000001;0.68484801;0;0;0;1;0;0.91666698;0.043835599;0;
0;0;0;0;1;0;0;0.61000001;0.68484801;0;
0;0;1;0;0.9375;0.043835599;0;0;0;0;
0;1;0;0;0.56999999;0.71515101;0;0;0;1;
0;0.97916698;0.043835599;0;0;0;0;0;1;0;
0;0.56;0.71515101;0;0;0;1;0;0;0.0465753;
0;0;0;0;0;0;1;0;0.55000001;0.71515101;
0;0;0;1;0;0.0208333;0.0465753;0;0;0;
0;0;0;1;0;0.56999999;0.71515101;0;0;0;
1;0;0.041666701;0.0465753;0;0;0;0;0;0;
1;0;0.56;0.74545503;0;0;0;1;0;0.0625;
0.0465753;0;0;0;0;0;0;1;0;0.56999999;
0.74545503;0;0;0;1;0;0.083333299;0.0465753;0;0;
0;0;0;0;1;0;0.55000001;0.74545503;0;0;
0;1;0;0.104167;0.0465753;0;0;0;0;0;
0;1;0;0.55000001;0.74545503;0;0;0;1;0;
0.125;0.0465753;0;0;0;0;0;0;1;0;
0.56999999;0.74545503;0;0;0;1;0;0.145833;0.0465753;0;
0;0;0;0;0;1;0;0.56999999;0.74545503;0;
0;0;1;0;0.166667;0.0465753;0;0;0;0;
0;0;1;0;0.56999999;0.77575803;0;0;0;1;
0;0.1875;0.0465753;0;0;0;0;0;0;1;
0;0.58999997;0.74545503;0;0;0;1;0;0.208333;0.0465753;
0;0;0;0;0;0;1;0;0.56;0.74545503;
0;0;0;1;0;0.229167;0.0465753;0;0;0;
0;0;0;1;0;0.61000001;0.74545503;0;0;0;
1;0;0.25;0.0465753;0;0;0;0;0;0;
1;0;0.63999999;0.71515101;0;0;0;1;0;0.27083299;
0.0465753;0;0;0;0;0;0;1;0;0.66000003;
0.71515101;0;0;0;1;0;0.29166701;0.0465753;0;0;
0;0;0;0;1;0;0.72000003;0.68484801;0;0;
0;1;0;0.3125;0.0465753;0;0;0;0;0;
0;1;0;0.72000003;0.65454501;0;0;0;1;0;
0.33333299;0.0465753;0;0;0;0;0;0;1;0;
0.79000002;0.62424201;0;0;0;1;0;0.35416701;0.0465753;0;
0;0;0;0;0;1;0;0.81;0.62424201;0;
0;0;1;0;0.375;0.0465753;0;0;0;0;
0;0;1;0;0.80000001;0.62424201;0;0;0;1;
0;0.39583299;0.0465753;0;0;0;0;0;0;1;
0;0.81999999;0.62424201;0;0;0;1;0;0.41666701;0.0465753;
0;0;0;0;0;0;1;0;0.82999998;0.59393901;
0;0;0;1;0;0.4375;0.0465753;0;0;0;
0;0;0;1;0;0.82999998;0.62424201;0;0;0;
1;0;0.47916701;0.0465753;0;0;0;0;0;0;
1;0;0.86000001;0.59393901;0;0;1;0;0;0.5;
0.0465753;0;0;0;0;0;0;1;0;0.87;
0.59393901;0;0;1;0;0;0.52083302;0.0465753;0;0;
0;0;0;0;1;0;0.87;0.59393901;0;0;
1;0;0;0.54166698;0.0465753;0;0;0;0;0;
0;1;0;0.88999999;0.59393901;0;0;1;0;0;
0.5625;0.0465753;0;0;0;0;0;0;1;0;
0.88999999;0.59393901;0;0;1;0;0;0.58333302;0.0465753;0;
0;0;0;0;0;1;0;0.94;0.62424201;0;
0;1;0;0;0.60416698;0.0465753;0;0;0;0;
0;0;1;0;0.95999998;0.59393901;0;0;1;0;
0;0.625;0.0465753;0;0;0;0;0;0;1;
0;0.98000002;0.563636;0;0;1;0;0;0.64583302;0.0465753;
0;0;0;0;0;0;1;0;0.95999998;0.59393901;
0;0;1;0;0;0.66666698;0.0465753;0;0;0;
0;0;0;1;0;0.94999999;0.59393901;0;0;1;
0;0;0.6875;0.0465753;0;0;0;0;0;0;
1;0;0.94;0.59393901;0;0;1;0;0;0.70833302;
0.0465753;0;0;0;0;0;0;1;0;0.92000002;
0.59393901;0;0;1;0;0;0.72916698;0.0465753;0;0;
0;0;0;0;1;0;0.89999998;0.59393901;0;0;
1;0;0;0.75;0.0465753;0;0;0;0;0;
0;1;0;0.89999998;0.59393901;0;0;0;0;1;
0.77083302;0.0465753;0;0;0;0;0;0;1;0;
0.89999998;0.59393901;0;0;0;0;1;0.79166698;0.0465753;0;
0;0;0;0;0;1;0;0.85000002;0.65454501;0;
0;0;0;1;0.8125;0.0465753;0;0;0;0;
0;0;1;0;0.85000002;0.65454501;0;0;0;0;
1;0.83333302;0.0465753;0;0;0;0;0;0;1;
0;0.81999999;0.65454501;0;0;0;0;1;0.85416698;0.0465753;
0;0;0;0;0;0;1;0;0.77999997;0.68484801;
0;0;0;0;1;0.875;0.0465753;0;0;0;
0;0;0;1;0;0.67000002;0.71515101;0;0;0;
0;1;0.89583302;0.0465753;0;0;0;0;0;0;
1;0;0.64999998;0.71515101;0;0;0;0;1;0.91666698;
0.0465753;0;0;0;0;0;0;1;0;0.63999999;
0.71515101;0;0;0;0;1;0.9375;0.0465753;0;0;
0;0;0;0;1;0;0.58999997;0.74545503;0;0;
0;1;0;0.97916698;0.0465753;0;0;0;0;0;
0;1;0;0.55000001;0.77575803;0;0;0;1;0;
0;0.049315099;1;0;0;0;0;0;0;0;
0.51999998;0.74545503;0;0;0;1;0;0.0208333;0.049315099;1;
0;0;0;0;0;0;0;0.54000002;0.77575803;0;
0;0;1;0;0.041666701;0.049315099;1;0;0;0;
0;0;0;0;0.55000001;0.77575803;0;0;0;1;
0;0.0625;0.049315099;1;0;0;0;0;0;0;
0;0.55000001;0.77575803;0;0;0;1;0;0.083333299;0.049315099;
1;0;0;0;0;0;0;0;0.56999999;0.80606103;
0;0;0;1;0;0.104167;0.049315099;1;0;0;
0;0;0;0;0;0.56;0.77575803;0;0;0;
1;0;0.125;0.049315099;1;0;0;0;0;0;
0;0;0.56999999;0.77575803;0;0;0;1;0;0.145833;
0.049315099;1;0;0;0;0;0;0;0;0.54000002;
0.77575803;0;0;0;1;0;0.166667;0.049315099;1;0;
0;0;0;0;0;0;0.56999999;0.77575803;0;0;
0;1;0;0.1875;0.049315099;1;0;0;0;0;
0;0;0;0.56999999;0.74545503;0;0;0;1;0;
0.208333;0.049315099;1;0;0;0;0;0;0;0;
0.60000002;0.77575803;0;0;0;1;0;0.229167;0.049315099;1;
0;0;0;0;0;0;0;0.58999997;0.74545503;0;
0;0;1;0;0.25;0.049315099;1;0;0;0;
0;0;0;0;0.55000001;0.74545503;0;0;0;1;
0;0.27083299;0.049315099;1;0;0;0;0;0;0;
0;0.62;0.71515101;0;0;0;1;0;0.29166701;0.049315099;
1;0;0;0;0;0;0;0;0.68000001;0.68484801;
0;0;0;1;0;0.3125;0.049315099;1;0;0;
0;0;0;0;0;0.70999998;0.65454501;0;0;0;
1;0;0.33333299;0.049315099;1;0;0;0;0;0;
0;0;0.74000001;0.65454501;0;0;0;1;0;0.35416701;
0.049315099;1;0;0;0;0;0;0;0;0.76999998;
0.62424201;0;0;0;1;0;0.375;0.049315099;1;0;
0;0;0;0;0;0;0.79000002;0.62424201;0;0;
0;1;0;0.39583299;0.049315099;1;0;0;0;0;
0;0;0;0.81;0.62424201;0;0;0;1;0;
0.41666701;0.049315099;1;0;0;0;0;0;0;0;
0.82999998;0.62424201;0;0;0;1;0;0.4375;0.049315099;1;
0;0;0;0;0;0;0;0.82999998;0.62424201;0;
0;0;1;0;0.47916701;0.049315099;1;0;0;0;
0;0;0;0;0.81999999;0.62424201;0;0;0;0;
1;0.5;0.049315099;1;0;0;0;0;0;0;
0;0.85000002;0.59393901;0;0;0;0;1;0.52083302;0.049315099;
1;0;0;0;0;0;0;0;0.83999997;0.59393901;
0;0;0;0;1;0.54166698;0.049315099;1;0;0;
0;0;0;0;0;0.86000001;0.563636;0;0;0;
0;1;0.5625;0.049315099;1;0;0;0;0;0;
0;0;0.87;0.59393901;0;0;0;0;1;0.58333302;
0.049315099;1;0;0;0;0;0;0;0;0.86000001;
0.59393901;0;0;0;0;1;0.60416698;0.049315099;1;0;
0;0;0;0;0;0;0.88;0.563636;0;0;
0;0;1;0.625;0.049315099;1;0;0;0;0;
0;0;0;0.88;0.563636;0;0;0;0;1;
0.64583302;0.049315099;1;0;0;0;0;0;0;0;
0.88999999;0.563636;0;0;0;0;1;0.66666698;0.049315099;1;
0;0;0;0;0;0;0;0.91000003;0.563636;0;
0;0;0;1;0.6875;0.049315099;1;0;0;0;
0;0;0;0;0.94999999;0.533333;0;0;0;0;
1;0.70833302;0.049315099;1;0;0;0;0;0;0;
0;0.94;0.533333;0;0;0;0;1;0.72916698;0.049315099;
1;0;0;0;0;0;0;0;0.94;0.563636;
0;0;0;0;1;0.75;0.049315099;1;0;0;
0;0;0;0;0;0.94;0.563636;0;0;0;
0;1;0.77083302;0.049315099;1;0;0;0;0;0;
0;0;0.88999999;0.59393901;0;0;0;0;1;0.79166698;
0.049315099;1;0;0;0;0;0;0;0;0.87;
0.62424201;0;0;0;0;1;0.8125;0.049315099;1;0;
0;0;0;0;0;0;0.81999999;0.65454501;0;0;
0;0;1;0.83333302;0.049315099;1;0;0;0;0;
0;0;0;0.80000001;0.65454501;0;0;0;0;1;
0.85416698;0.049315099;1;0;0;0;0;0;0;0;
0.73000002;0.68484801;0;0;0;0;1;0.875;0.049315099;1;
0;0;0;0;0;0;0;0.70999998;0.71515101;0;
0;0;0;1;0.91666698;0.049315099;1;0;0;0;
0;0;0;0;0.80000001;0.65454501;0;0;0;0;
1;0.9375;0.049315099;1;0;0;0;0;0;0;
0;0.75;0.68484801;0;0;1;0;0;0.97916698;0.049315099;
1;0;0;0;0;0;0;0;0.69;0.74545503;
0;0;1;0;0;0;0.0520548;0;1;0;
0;0;0;0;0;0.66000003;0.74545503;0;0;1;
0;0;0.0208333;0.0520548;0;1;0;0;0;0;
0;0;0.61000001;0.77575803;0;0;1;0;0;0.041666701;
0.0520548;0;1;0;0;0;0;0;0;0.63;
0.77575803;0;0;1;0;0;0.0625;0.0520548;0;1;
0;0;0;0;0;0;0.63;0.77575803;0;0;
1;0;0;0.083333299;0.0520548;0;1;0;0;0;
0;0;0;0.63;0.77575803;0;0;1;0;0;
0.104167;0.0520548;0;1;0;0;0;0;0;0;
0.63;0.77575803;0;0;1;0;0;0.125;0.0520548;0;
1;0;0;0;0;0;0;0.60000002;0.74545503;0;
0;1;0;0;0.145833;0.0520548;0;1;0;0;
0;0;0;0;0.57999998;0.77575803;0;0;1;0;
0;0.166667;0.0520548;0;1;0;0;0;0;0;
0;0.56;0.77575803;0;0;1;0;0;0.1875;0.0520548;
0;1;0;0;0;0;0;0;0.56999999;0.77575803;
0;0;1;0;0;0.208333;0.0520548;0;1;0;
0;0;0;0;0;0.58999997;0.74545503;0;0;1;
0;0;0.229167;0.0520548;0;1;0;0;0;0;
0;0;0.63;0.71515101;0;0;1;0;0;0.25;
0.0520548;0;1;0;0;0;0;0;0;0.66000003;
0.71515101;0;0;1;0;0;0.27083299;0.0520548;0;1;
0;0;0;0;0;0;0.67000002;0.68484801;0;0;
1;0;0;0.29166701;0.0520548;0;1;0;0;0;
0;0;0;0.69;0.65454501;0;0;1;0;0;
0.3125;0.0520548;0;1;0;0;0;0;0;0;
0.72000003;0.65454501;0;0;1;0;0;0.33333299;0.0520548;0;
1;0;0;0;0;0;0;0.74000001;0.62424201;0;
0;1;0;0;0.35416701;0.0520548;0;1;0;0;
0;0;0;0;0.75;0.62424201;0;0;1;0;
0;0.375;0.0520548;0;1;0;0;0;0;0;
0;0.74000001;0.62424201;0;0;1;0;0;0.39583299;0.0520548;
0;1;0;0;0;0;0;0;0.73000002;0.62424201;
0;0;1;0;0;0.41666701;0.0520548;0;1;0;
0;0;0;0;0;0.72000003;0.62424201;0;0;1;
0;0;0.4375;0.0520548;0;1;0;0;0;0;
0;0;0.74000001;0.62424201;0;0;1;0;0;0.47916701;
0.0520548;0;1;0;0;0;0;0;0;0.72000003;
0.59393901;0;0;0;1;0;0.5;0.0520548;0;1;
0;0;0;0;0;0;0.74000001;0.59393901;0;0;
0;1;0;0.52083302;0.0520548;0;1;0;0;0;
0;0;0;0.73000002;0.59393901;0;0;0;1;0;
0.54166698;0.0520548;0;1;0;0;0;0;0;0;
0.70999998;0.59393901;0;0;0;1;0;0.5625;0.0520548;0;
1;0;0;0;0;0;0;0.70999998;0.59393901;0;
0;0;1;0;0.58333302;0.0520548;0;1;0;0;
0;0;0;0;0.72000003;0.59393901;0;0;0;1;
0;0.60416698;0.0520548;0;1;0;0;0;0;0;
0;0.74000001;0.563636;0;0;0;1;0;0.625;0.0520548;
0;1;0;0;0;0;0;0;0.77999997;0.563636;
0;0;0;1;0;0.64583302;0.0520548;0;1;0;
0;0;0;0;0;0.77999997;0.563636;0;0;0;
1;0;0.66666698;0.0520548;0;1;0;0;0;0;
0;0;0.77999997;0.533333;0;0;0;1;0;0.6875;
0.0520548;0;1;0;0;0;0;0;0;0.80000001;
0.533333;0;0;0;1;0;0.70833302;0.0520548;0;1;
0;0;0;0;0;0;0.79000002;0.533333;0;0;
0;1;0;0.72916698;0.0520548;0;1;0;0;0;
0;0;0;0.77999997;0.563636;0;0;0;1;0;
0.75;0.0520548;0;1;0;0;0;0;0;0;
0.80000001;0.533333;0;0;0;1;0;0.77083302;0.0520548;0;
1;0;0;0;0;0;0;0.77999997;0.563636;0;
0;0;1;0;0.79166698;0.0520548;0;1;0;0;
0;0;0;0;0.75;0.563636;0;0;0;1;
0;0.8125;0.0520548;0;1;0;0;0;0;0;
0;0.73000002;0.59393901;0;0;0;1;0;0.83333302;0.0520548;
0;1;0;0;0;0;0;0;0.70999998;0.59393901;
0;0;0;1;0;0.85416698;0.0520548;0;1;0;
0;0;0;0;0;0.66000003;0.62424201;0;0;0;
1;0;0.875;0.0520548;0;1;0;0;0;0;
0;0;0.61000001;0.65454501;0;0;0;1;0;0.89583302;
0.0520548;0;1;0;0;0;0;0;0;0.52999997;
0.68484801;0;0;0;1;0;0.91666698;0.0520548;0;1;
0;0;0;0;0;0;0.52999997;0.65454501;0;0;
0;1;0;0.9375;0.0520548;0;1;0;0;0;
0;0;0;0.56;0.68484801;0;0;0;1;0;
0.97916698;0.0520548;0;1;0;0;0;0;0;0;
0.52999997;0.68484801;0;0;0;1;0;0;0.054794502;0;
0;1;0;0;0;0;0;0.5;0.71515101;0;
0;0;1;0;0.0208333;0.054794502;0;0;1;0;
0;0;0;0;0.5;0.71515101;0;0;0;1;
0;0.041666701;0.054794502;0;0;1;0;0;0;0;
0;0.49000001;0.71515101;0;0;0;1;0;0.0625;0.054794502;
0;0;1;0;0;0;0;0;0.50999999;0.71515101;
0;0;0;1;0;0.083333299;0.054794502;0;0;1;
0;0;0;0;0;0.47999999;0.74545503;0;0;0;
1;0;0.104167;0.054794502;0;0;1;0;0;0;
0;0;0.44999999;0.71515101;0;0;0;1;0;0.125;
0.054794502;0;0;1;0;0;0;0;0;0.47999999;
0.71515101;0;0;0;1;0;0.145833;0.054794502;0;0;
1;0;0;0;0;0;0.43000001;0.71515101;0;0;
0;1;0;0.166667;0.054794502;0;0;1;0;0;
0;0;0;0.44;0.71515101;0;0;0;1;0;
0.1875;0.054794502;0;0;1;0;0;0;0;0;
0.49000001;0.68484801;0;0;0;1;0;0.208333;0.054794502;0;
0;1;0;0;0;0;0;0.51999998;0.65454501;0;
0;0;1;0;0.229167;0.054794502;0;0;1;0;
0;0;0;0;0.58999997;0.65454501;0;0;0;1;
0;0.25;0.054794502;0;0;1;0;0;0;0;
0;0.56999999;0.62424201;0;0;0;1;0;0.27083299;0.054794502;
0;0;1;0;0;0;0;0;0.56999999;0.62424201;
0;0;0;1;0;0.29166701;0.054794502;0;0;1;
0;0;0;0;0;0.63;0.59393901;0;0;0;
1;0;0.3125;0.054794502;0;0;1;0;0;0;
0;0;0.63;0.59393901;0;0;0;1;0;0.33333299;
0.054794502;0;0;1;0;0;0;0;0;0.63;
0.59393901;0;0;0;1;0;0.35416701;0.054794502;0;0;
1;0;0;0;0;0;0.66000003;0.59393901;0;0;
0;1;0;0.375;0.054794502;0;0;1;0;0;
0;0;0;0.67000002;0.563636;0;0;0;1;0;
0.39583299;0.054794502;0;0;1;0;0;0;0;0;
0.68000001;0.563636;0;0;0;1;0;0.41666701;0.054794502;0;
0;1;0;0;0;0;0;0.67000002;0.563636;0;
0;0;1;0;0.4375;0.054794502;0;0;1;0;
0;0;0;0;0.68000001;0.59393901;0;0;0;1;
0;0.47916701;0.054794502;0;0;1;0;0;0;0;
0;0.69999999;0.59393901;0;0;0;1;0;0.5;0.054794502;
0;0;1;0;0;0;0;0;0.75999999;0.59393901;
0;0;0;1;0;0.52083302;0.054794502;0;0;1;
0;0;0;0;0;0.79000002;0.59393901;0;0;0;
1;0;0.54166698;0.054794502;0;0;1;0;0;0;
0;0;0.82999998;0.563636;0;0;0;1;0;0.5625;
0.054794502;0;0;1;0;0;0;0;0;0.82999998;
0.563636;0;0;0;1;0;0.58333302;0.054794502;0;0;
1;0;0;0;0;0;0.87;0.50303;0;0;
0;1;0;0.60416698;0.054794502;0;0;1;0;0;
0;0;0;0.86000001;0.50303;0;0;0;1;0;
0.625;0.054794502;0;0;1;0;0;0;0;0;
0.87;0.472727;0;0;0;1;0;0.64583302;0.054794502;0;
0;1;0;0;0;0;0;0.91000003;0.50303;0;
0;0;1;0;0.66666698;0.054794502;0;0;1;0;
0;0;0;0;0.89999998;0.472727;0;0;0;1;
0;0.6875;0.054794502;0;0;1;0;0;0;0;
0;0.88;0.472727;0;0;0;1;0;0.70833302;0.054794502;
0;0;1;0;0;0;0;0;0.92000002;0.442424;
0;0;0;1;0;0.72916698;0.054794502;0;0;1;
0;0;0;0;0;0.92000002;0.442424;0;0;0;
1;0;0.75;0.054794502;0;0;1;0;0;0;
0;0;0.92000002;0.472727;0;0;0;1;0;0.77083302;
0.054794502;0;0;1;0;0;0;0;0;0.91000003;
0.472727;0;0;0;1;0;0.79166698;0.054794502;0;0;
1;0;0;0;0;0;0.87;0.50303;0;0;
0;1;0;0.8125;0.054794502;0;0;1;0;0;
0;0;0;0.77999997;0.533333;0;0;0;1;0;
0.83333302;0.054794502;0;0;1;0;0;0;0;0;
0.69999999;0.59393901;0;0;0;1;0;0.85416698;0.054794502;0;
0;1;0;0;0;0;0;0.63999999;0.65454501;0;
0;0;1;0;0.875;0.054794502;0;0;1;0;
0;0;0;0;0.62;0.65454501;0;0;0;1;
0;0.89583302;0.054794502;0;0;1;0;0;0;0;
0;0.60000002;0.68484801;0;0;0;1;0;0.91666698;0.054794502;
0;0;1;0;0;0;0;0;0.56;0.71515101;
0;0;0;1;0;0.9375;0.054794502;0;0;1;
0;0;0;0;0;0.57999998;0.71515101;0;0;0;
1;0;0.97916698;0.054794502;0;0;1;0;0;0;
0;0;0.52999997;0.77575803;0;0;0;1;0;0;
0.057534199;0;0;0;1;0;0;0;0;0.54000002;
0.74545503;0;0;0;1;0;0.0208333;0.057534199;0;0;
0;1;0;0;0;0;0.50999999;0.80606103;0;0;
0;1;0;0.041666701;0.057534199;0;0;0;1;0;
0;0;0;0.51999998;0.77575803;0;0;0;1;0;
0.0625;0.057534199;0;0;0;1;0;0;0;0;
0.50999999;0.77575803;0;0;0;1;0;0.104167;0.057534199;0;
0;0;1;0;0;0;0;0.51999998;0.77575803;0;
0;0;0;1;0.125;0.057534199;0;0;0;1;
0;0;0;0;0.50999999;0.77575803;0;0;0;0;
1;0.145833;0.057534199;0;0;0;1;0;0;0;
0;0.50999999;0.77575803;0;0;0;0;1;0.166667;0.057534199;
0;0;0;1;0;0;0;0;0.52999997;0.74545503;
0;0;0;0;1;0.1875;0.057534199;0;0;0;
1;0;0;0;0;0.52999997;0.77575803;0;0;0;
0;1;0.208333;0.057534199;0;0;0;1;0;0;
0;0;0.56;0.71515101;0;0;0;0;1;0.229167;
0.057534199;0;0;0;1;0;0;0;0;0.55000001;
0.71515101;0;0;0;0;1;0.25;0.057534199;0;0;
0;1;0;0;0;0;0.56999999;0.68484801;0;0;
0;0;1;0.27083299;0.057534199;0;0;0;1;0;
0;0;0;0.58999997;0.68484801;0;0;0;0;1;
0.29166701;0.057534199;0;0;0;1;0;0;0;0;
0.60000002;0.65454501;0;0;0;0;1;0.3125;0.057534199;0;
0;0;1;0;0;0;0;0.61000001;0.62424201;0;
0;0;0;1;0.33333299;0.057534199;0;0;0;1;
0;0;0;0;0.64999998;0.62424201;0;0;0;0;
1;0.35416701;0.057534199;0;0;0;1;0;0;0;
0;0.69;0.59393901;0;0;0;0;1;0.375;0.057534199;
0;0;0;1;0;0;0;0;0.69;0.59393901;
0;0;0;0;1;0.39583299;0.057534199;0;0;0;
1;0;0;0;0;0.70999998;0.59393901;0;0;0;
0;1;0.41666701;0.057534199;0;0;0;1;0;0;
0;0;0.72000003;0.59393901;0;0;0;0;1;0.4375;
0.057534199;0;0;0;1;0;0;0;0;0.72000003;
0.59393901;0;0;0;0;1;0.47916701;0.057534199;0;0;
0;1;0;0;0;0;0.73000002;0.59393901;0;0;
0;1;0;0.5;0.057534199;0;0;0;1;0;
0;0;0;0.75;0.59393901;0;0;0;1;0;
0.52083302;0.057534199;0;0;0;1;0;0;0;0;
0.76999998;0.59393901;0;0;0;1;0;0.54166698;0.057534199;0;
0;0;1;0;0;0;0;0.77999997;0.563636;0;
0;0;1;0;0.5625;0.057534199;0;0;0;1;
0;0;0;0;0.80000001;0.563636;0;0;0;1;
0;0.58333302;0.057534199;0;0;0;1;0;0;0;
0;0.77999997;0.563636;0;0;0;1;0;0.60416698;0.057534199;
0;0;0;1;0;0;0;0;0.79000002;0.563636;
0;0;0;1;0;0.625;0.057534199;0;0;0;
1;0;0;0;0;0.81999999;0.563636;0;0;0;
1;0;0.64583302;0.057534199;0;0;0;1;0;0;
0;0;0.81999999;0.563636;0;0;0;1;0;0.66666698;
0.057534199;0;0;0;1;0;0;0;0;0.79000002;
0.563636;0;0;0;1;0;0.6875;0.057534199;0;0;
0;1;0;0;0;0;0.81;0.563636;0;0;
0;1;0;0.70833302;0.057534199;0;0;0;1;0;
0;0;0;0.86000001;0.533333;0;0;0;1;0;
0.72916698;0.057534199;0;0;0;1;0;0;0;0;
0.88999999;0.533333;0;0;0;1;0;0.75;0.057534199;0;
0;0;1;0;0;0;0;0.88;0.533333;0;
0;0;1;0;0.77083302;0.057534199;0;0;0;1;
0;0;0;0;0.87;0.533333;0;0;0;1;
0;0.79166698;0.057534199;0;0;0;1;0;0;0;
0;0.80000001;0.563636;0;0;0;1;0;0.8125;0.057534199;
0;0;0;1;0;0;0;0;0.69999999;0.62424201;
0;0;0;1;0;0.83333302;0.057534199;0;0;0;
1;0;0;0;0;0.66000003;0.65454501;0;0;0;
1;0;0.85416698;0.057534199;0;0;0;1;0;0;
0;0;0.61000001;0.68484801;0;0;0;1;0;0.875;
0.057534199;0;0;0;1;0;0;0;0;0.56999999;
0.71515101;0;0;0;1;0;0.89583302;0.057534199;0;0;
0;1;0;0;0;0;0.55000001;0.71515101;0;0;
0;1;0;0.91666698;0.057534199;0;0;0;1;0;
0;0;0;0.56999999;0.71515101;0;0;0;1;0;
0.9375;0.057534199;0;0;0;1;0;0;0;0;
0.56;0.74545503;0;0;0;1;0;0.97916698;0.057534199;0;
0;0;1;0;0;0;0;0.51999998;0.74545503;0;
0;0;1;0;0.0208333;0.060274001;0;0;0;0;
1;0;0;0;0.54000002;0.74545503;0;0;0;1;
0;0.041666701;0.060274001;0;0;0;0;1;0;0;
0;0.56;0.74545503;0;0;0;1;0;0.0625;0.060274001;
0;0;0;0;1;0;0;0;0.54000002;0.74545503;
0;0;0;1;0;0.083333299;0.060274001;0;0;0;
0;1;0;0;0;0.50999999;0.77575803;0;0;0;
1;0;0.104167;0.060274001;0;0;0;0;1;0;
0;0;0.52999997;0.74545503;0;0;0;1;0;0.125;
0.060274001;0;0;0;0;1;0;0;0;0.50999999;
0.74545503;0;0;0;1;0;0.145833;0.060274001;0;0;
0;0;1;0;0;0;0.55000001;0.71515101;0;0;
0;1;0;0.166667;0.060274001;0;0;0;0;1;
0;0;0;0.52999997;0.77575803;0;0;0;1;0;
0.1875;0.060274001;0;0;0;0;1;0;0;0;
0.55000001;0.74545503;0;0;0;1;0;0.208333;0.060274001;0;
0;0;0;1;0;0;0;0.56;0.71515101;0;
0;0;1;0;0.229167;0.060274001;0;0;0;0;
1;0;0;0;0.56;0.71515101;0;0;0;1;
0;0.25;0.060274001;0;0;0;0;1;0;0;
0;0.56999999;0.71515101;0;0;0;1;0;0.27083299;0.060274001;
0;0;0;0;1;0;0;0;0.60000002;0.68484801;
0;0;0;1;0;0.29166701;0.060274001;0;0;0;
0;1;0;0;0;0.57999998;0.68484801;0;0;0;
1;0;0.3125;0.060274001;0;0;0;0;1;0;
0;0;0.58999997;0.68484801;0;0;0;1;0;0.33333299;
0.060274001;0;0;0;0;1;0;0;0;0.63;
0.65454501;0;0;0;1;0;0.35416701;0.060274001;0;0;
0;0;1;0;0;0;0.63999999;0.65454501;0;0;
0;1;0;0.375;0.060274001;0;0;0;0;1;
0;0;0;0.66000003;0.65454501;0;0;0;1;0;
0.39583299;0.060274001;0;0;0;0;1;0;0;0;
0.69;0.62424201;0;0;0;1;0;0.41666701;0.060274001;0;
0;0;0;1;0;0;0;0.72000003;0.62424201;0;
0;0;1;0;0.4375;0.060274001;0;0;0;0;
1;0;0;0;0.74000001;0.59393901;0;0;0;1;
0;0.47916701;0.060274001;0;0;0;0;1;0;0;
0;0.75;0.62424201;0;0;0;1;0;0.5;0.060274001;
0;0;0;0;1;0;0;0;0.75;0.62424201;
0;0;0;1;0;0.52083302;0.060274001;0;0;0;
0;1;0;0;0;0.69;0.62424201;0;0;0;
1;0;0.54166698;0.060274001;0;0;0;0;1;0;
0;0;0.70999998;0.59393901;0;0;0;1;0;0.5625;
0.060274001;0;0;0;0;1;0;0;0;0.72000003;
0.59393901;0;0;0;1;0;0.58333302;0.060274001;0;0;
0;0;1;0;0;0;0.75999999;0.563636;0;0;
0;1;0;0.60416698;0.060274001;0;0;0;0;1;
0;0;0;0.74000001;0.59393901;0;0;0;1;0;
0.625;0.060274001;0;0;0;0;1;0;0;0;
0.74000001;0.59393901;0;0;0;1;0;0.64583302;0.060274001;0;
0;0;0;1;0;0;0;0.74000001;0.59393901;0;
0;0;1;0;0.66666698;0.060274001;0;0;0;0;
1;0;0;0;0.74000001;0.59393901;0;0;0;1;
0;0.6875;0.060274001;0;0;0;0;1;0;0;
0;0.73000002;0.62424201;0;0;0;1;0;0.70833302;0.060274001;
0;0;0;0;1;0;0;0;0.75999999;0.59393901;
0;0;0;1;0;0.72916698;0.060274001;0;0;0;
0;1;0;0;0;0.82999998;0.59393901;0;0;0;
1;0;0.75;0.060274001;0;0;0;0;1;0;
0;0;0.88;0.563636;0;0;0;1;0;0.77083302;
0.060274001;0;0;0;0;1;0;0;0;0.86000001;
0.59393901;0;0;0;1;0;0.79166698;0.060274001;0;0;
0;0;1;0;0;0;0.86000001;0.59393901;0;0;
0;1;0;0.8125;0.060274001;0;0;0;0;1;
0;0;0;0.81;0.62424201;0;0;0;1;0;
0.83333302;0.060274001;0;0;0;0;1;0;0;0;
0.75;0.65454501;0;0;0;1;0;0.85416698;0.060274001;0;
0;0;0;1;0;0;0;0.69999999;0.68484801;0;
0;0;1;0;0.875;0.060274001;0;0;0;0;
1;0;0;0;0.69;0.68484801;0;0;0;1;
0;0.89583302;0.060274001;0;0;0;0;1;0;0;
0;0.66000003;0.71515101;0;0;0;1;0;0.91666698;0.060274001;
0;0;0;0;1;0;0;0;0.66000003;0.71515101;
0;0;0;1;0;0.9375;0.060274001;0;0;0;
0;1;0;0;0;0.63;0.71515101;0;0;0;
1;0;0.97916698;0.060274001;0;0;0;0;1;0;
0;0;0.58999997;0.74545503;0;0;0;1;0;0;
0.063013703;0;0;0;0;0;1;0;0;0.57999998;
0.77575803;0;0;0;1;0;0.0208333;0.063013703;0;0;
0;0;0;1;0;0;0.51999998;0.77575803;0;0;
0;1;0;0.041666701;0.063013703;0;0;0;0;0;
1;0;0;0.5;0.80606103;0;0;0;1;0;
0.0625;0.063013703;0;0;0;0;0;1;0;0;
0.54000002;0.80606103;0;0;0;1;0;0.083333299;0.063013703;0;
0;0;0;0;1;0;0;0.49000001;0.80606103;0;
0;0;1;0;0.104167;0.063013703;0;0;0;0;
0;1;0;0;0.49000001;0.80606103;0;0;0;1;
0;0.125;0.063013703;0;0;0;0;0;1;0;
0;0.47999999;0.80606103;0;0;0;1;0;0.145833;0.063013703;
0;0;0;0;0;1;0;0;0.50999999;0.80606103;
0;0;0;1;0;0.166667;0.063013703;0;0;0;
0;0;1;0;0;0.49000001;0.80606103;0;0;0;
1;0;0.1875;0.063013703;0;0;0;0;0;1;
0;0;0.54000002;0.77575803;0;0;0;1;0;0.208333;
0.063013703;0;0;0;0;0;1;0;0;0.52999997;
0.77575803;0;0;0;1;0;0.229167;0.063013703;0;0;
0;0;0;1;0;0;0.49000001;0.77575803;0;0;
0;1;0;0.25;0.063013703;0;0;0;0;0;
1;0;0;0.54000002;0.74545503;0;0;0;1;0;
0.27083299;0.063013703;0;0;0;0;0;1;0;0;
0.56999999;0.74545503;0;0;0;1;0;0.29166701;0.063013703;0;
0;0;0;0;1;0;0;0.60000002;0.71515101;0;
0;0;1;0;0.3125;0.063013703;0;0;0;0;
0;1;0;0;0.63;0.68484801;0;0;0;1;
0;0.33333299;0.063013703;0;0;0;0;0;1;0;
0;0.70999998;0.65454501;0;0;0;1;0;0.35416701;0.063013703;
0;0;0;0;0;1;0;0;0.74000001;0.65454501;
0;0;0;1;0;0.375;0.063013703;0;0;0;
0;0;1;0;0;0.79000002;0.62424201;0;0;0;
1;0;0.39583299;0.063013703;0;0;0;0;0;1;
0;0;0.81;0.62424201;0;0;0;1;0;0.41666701;
0.063013703;0;0;0;0;0;1;0;0;0.81999999;
0.62424201;0;0;0;1;0;0.4375;0.063013703;0;0;
0;0;0;1;0;0;0.85000002;0.62424201;0;0;
0;1;0;0.47916701;0.063013703;0;0;0;0;0;
1;0;0;0.88999999;0.59393901;0;0;0;1;0;
0.5;0.063013703;0;0;0;0;0;1;0;0;
0.89999998;0.59393901;0;0;0;1;0;0.52083302;0.063013703;0;
0;0;0;0;1;0;0;0.89999998;0.59393901;0;
0;0;1;0;0.54166698;0.063013703;0;0;0;0;
0;1;0;0;0.91000003;0.59393901;0;0;0;1;
0;0.5625;0.063013703;0;0;0;0;0;1;0;
0;0.88999999;0.59393901;0;0;0;1;0;0.58333302;0.063013703;
0;0;0;0;0;1;0;0;0.89999998;0.59393901;
0;0;0;1;0;0.60416698;0.063013703;0;0;0;
0;0;1;0;0;0.89999998;0.59393901;0;0;0;
1;0;0.625;0.063013703;0;0;0;0;0;1;
0;0;0.89999998;0.59393901;0;0;0;1;0;0.64583302;
0.063013703;0;0;0;0;0;1;0;0;0.91000003;
0.563636;0;0;0;1;0;0.66666698;0.063013703;0;0;
0;0;0;1;0;0;0.92000002;0.563636;0;0;
0;1;0;0.6875;0.063013703;0;0;0;0;0;
1;0;0;0.94;0.563636;0;0;0;1;0;
0.70833302;0.063013703;0;0;0;0;0;1;0;0;
0.94999999;0.50303;0;0;0;1;0;0.72916698;0.063013703;0;
0;0;0;0;1;0;0;0.93000001;0.533333;0;
0;0;1;0;0.75;0.063013703;0;0;0;0;
0;1;0;0;0.93000001;0.533333;0;0;0;1;
0;0.77083302;0.063013703;0;0;0;0;0;1;0;
0;0.91000003;0.563636;0;0;0;1;0;0.79166698;0.063013703;
0;0;0;0;0;1;0;0;0.85000002;0.59393901;
0;0;0;1;0;0.8125;0.063013703;0;0;0;
0;0;1;0;0;0.80000001;0.62424201;0;0;0;
1;0;0.83333302;0.063013703;0;0;0;0;0;1;
0;0;0.75;0.65454501;0;0;0;1;0;0.85416698;
0.063013703;0;0;0;0;0;1;0;0;0.69999999;
0.68484801;0;0;0;1;0;0.875;0.063013703;0;0;
0;0;0;1;0;0;0.68000001;0.68484801;0;0;
0;1;0;0.89583302;0.063013703;0;0;0;0;0;
1;0;0;0.63;0.74545503;0;0;0;1;0;
0.91666698;0.063013703;0;0;0;0;0;1;0;0;
0.56999999;0.74545503;0;0;0;1;0;0.9375;0.063013703;0;
0;0;0;0;1;0;0;0.55000001;0.74545503;0;
0;0;1;0;0.97916698;0.063013703;0;0;0;0;
0;1;0;0;0.56;0.77575803;0;0;0;1;
0;0;0.0657534;0;0;0;0;0;0;1;
0;0.50999999;0.80606103;0;0;0;1;0;0.0208333;0.0657534;
0;0;0;0;0;0;1;0;0.51999998;0.80606103;
0;0;0;1;0;0.041666701;0.0657534;0;0;0;
0;0;0;1;0;0.5;0.80606103;0;0;0;
1;0;0.0625;0.0657534;0;0;0;0;0;0;
1;0;0.50999999;0.80606103;0;0;0;1;0;0.083333299;
0.0657534;0;0;0;0;0;0;1;0;0.5;
0.80606103;0;0;0;1;0;0.104167;0.0657534;0;0;
0;0;0;0;1;0;0.49000001;0.83636397;0;0;
0;1;0;0.125;0.0657534;0;0;0;0;0;
0;1;0;0.5;0.80606103;0;0;0;1;0;
0.145833;0.0657534;0;0;0;0;0;0;1;0;
0.52999997;0.80606103;0;0;0;1;0;0.166667;0.0657534;0;
0;0;0;0;0;1;0;0.54000002;0.77575803;0;
0;0;1;0;0.1875;0.0657534;0;0;0;0;
0;0;1;0;0.56999999;0.77575803;0;0;0;1;
0;0.208333;0.0657534;0;0;0;0;0;0;1;
0;0.58999997;0.77575803;0;0;0;1;0;0.229167;0.0657534;
0;0;0;0;0;0;1;0;0.58999997;0.74545503;
0;0;0;1;0;0.25;0.0657534;0;0;0;
0;0;0;1;0;0.61000001;0.71515101;0;0;0;
1;0;0.27083299;0.0657534;0;0;0;0;0;0;
1;0;0.62;0.71515101;0;0;0;1;0;0.29166701;
0.0657534;0;0;0;0;0;0;1;0;0.63999999;
0.68484801;0;0;0;1;0;0.3125;0.0657534;0;0;
0;0;0;0;1;0;0.69999999;0.65454501;0;0;
0;1;0;0.33333299;0.0657534;0;0;0;0;0;
0;1;0;0.74000001;0.62424201;0;0;0;1;0;
0.35416701;0.0657534;0;0;0;0;0;0;1;0;
0.75999999;0.62424201;0;0;0;1;0;0.375;0.0657534;0;
0;0;0;0;0;1;0;0.74000001;0.62424201;0;
0;0;1;0;0.39583299;0.0657534;0;0;0;0;
0;0;1;0;0.75;0.62424201;0;0;0;1;
0;0.41666701;0.0657534;0;0;0;0;0;0;1;
0;0.75999999;0.59393901;0;0;0;1;0;0.4375;0.0657534;
0;0;0;0;0;0;1;0;0.77999997;0.59393901;
0;0;0;1;0;0.47916701;0.0657534;0;0;0;
0;0;0;1;0;0.77999997;0.563636;0;0;0;
1;0;0.5;0.0657534;0;0;0;0;0;0;
1;0;0.76999998;0.563636;0;0;0;1;0;0.52083302;
0.0657534;0;0;0;0;0;0;1;0;0.80000001;
0.563636;0;0;0;1;0;0.54166698;0.0657534;0;0;
0;0;0;0;1;0;0.81;0.563636;0;0;
0;1;0;0.5625;0.0657534;0;0;0;0;0;
0;1;0;0.81;0.563636;0;0;0;1;0;
0.58333302;0.0657534;0;0;0;0;0;0;1;0;
0.81;0.533333;0;0;0;1;0;0.60416698;0.0657534;0;
0;0;0;0;0;1;0;0.79000002;0.563636;0;
0;0;1;0;0.625;0.0657534;0;0;0;0;
0;0;1;0;0.76999998;0.563636;0;0;0;1;
0;0.64583302;0.0657534;0;0;0;0;0;0;1;
0;0.76999998;0.59393901;0;0;0;1;0;0.66666698;0.0657534;
0;0;0;0;0;0;1;0;0.75999999;0.59393901;
0;0;0;1;0;0.6875;0.0657534;0;0;0;
0;0;0;1;0;0.75999999;0.59393901;0;0;0;
1;0;0.70833302;0.0657534;0;0;0;0;0;0;
1;0;0.81;0.563636;0;0;0;1;0;0.72916698;
0.0657534;0;0;0;0;0;0;1;0;0.80000001;
0.563636;0;0;0;1;0;0.75;0.0657534;0;0;
0;0;0;0;1;0;0.81;0.563636;0;0;
0;1;0;0.77083302;0.0657534;0;0;0;0;0;
0;1;0;0.81999999;0.563636;0;0;0;1;0;
0.79166698;0.0657534;0;0;0;0;0;0;1;0;
0.81999999;0.563636;0;0;0;1;0;0.8125;0.0657534;0;
0;0;0;0;0;1;0;0.80000001;0.59393901;0;
0;0;1;0;0.83333302;0.0657534;0;0;0;0;
0;0;1;0;0.76999998;0.59393901;0;0;0;1;
0;0.85416698;0.0657534;0;0;0;0;0;0;1;
0;0.70999998;0.62424201;0;0;0;1;0;0.875;0.0657534;
0;0;0;0;0;0;1;0;0.64999998;0.65454501;
0;0;0;1;0;0.89583302;0.0657534;0;0;0;
0;0;0;1;0;0.60000002;0.65454501;0;0;0;
1;0;0.91666698;0.0657534;0;0;0;0;0;0;
1;0;0.55000001;0.68484801;0;0;0;1;0;0.9375;
0.0657534;0;0;0;0;0;0;1;0;0.54000002;
0.68484801;0;0;0;1;0;0.97916698;0.0657534;0;0;
0;0;0;0;1;0;0.5;0.71515101;0;0;
0;1;0;0;0.068493202;1;0;0;0;0;
0;0;0;0.50999999;0.71515101;0;0;0;1;0;
0.0208333;0.068493202;1;0;0;0;0;0;0;0;
0.5;0.71515101;0;0;0;1;0;0.041666701;0.068493202;1;
0;0;0;0;0;0;0;0.49000001;0.71515101;0;
0;0;1;0;0.0625;0.068493202;1;0;0;0;
0;0;0;0;0.47999999;0.77575803;0;0;0;1;
0;0.083333299;0.068493202;1;0;0;0;0;0;0;
0;0.5;0.74545503;0;0;0;1;0;0.104167;0.068493202;
1;0;0;0;0;0;0;0;0.46000001;0.77575803;
0;0;0;1;0;0.125;0.068493202;1;0;0;
0;0;0;0;0;0.46000001;0.77575803;0;0;0;
1;0;0.145833;0.068493202;1;0;0;0;0;0;
0;0;0.44;0.80606103;0;0;0;1;0;0.166667;
0.068493202;1;0;0;0;0;0;0;0;0.43000001;
0.77575803;0;0;0;1;0;0.1875;0.068493202;1;0;
0;0;0;0;0;0;0.46000001;0.77575803;0;0;
0;1;0;0.208333;0.068493202;1;0;0;0;0;
0;0;0;0.47;0.74545503;0;0;0;1;0;
0.229167;0.068493202;1;0;0;0;0;0;0;0;
0.44;0.77575803;0;0;0;1;0;0.25;0.068493202;1;
0;0;0;0;0;0;0;0.52999997;0.71515101;0;
0;0;1;0;0.27083299;0.068493202;1;0;0;0;
0;0;0;0;0.57999998;0.71515101;0;0;0;1;
0;0.29166701;0.068493202;1;0;0;0;0;0;0;
0;0.63999999;0.71515101;0;0;0;1;0;0.3125;0.068493202;
1;0;0;0;0;0;0;0;0.67000002;0.68484801;
0;0;0;1;0;0.33333299;0.068493202;1;0;0;
0;0;0;0;0;0.73000002;0.65454501;0;0;0;
1;0;0.35416701;0.068493202;1;0;0;0;0;0;
0;0;0.75;0.65454501;0;0;0;1;0;0.375;
0.068493202;1;0;0;0;0;0;0;0;0.79000002;
0.62424201;0;0;0;1;0;0.39583299;0.068493202;1;0;
0;0;0;0;0;0;0.81999999;0.59393901;0;0;
0;1;0;0.41666701;0.068493202;1;0;0;0;0;
0;0;0;0.82999998;0.62424201;0;0;0;1;0;
0.4375;0.068493202;1;0;0;0;0;0;0;0;
0.82999998;0.62424201;0;0;0;1;0;0.47916701;0.068493202;1;
0;0;0;0;0;0;0;0.85000002;0.62424201;0;
0;0;0;1;0.5;0.068493202;1;0;0;0;
0;0;0;0;0.88;0.59393901;0;0;0;0;
1;0.52083302;0.068493202;1;0;0;0;0;0;0;
0;0.88999999;0.59393901;0;0;0;0;1;0.54166698;0.068493202;
1;0;0;0;0;0;0;0;0.87;0.59393901;
0;0;0;0;1;0.5625;0.068493202;1;0;0;
0;0;0;0;0;0.88;0.59393901;0;0;0;
0;1;0.58333302;0.068493202;1;0;0;0;0;0;
0;0;0.88999999;0.59393901;0;0;0;0;1;0.60416698;
0.068493202;1;0;0;0;0;0;0;0;0.88;
0.59393901;0;0;0;0;1;0.625;0.068493202;1;0;
0;0;0;0;0;0;0.88999999;0.59393901;0;0;
0;0;1;0.64583302;0.068493202;1;0;0;0;0;
0;0;0;0.94;0.563636;0;0;0;0;1;
0.66666698;0.068493202;1;0;0;0;0;0;0;0;
0.94;0.563636;0;0;0;0;1;0.6875;0.068493202;1;
0;0;0;0;0;0;0;0.92000002;0.563636;0;
0;0;0;1;0.70833302;0.068493202;1;0;0;0;
0;0;0;0;0.92000002;0.563636;0;0;0;0;
1;0.72916698;0.068493202;1;0;0;0;0;0;0;
0;0.91000003;0.563636;0;0;0;0;1;0.75;0.068493202;
1;0;0;0;0;0;0;0;0.91000003;0.563636;
0;0;0;0;1;0.77083302;0.068493202;1;0;0;
0;0;0;0;0;0.89999998;0.59393901;0;0;0;
0;1;0.79166698;0.068493202;1;0;0;0;0;0;
0;0;0.87;0.59393901;0;0;0;0;1;0.8125;
0.068493202;1;0;0;0;0;0;0;0;0.81999999;
0.62424201;0;0;0;0;1;0.83333302;0.068493202;1;0;
0;0;0;0;0;0;0.81999999;0.62424201;0;0;
0;0;1;0.85416698;0.068493202;1;0;0;0;0;
0;0;0;0.72000003;0.65454501;0;0;0;0;1;
0.875;0.068493202;1;0;0;0;0;0;0;0;
0.67000002;0.71515101;0;0;0;0;1;0.89583302;0.068493202;1;
0;0;0;0;0;0;0;0.60000002;0.71515101;0;
0;0;0;1;0.91666698;0.068493202;1;0;0;0;
0;0;0;0;0.56;0.71515101;0;0;0;0;
1;0.9375;0.068493202;1;0;0;0;0;0;0;
0;0.55000001;0.71515101;0;0;0;0;1;0.97916698;0.068493202;
1;0;0;0;0;0;0;0;0.50999999;0.74545503;
0;0;0;0;1;0;0.0712329;0;1;0;
0;0;0;0;0;0.5;0.77575803;0;0;0;
0;1;0.0208333;0.0712329;0;1;0;0;0;0;
0;0;0.44999999;0.80606103;0;0;0;0;1;0.041666701;
0.0712329;0;1;0;0;0;0;0;0;0.44;
0.80606103;0;0;0;0;1;0.0625;0.0712329;0;1;
0;0;0;0;0;0;0.46000001;0.77575803;0;0;
0;0;1;0.083333299;0.0712329;0;1;0;0;0;
0;0;0;0.49000001;0.77575803;0;0;0;0;1;
0.104167;0.0712329;0;1;0;0;0;0;0;0;
0.47999999;0.74545503;0;0;0;0;1;0.125;0.0712329;0;
1;0;0;0;0;0;0;0.46000001;0.77575803;0;
0;0;0;1;0.145833;0.0712329;0;1;0;0;
0;0;0;0;0.44999999;0.77575803;0;0;0;0;
1;0.166667;0.0712329;0;1;0;0;0;0;0;
0;0.44999999;0.77575803;0;0;0;0;1;0.1875;0.0712329;
0;1;0;0;0;0;0;0;0.47;0.77575803;
0;0;0;0;1;0.208333;0.0712329;0;1;0;
0;0;0;0;0;0.61000001;0.71515101;0;0;0;
0;1;0.229167;0.0712329;0;1;0;0;0;0;
0;0;0.67000002;0.71515101;0;0;0;0;1;0.25;
0.0712329;0;1;0;0;0;0;0;0;0.58999997;
0.74545503;0;0;0;0;1;0.27083299;0.0712329;0;1;
0;0;0;0;0;0;0.52999997;0.74545503;0;0;
0;0;1;0.29166701;0.0712329;0;1;0;0;0;
0;0;0;0.51999998;0.77575803;0;0;0;0;1;
0.3125;0.0712329;0;1;0;0;0;0;0;0;
0.61000001;0.71515101;0;0;0;0;1;0.33333299;0.0712329;0;
1;0;0;0;0;0;0;0.63;0.71515101;0;
0;0;0;1;0.35416701;0.0712329;0;1;0;0;
0;0;0;0;0.72000003;0.71515101;0;0;0;0;
1;0.375;0.0712329;0;1;0;0;0;0;0;
0;0.73000002;0.68484801;0;0;0;0;1;0.39583299;0.0712329;
0;1;0;0;0;0;0;0;0.80000001;0.65454501;
0;0;0;0;1;0.41666701;0.0712329;0;1;0;
0;0;0;0;0;0.81999999;0.65454501;0;0;0;
0;1;0.4375;0.0712329;0;1;0;0;0;0;
0;0;0.85000002;0.62424201;0;0;0;0;1;0.47916701;
0.0712329;0;1;0;0;0;0;0;0;0.86000001;
0.62424201;0;0;1;0;0;0.5;0.0712329;0;1;
0;0;0;0;0;0;0.82999998;0.62424201;0;0;
1;0;0;0.52083302;0.0712329;0;1;0;0;0;
0;0;0;0.81999999;0.62424201;0;0;1;0;0;
0.54166698;0.0712329;0;1;0;0;0;0;0;0;
0.80000001;0.65454501;0;0;1;0;0;0.5625;0.0712329;0;
1;0;0;0;0;0;0;0.80000001;0.65454501;0;
0;1;0;0;0.58333302;0.0712329;0;1;0;0;
0;0;0;0;0.83999997;0.62424201;0;0;1;0;
0;0.60416698;0.0712329;0;1;0;0;0;0;0;
0;0.85000002;0.59393901;0;0;1;0;0;0.625;0.0712329;
0;1;0;0;0;0;0;0;0.82999998;0.59393901;
0;0;1;0;0;0.64583302;0.0712329;0;1;0;
0;0;0;0;0;0.87;0.59393901;0;0;1;
0;0;0.66666698;0.0712329;0;1;0;0;0;0;
0;0;0.85000002;0.59393901;0;0;1;0;0;0.6875;
0.0712329;0;1;0;0;0;0;0;0;0.85000002;
0.59393901;0;0;1;0;0;0.70833302;0.0712329;0;1;
0;0;0;0;0;0;0.85000002;0.62424201;0;0;
1;0;0;0.72916698;0.0712329;0;1;0;0;0;
0;0;0;0.81;0.62424201;0;0;1;0;0;
0.75;0.0712329;0;1;0;0;0;0;0;0;
0.87;0.59393901;0;0;1;0;0;0.77083302;0.0712329;0;
1;0;0;0;0;0;0;0.87;0.59393901;0;
0;1;0;0;0.79166698;0.0712329;0;1;0;0;
0;0;0;0;0.85000002;0.59393901;0;0;1;0;
0;0.8125;0.0712329;0;1;0;0;0;0;0;
0;0.81999999;0.62424201;0;0;1;0;0;0.83333302;0.0712329;
0;1;0;0;0;0;0;0;0.74000001;0.65454501;
0;0;1;0;0;0.85416698;0.0712329;0;1;0;
0;0;0;0;0;0.66000003;0.68484801;0;0;1;
0;0;0.875;0.0712329;0;1;0;0;0;0;
0;0;0.69;0.68484801;0;0;1;0;0;0.89583302;
0.0712329;0;1;0;0;0;0;0;0;0.62;
0.74545503;0;0;1;0;0;0.91666698;0.0712329;0;1;
0;0;0;0;0;0;0.55000001;0.80606103;0;0;
1;0;0;0.9375;0.0712329;0;1;0;0;0;
0;0;0;0.57999998;0.74545503;0;0;1;0;0;
0.97916698;0.0712329;0;1;0;0;0;0;0;0;
0.56;0.77575803;0;0;1;0;0;0;0.073972598;0;
0;1;0;0;0;0;0;0.58999997;0.77575803;0;
0;1;0;0;0.041666701;0.073972598;0;0;1;0;
0;0;0;0;0.58999997;0.80606103;0;0;1;0;
0;0.0625;0.073972598;0;0;1;0;0;0;0;
0;0.56999999;0.77575803;0;0;1;0;0;0.083333299;0.073972598;
0;0;1;0;0;0;0;0;0.57999998;0.77575803;
0;0;1;0;0;0.104167;0.073972598;0;0;1;
0;0;0;0;0;0.55000001;0.80606103;0;0;1;
0;0;0.125;0.073972598;0;0;1;0;0;0;
0;0;0.67000002;0.74545503;0;0;1;0;0;0.145833;
0.073972598;0;0;1;0;0;0;0;0;0.72000003;
0.71515101;0;0;1;0;0;0.166667;0.073972598;0;0;
1;0;0;0;0;0;0.69;0.74545503;0;0;
1;0;0;0.1875;0.073972598;0;0;1;0;0;
0;0;0;0.60000002;0.77575803;0;0;1;0;0;
0.208333;0.073972598;0;0;1;0;0;0;0;0;
0.55000001;0.77575803;0;0;1;0;0;0.229167;0.073972598;0;
0;1;0;0;0;0;0;0.5;0.80606103;0;
0;1;0;0;0.25;0.073972598;0;0;1;0;
0;0;0;0;0.49000001;0.80606103;0;0;1;0;
0;0.27083299;0.073972598;0;0;1;0;0;0;0;
0;0.49000001;0.77575803;0;0;1;0;0;0.29166701;0.073972598;
0;0;1;0;0;0;0;0;0.51999998;0.74545503;
0;0;1;0;0;0.3125;0.073972598;0;0;1;
0;0;0;0;0;0.55000001;0.71515101;0;0;1;
0;0;0.33333299;0.073972598;0;0;1;0;0;0;
0;0;0.61000001;0.68484801;0;0;1;0;0;0.35416701;
0.073972598;0;0;1;0;0;0;0;0;0.63;
0.68484801;0;0;1;0;0;0.375;0.073972598;0;0;
1;0;0;0;0;0;0.66000003;0.65454501;0;0;
1;0;0;0.39583299;0.073972598;0;0;1;0;0;
0;0;0;0.68000001;0.65454501;0;0;1;0;0;
0.41666701;0.073972598;0;0;1;0;0;0;0;0;
0.75;0.62424201;0;0;1;0;0;0.4375;0.073972598;0;
0;1;0;0;0;0;0;0.81999999;0.59393901;0;
0;1;0;0;0.47916701;0.073972598;0;0;1;0;
0;0;0;0;0.83999997;0.59393901;0;0;0;0;
1;0.5;0.073972598;0;0;1;0;0;0;0;
0;0.85000002;0.59393901;0;0;0;0;1;0.52083302;0.073972598;
0;0;1;0;0;0;0;0;0.82999998;0.59393901;
0;0;0;0;1;0.54166698;0.073972598;0;0;1;
0;0;0;0;0;0.86000001;0.59393901;0;0;0;
0;1;0.5625;0.073972598;0;0;1;0;0;0;
0;0;0.86000001;0.59393901;0;0;0;0;1;0.58333302;
0.073972598;0;0;1;0;0;0;0;0;0.87;
0.59393901;0;0;0;0;1;0.60416698;0.073972598;0;0;
1;0;0;0;0;0;0.88999999;0.59393901;0;0;
0;0;1;0.625;0.073972598;0;0;1;0;0;
0;0;0;0.88999999;0.563636;0;0;0;0;1;
0.64583302;0.073972598;0;0;1;0;0;0;0;0;
0.88999999;0.563636;0;0;0;0;1;0.66666698;0.073972598;0;
0;1;0;0;0;0;0;0.88;0.59393901;0;
0;0;0;1;0.6875;0.073972598;0;0;1;0;
0;0;0;0;0.88999999;0.563636;0;0;0;0;
1;0.70833302;0.073972598;0;0;1;0;0;0;0;
0;0.88999999;0.59393901;0;0;0;0;1;0.72916698;0.073972598;
0;0;1;0;0;0;0;0;0.88999999;0.563636;
0;0;0;0;1;0.75;0.073972598;0;0;1;
0;0;0;0;0;0.88999999;0.563636;0;0;0;
0;1;0.77083302;0.073972598;0;0;1;0;0;0;
0;0;0.87;0.563636;0;0;0;0;1;0.79166698;
0.073972598;0;0;1;0;0;0;0;0;0.83999997;
0.59393901;0;0;0;0;1;0.8125;0.073972598;0;0;
1;0;0;0;0;0;0.75999999;0.65454501;0;0;
0;0;1;0.83333302;0.073972598;0;0;1;0;0;
0;0;0;0.68000001;0.68484801;0;0;0;0;1;
0.85416698;0.073972598;0;0;1;0;0;0;0;0;
0.67000002;0.71515101;0;0;0;0;1;0.875;0.073972598;0;
0;1;0;0;0;0;0;0.62;0.74545503;0;
0;0;0;1;0.89583302;0.073972598;0;0;1;0;
0;0;0;0;0.58999997;0.74545503;0;0;0;0;
1;0.91666698;0.073972598;0;0;1;0;0;0;0;
0;0.58999997;0.77575803;0;0;0;0;1;0.9375;0.073972598;
0;0;1;0;0;0;0;0;0.56999999;0.80606103;
0;0;1;0;0;0.97916698;0.073972598;0;0;1;
0;0;0;0;0;0.60000002;0.77575803;0;0;1;
0;0;0;0.076712303;0;0;0;1;0;0;
0;0;0.52999997;0.80606103;0;0;1;0;0;0.0208333;
0.076712303;0;0;0;1;0;0;0;0;0.5;
0.86666697;0;0;1;0;0;0.041666701;0.076712303;0;0;
0;1;0;0;0;0;0.56999999;0.80606103;0;0;
1;0;0;0.0625;0.076712303;0;0;0;1;0;
0;0;0;0.55000001;0.80606103;0;0;1;0;0;
0.083333299;0.076712303;0;0;0;1;0;0;0;0;
0.54000002;0.80606103;0;0;1;0;0;0.104167;0.076712303;0;
0;0;1;0;0;0;0;0.5;0.86666697;0;
0;1;0;0;0.125;0.076712303;0;0;0;1;
0;0;0;0;0.47999999;0.86666697;0;0;1;0;
0;0.145833;0.076712303;0;0;0;1;0;0;0;
0;0.47999999;0.86666697;0;0;1;0;0;0.166667;0.076712303;
0;0;0;1;0;0;0;0;0.50999999;0.83636397;
0;0;0;0;1;0.1875;0.076712303;0;0;0;
1;0;0;0;0;0.5;0.83636397;0;0;0;
0;1;0.208333;0.076712303;0;0;0;1;0;0;
0;0;0.56999999;0.80606103;0;0;0;0;1;0.229167;
0.076712303;0;0;0;1;0;0;0;0;0.58999997;
0.80606103;0;0;0;0;1;0.25;0.076712303;0;0;
0;1;0;0;0;0;0.58999997;0.77575803;0;0;
0;0;1;0.27083299;0.076712303;0;0;0;1;0;
0;0;0;0.63;0.74545503;0;0;0;0;1;
0.29166701;0.076712303;0;0;0;1;0;0;0;0;
0.64999998;0.74545503;0;0;0;0;1;0.3125;0.076712303;0;
0;0;1;0;0;0;0;0.69999999;0.71515101;0;
0;0;0;1;0.33333299;0.076712303;0;0;0;1;
0;0;0;0;0.72000003;0.68484801;0;0;0;0;
1;0.35416701;0.076712303;0;0;0;1;0;0;0;
0;0.77999997;0.65454501;0;0;0;0;1;0.375;0.076712303;
0;0;0;1;0;0;0;0;0.79000002;0.65454501;
0;0;0;0;1;0.39583299;0.076712303;0;0;0;
1;0;0;0;0;0.81999999;0.62424201;0;0;0;
0;1;0.41666701;0.076712303;0;0;0;1;0;0;
0;0;0.82999998;0.62424201;0;0;0;0;1;0.4375;
0.076712303;0;0;0;1;0;0;0;0;0.82999998;
0.62424201;0;0;0;0;1;0.47916701;0.076712303;0;0;
0;1;0;0;0;0;0.85000002;0.62424201;0;0;
1;0;0;0.5;0.076712303;0;0;0;1;0;
0;0;0;0.88999999;0.59393901;0;0;1;0;0;
0.52083302;0.076712303;0;0;0;1;0;0;0;0;
0.85000002;0.59393901;0;0;1;0;0;0.54166698;0.076712303;0;
0;0;1;0;0;0;0;0.86000001;0.59393901;0;
0;1;0;0;0.5625;0.076712303;0;0;0;1;
0;0;0;0;0.88999999;0.59393901;0;0;1;0;
0;0.58333302;0.076712303;0;0;0;1;0;0;0;
0;0.88999999;0.59393901;0;0;1;0;0;0.60416698;0.076712303;
0;0;0;1;0;0;0;0;0.91000003;0.563636;
0;0;1;0;0;0.625;0.076712303;0;0;0;
1;0;0;0;0;0.91000003;0.59393901;0;0;1;
0;0;0.64583302;0.076712303;0;0;0;1;0;0;
0;0;0.91000003;0.59393901;0;0;1;0;0;0.66666698;
0.076712303;0;0;0;1;0;0;0;0;0.92000002;
0.59393901;0;0;1;0;0;0.6875;0.076712303;0;0;
0;1;0;0;0;0;0.91000003;0.59393901;0;0;
1;0;0;0.70833302;0.076712303;0;0;0;1;0;
0;0;0;0.88999999;0.59393901;0;0;1;0;0;
0.72916698;0.076712303;0;0;0;1;0;0;0;0;
0.92000002;0.563636;0;0;1;0;0;0.75;0.076712303;0;
0;0;1;0;0;0;0;0.91000003;0.59393901;0;
0;1;0;0;0.77083302;0.076712303;0;0;0;1;
0;0;0;0;0.87;0.62424201;0;0;1;0;
0;0.79166698;0.076712303;0;0;0;1;0;0;0;
0;0.83999997;0.65454501;0;0;1;0;0;0.8125;0.076712303;
0;0;0;1;0;0;0;0;0.75999999;0.71515101;
0;0;1;0;0;0.83333302;0.076712303;0;0;0;
1;0;0;0;0;0.74000001;0.71515101;0;0;1;
0;0;0.85416698;0.076712303;0;0;0;1;0;0;
0;0;0.72000003;0.71515101;0;0;1;0;0;0.875;
0.076712303;0;0;0;1;0;0;0;0;0.69;
0.71515101;0;0;1;0;0;0.89583302;0.076712303;0;0;
0;1;0;0;0;0;0.68000001;0.74545503;0;0;
1;0;0;0.91666698;0.076712303;0;0;0;1;0;
0;0;0;0.64999998;0.74545503;0;0;1;0;0;
0.9375;0.076712303;0;0;0;1;0;0;0;0;
0.61000001;0.77575803;0;0;1;0;0;0.97916698;0.076712303;0;
0;0;1;0;0;0;0;0.55000001;0.83636397;0;
0;0;0;1;0;0.079452097;0;0;0;0;
1;0;0;0;0.50999999;0.83636397;0;0;0;0;
1;0.0208333;0.079452097;0;0;0;0;1;0;0;
0;0.56;0.80606103;0;0;0;0;1;0.041666701;0.079452097;
0;0;0;0;1;0;0;0;0.58999997;0.80606103;
0;0;0;0;1;0.0625;0.079452097;0;0;0;
0;1;0;0;0;0.52999997;0.86666697;0;0;0;
0;1;0.083333299;0.079452097;0;0;0;0;1;0;
0;0;0.47;0.86666697;0;0;0;0;1;0.104167;
0.079452097;0;0;0;0;1;0;0;0;0.51999998;
0.83636397;0;0;0;0;1;0.125;0.079452097;0;0;
0;0;1;0;0;0;0.54000002;0.83636397;0;0;
0;0;1;0.145833;0.079452097;0;0;0;0;1;
0;0;0;0.55000001;0.83636397;0;0;0;0;1;
0.166667;0.079452097;0;0;0;0;1;0;0;0;
0.52999997;0.86666697;0;0;0;0;1;0.1875;0.079452097;0;
0;0;0;1;0;0;0;0.58999997;0.80606103;0;
0;0;0;1;0.208333;0.079452097;0;0;0;0;
1;0;0;0;0.55000001;0.80606103;0;0;0;0;
1;0.229167;0.079452097;0;0;0;0;1;0;0;
0;0.60000002;0.77575803;0;0;0;0;1;0.25;0.079452097;
0;0;0;0;1;0;0;0;0.61000001;0.77575803;
0;0;0;0;1;0.27083299;0.079452097;0;0;0;
0;1;0;0;0;0.62;0.77575803;0;0;0;
0;1;0.29166701;0.079452097;0;0;0;0;1;0;
0;0;0.67000002;0.71515101;0;0;0;0;1;0.3125;
0.079452097;0;0;0;0;1;0;0;0;0.73000002;
0.71515101;0;0;0;0;1;0.33333299;0.079452097;0;0;
0;0;1;0;0;0;0.77999997;0.68484801;0;0;
0;0;1;0.35416701;0.079452097;0;0;0;0;1;
0;0;0;0.77999997;0.68484801;0;0;0;0;1;
0.375;0.079452097;0;0;0;0;1;0;0;0;
0.75;0.68484801;0;0;0;0;1;0.39583299;0.079452097;0;
0;0;0;1;0;0;0;0.82999998;0.68484801;0;
0;0;0;1;0.41666701;0.079452097;0;0;0;0;
1;0;0;0;0.85000002;0.68484801;0;0;0;0;
1;0.4375;0.079452097;0;0;0;0;1;0;0;
0;0.85000002;0.68484801;0;0;0;0;1;0.47916701;0.079452097;
0;0;0;0;1;0;0;0;0.85000002;0.68484801;
0;0;0;0;1;0.5;0.079452097;0;0;0;
0;1;0;0;0;0.81;0.68484801;0;0;0;
0;1;0.52083302;0.079452097;0;0;0;0;1;0;
0;0;0.82999998;0.68484801;0;0;0;0;1;0.54166698;
0.079452097;0;0;0;0;1;0;0;0;0.83999997;
0.68484801;0;0;0;0;1;0.5625;0.079452097;0;0;
0;0;1;0;0;0;0.86000001;0.68484801;0;0;
0;0;1;0.58333302;0.079452097;0;0;0;0;1;
0;0;0;0.86000001;0.65454501;0;0;0;0;1;
0.60416698;0.079452097;0;0;0;0;1;0;0;0;
0.89999998;0.65454501;0;0;0;0;1;0.625;0.079452097;0;
0;0;0;1;0;0;0;0.94;0.65454501;0;
0;0;0;1;0.64583302;0.079452097;0;0;0;0;
1;0;0;0;0.93000001;0.65454501;0;0;0;0;
1;0.66666698;0.079452097;0;0;0;0;1;0;0;
0;0.94;0.65454501;0;0;0;0;1;0.6875;0.079452097;
0;0;0;0;1;0;0;0;0.93000001;0.65454501;
0;0;0;0;1;0.70833302;0.079452097;0;0;0;
0;1;0;0;0;0.94;0.65454501;0;0;0;
0;1;0.72916698;0.079452097;0;0;0;0;1;0;
0;0;0.97000003;0.62424201;0;0;0;0;1;0.75;
0.079452097;0;0;0;0;1;0;0;0;0.98000002;
0.62424201;0;0;1;0;0;0.77083302;0.079452097;0;0;
0;0;1;0;0;0;0.95999998;0.62424201;0;0;
1;0;0;0.79166698;0.079452097;0;0;0;0;1;
0;0;0;0.95999998;0.62424201;0;0;1;0;0;
0.8125;0.079452097;0;0;0;0;1;0;0;0;
0.95999998;0.62424201;0;0;1;0;0;0.83333302;0.079452097;0;
0;0;0;1;0;0;0;0.95999998;0.62424201;0;
0;1;0;0;0.85416698;0.079452097;0;0;0;0;
1;0;0;0;0.97000003;0.62424201;0;0;1;0;
0;0.875;0.079452097;0;0;0;0;1;0;0;
0;0.99000001;0.62424201;0;0;1;0;0;0.89583302;0.079452097;
0;0;0;0;1;0;0;0;0.99000001;0.62424201;
0;0;1;0;0;0.91666698;0.079452097;0;0;0;
0;1;0;0;0;0.98000002;0.65454501;0;0;1;
0;0;0.9375;0.079452097;0;0;0;0;1;0;
0;0;0.94999999;0.65454501;0;0;1;0;0;0.97916698;
0.079452097;0;0;0;0;1;0;0;0;0.83999997;
0.68484801;0;0;1;0;0;0;0.082191803;0;0;
0;0;0;1;0;0;0.83999997;0.68484801;0;0;
1;0;0;0.0208333;0.082191803;0;0;0;0;0;
1;0;0;0.76999998;0.74545503;0;0;1;0;0;
0.041666701;0.082191803;0;0;0;0;0;1;0;0;
0.74000001;0.74545503;0;0;1;0;0;0.0625;0.082191803;0;
0;0;0;0;1;0;0;0.73000002;0.74545503;0;
0;1;0;0;0.104167;0.082191803;0;0;0;0;
0;1;0;0;0.72000003;0.74545503;0;0;1;0;
0;0.125;0.082191803;0;0;0;0;0;1;0;
0;0.73000002;0.74545503;0;0;1;0;0;0.145833;0.082191803;
0;0;0;0;0;1;0;0;0.69999999;0.74545503;
0;0;1;0;0;0.166667;0.082191803;0;0;0;
0;0;1;0;0;0.67000002;0.74545503;0;0;1;
0;0;0.1875;0.082191803;0;0;0;0;0;1;
0;0;0.69999999;0.74545503;0;0;1;0;0;0.208333;
0.082191803;0;0;0;0;0;1;0;0;0.66000003;
0.74545503;0;0;1;0;0;0.229167;0.082191803;0;0;
0;0;0;1;0;0;0.69;0.74545503;0;0;
1;0;0;0.25;0.082191803;0;0;0;0;0;
1;0;0;0.75;0.71515101;0;0;1;0;0;
0.27083299;0.082191803;0;0;0;0;0;1;0;0;
0.76999998;0.71515101;0;0;1;0;0;0.29166701;0.082191803;0;
0;0;0;0;1;0;0;0.75999999;0.68484801;0;
0;1;0;0;0.3125;0.082191803;0;0;0;0;
0;1;0;0;0.80000001;0.68484801;0;0;1;0;
0;0.33333299;0.082191803;0;0;0;0;0;1;0;
0;0.81;0.68484801;0;0;1;0;0;0.35416701;0.082191803;
0;0;0;0;0;1;0;0;0.81;0.68484801;
0;0;1;0;0;0.375;0.082191803;0;0;0;
0;0;1;0;0;0.82999998;0.65454501;0;0;1;
0;0;0.39583299;0.082191803;0;0;0;0;0;1;
0;0;0.83999997;0.65454501;0;0;1;0;0;0.41666701;
0.082191803;0;0;0;0;0;1;0;0;0.85000002;
0.65454501;0;0;1;0;0;0.4375;0.082191803;0;0;
0;0;0;1;0;0;0.86000001;0.65454501;0;0;
1;0;0;0.47916701;0.082191803;0;0;0;0;0;
1;0;0;0.88;0.65454501;0;0;1;0;0;
0.5;0.082191803;0;0;0;0;0;1;0;0;
0.88;0.65454501;0;0;1;0;0;0.52083302;0.082191803;0;
0;0;0;0;1;0;0;0.89999998;0.65454501;0;
0;1;0;0;0.54166698;0.082191803;0;0;0;0;
0;1;0;0;0.88999999;0.65454501;0;0;1;0;
0;0.5625;0.082191803;0;0;0;0;0;1;0;
0;0.91000003;0.62424201;0;0;1;0;0;0.58333302;0.082191803;
0;0;0;0;0;1;0;0;0.91000003;0.62424201;
0;0;1;0;0;0.60416698;0.082191803;0;0;0;
0;0;1;0;0;0.89999998;0.62424201;0;0;1;
0;0;0.625;0.082191803;0;0;0;0;0;1;
0;0;0.88999999;0.65454501;0;0;1;0;0;0.64583302;
0.082191803;0;0;0;0;0;1;0;0;0.91000003;
0.62424201;0;0;1;0;0;0.66666698;0.082191803;0;0;
0;0;0;1;0;0;0.88999999;0.65454501;0;0;
1;0;0;0.6875;0.082191803;0;0;0;0;0;
1;0;0;0.89999998;0.65454501;0;0;1;0;0;
0.70833302;0.082191803;0;0;0;0;0;1;0;0;
0.89999998;0.65454501;0;0;1;0;0;0.72916698;0.082191803;0;
0;0;0;0;1;0;0;0.88999999;0.65454501;0;
0;1;0;0;0.75;0.082191803;0;0;0;0;
0;1;0;0;0.88;0.65454501;0;0;1;0;
0;0.77083302;0.082191803;0;0;0;0;0;1;0;
0;0.86000001;0.65454501;0;0;1;0;0;0.79166698;0.082191803;
0;0;0;0;0;1;0;0;0.86000001;0.65454501;
0;0;1;0;0;0.8125;0.082191803;0;0;0;
0;0;1;0;0;0.88;0.65454501;0;0;1;
0;0;0.83333302;0.082191803;0;0;0;0;0;1;
0;0;0.89999998;0.65454501;0;0;1;0;0;0.85416698;
0.082191803;0;0;0;0;0;1;0;0;0.86000001;
0.68484801;0;0;1;0;0;0.875;0.082191803;0;0;
0;0;0;1;0;0;0.76999998;0.71515101;0;0;
1;0;0;0.89583302;0.082191803;0;0;0;0;0;
1;0;0;0.75;0.71515101;0;0;1;0;0;
0.91666698;0.082191803;0;0;0;0;0;1;0;0;
0.74000001;0.68484801;0;0;1;0;0;0.9375;0.082191803;0;
0;0;0;0;1;0;0;0.86000001;0.65454501;0;
0;1;0;0;0.97916698;0.082191803;0;0;0;0;
0;1;0;0;0.81;0.68484801;0;0;1;0;
0;0.0208333;0;0;0;0;1;0;0;0;
0;0.47999999;0.65454501;0;0;0;1;0;0.041666701;0;
0;0;0;1;0;0;0;0;0.56999999;0.65454501;
0;0;0;1;0;0.0625;0;0;0;0;
1;0;0;0;0;0.60000002;0.65454501;0;0;0;
1;0;0.083333299;0;0;0;0;1;0;0;
0;0;0.56;0.65454501;0;0;0;1;0;0.104167;
0;0;0;0;1;0;0;0;0;0.56;
0.65454501;0;0;0;1;0;0.125;0;0;0;
0;1;0;0;0;0;0.55000001;0.65454501;0;0;
0;1;0;0.145833;0;0;0;0;1;0;
0;0;0;0.54000002;0.65454501;0;0;0;1;0;
0.166667;0;0;0;0;1;0;0;0;0;
0.5;0.62424201;0;0;0;1;0;0.1875;0;0;
0;0;1;0;0;0;0;0.5;0.62424201;0;
0;0;1;0;0.208333;0;0;0;0;1;
0;0;0;0;0.52999997;0.62424201;0;0;0;1;
0;0.229167;0;0;0;0;1;0;0;0;
0;0.56;0.59393901;0;0;0;1;0;0.25;0;
0;0;0;1;0;0;0;0;0.55000001;0.59393901;
0;0;0;1;0;0.27083299;0;0;0;0;
1;0;0;0;0;0.56999999;0.59393901;0;0;0;
1;0;0.29166701;0;0;0;0;1;0;0;
0;0;0.62;0.563636;0;0;0;1;0;0.3125;
0;0;0;0;1;0;0;0;0;0.63;
0.533333;0;0;0;1;0;0.33333299;0;0;0;
0;1;0;0;0;0;0.63999999;0.533333;0;0;
0;1;0;0.35416701;0;0;0;0;1;0;
0;0;0;0.64999998;0.533333;0;0;0;1;0;
0.375;0;0;0;0;1;0;0;0;0;
0.67000002;0.533333;0;0;0;1;0;0.39583299;0;0;
0;0;1;0;0;0;0;0.68000001;0.50303;0;
0;0;1;0;0.41666701;0;0;0;0;1;
0;0;0;0;0.70999998;0.50303;0;0;0;1;
0;0.4375;0;0;0;0;1;0;0;0;
0;0.74000001;0.50303;0;0;0;1;0;0.47916701;0;
0;0;0;1;0;0;0;0;0.77999997;0.472727;
0;0;0;0;1;0.5;0;0;0;0;
1;0;0;0;0;0.79000002;0.472727;0;0;0;
0;1;0.52083302;0;0;0;0;1;0;0;
0;0;0.80000001;0.472727;0;0;0;0;1;0.54166698;
0;0;0;0;1;0;0;0;0;0.82999998;
0.472727;0;0;0;0;1;0.5625;0;0;0;
0;1;0;0;0;0;0.85000002;0.472727;0;0;
0;0;1;0.58333302;0;0;0;0;1;0;
0;0;0;0.89999998;0.442424;0;0;0;0;1;
0.60416698;0;0;0;0;1;0;0;0;0;
0.88999999;0.442424;0;0;0;0;1;0.625;0;0;
0;0;1;0;0;0;0;0.92000002;0.412121;0;
0;0;0;1;0.64583302;0;0;0;0;1;
0;0;0;0;0.91000003;0.412121;0;0;0;0;
1;0.66666698;0;0;0;0;1;0;0;0;
0;0.94999999;0.412121;0;0;0;0;1;0.6875;0;
0;0;0;1;0;0;0;0;0.94999999;0.381818;
0;0;0;0;1;0.70833302;0;0;0;0;
1;0;0;0;0;0.97000003;0.381818;0;0;0;
1;0;0.72916698;0;0;0;0;1;0;0;
0;0;0.95999998;0.381818;0;0;0;1;0;0.75;
0;0;0;0;1;0;0;0;0;0.94;
0.412121;0;0;0;1;0;0.77083302;0;0;0;
0;1;0;0;0;0;0.92000002;0.472727;0;0;
0;1;0;0.79166698;0;0;0;0;1;0;
0;0;0;0.88;0.472727;0;0;0;1;0;
0.8125;0;0;0;0;1;0;0;0;0;
0.83999997;0.533333;0;0;0;1;0;0.83333302;0;0;
0;0;1;0;0;0;0;0.77999997;0.563636;0;
0;0;1;0;0.85416698;0;0;0;0;1;
0;0;0;0;0.75999999;0.59393901;0;0;0;1;
0;0.875;0;0;0;0;1;0;0;0;
0;0.73000002;0.59393901;0;0;0;1;0;0.89583302;0;
0;0;0;1;0;0;0;0;0.72000003;0.59393901;
0;0;0;1;0;0.91666698;0;0;0;0;
1;0;0;0;0;0.72000003;0.62424201;0;0;0;
1;0;0.9375;0;0;0;0;1;0;0;
0;0;0.66000003;0.62424201;0;0;0;1;0;0.97916698;
0;0;0;0;1;0;0;0;0;0.60000002;
0.65454501;0;0;0;1;0;0;0.0027397301;0;0;
0;0;1;0;0;0;0.63999999;0.68484801;0;0;
0;1;0;0.0208333;0.0027397301;0;0;0;0;1;
0;0;0;0.63999999;0.68484801;0;0;0;1;0;
0.041666701;0.0027397301;0;0;0;0;1;0;0;0;
0.57999998;0.68484801;0;0;0;1;0;0.0625;0.0027397301;0;
0;0;0;1;0;0;0;0.55000001;0.71515101;0;
0;0;1;0;0.083333299;0.0027397301;0;0;0;0;
1;0;0;0;0.56999999;0.71515101;0;0;0;1;
0;0.104167;0.0027397301;0;0;0;0;1;0;0;
0;0.64999998;0.71515101;0;0;0;1;0;0.125;0.0027397301;
0;0;0;0;1;0;0;0;0.63999999;0.71515101;
0;0;0;1;0;0.145833;0.0027397301;0;0;0;
0;1;0;0;0;0.66000003;0.68484801;0;0;0;
1;0;0.166667;0.0027397301;0;0;0;0;1;0;
0;0;0.66000003;0.68484801;0;0;0;1;0;0.1875;
0.0027397301;0;0;0;0;1;0;0;0;0.69999999;
0.65454501;0;0;0;1;0;0.208333;0.0027397301;0;0;
0;0;1;0;0;0;0.68000001;0.68484801;0;0;
0;1;0;0.229167;0.0027397301;0;0;0;0;1;
0;0;0;0.68000001;0.65454501;0;0;0;1;0;
0.25;0.0027397301;0;0;0;0;1;0;0;0;
0.68000001;0.62424201;0;0;0;1;0;0.27083299;0.0027397301;0;
0;0;0;1;0;0;0;0.70999998;0.62424201;0;
0;0;1;0;0.29166701;0.0027397301;0;0;0;0;
1;0;0;0;0.74000001;0.59393901;0;0;0;1;
0;0.3125;0.0027397301;0;0;0;0;1;0;0;
0;0.75999999;0.563636;0;0;0;1;0;0.33333299;0.0027397301;
0;0;0;0;1;0;0;0;0.75999999;0.563636;
0;0;0;1;0;0.35416701;0.0027397301;0;0;0;
0;1;0;0;0;0.79000002;0.563636;0;0;0;
1;0;0.375;0.0027397301;0;0;0;0;1;0;
0;0;0.76999998;0.563636;0;0;0;1;0;0.39583299;
0.0027397301;0;0;0;0;1;0;0;0;0.79000002;
0.533333;0;0;0;1;0;0.41666701;0.0027397301;0;0;
0;0;1;0;0;0;0.80000001;0.533333;0;0;
0;1;0;0.4375;0.0027397301;0;0;0;0;1;
0;0;0;0.79000002;0.533333;0;0;0;1;0;
0.47916701;0.0027397301;0;0;0;0;1;0;0;0;
0.79000002;0.533333;0;0;0;1;0;0.5;0.0027397301;0;
0;0;0;1;0;0;0;0.80000001;0.533333;0;
0;0;1;0;0.52083302;0.0027397301;0;0;0;0;
1;0;0;0;0.79000002;0.533333;0;0;0;1;
0;0.54166698;0.0027397301;0;0;0;0;1;0;0;
0;0.80000001;0.533333;0;0;0;1;0;0.5625;0.0027397301;
0;0;0;0;1;0;0;0;0.79000002;0.533333;
0;0;0;1;0;0.58333302;0.0027397301;0;0;0;
0;1;0;0;0;0.77999997;0.533333;0;0;0;
0;1;0.60416698;0.0027397301;0;0;0;0;1;0;
0;0;0.80000001;0.533333;0;0;0;0;1;0.625;
0.0027397301;0;0;0;0;1;0;0;0;0.80000001;
0.533333;0;0;0;0;1;0.64583302;0.0027397301;0;0;
0;0;1;0;0;0;0.85000002;0.50303;0;0;
0;0;1;0.66666698;0.0027397301;0;0;0;0;1;
0;0;0;0.87;0.50303;0;0;0;0;1;
0.6875;0.0027397301;0;0;0;0;1;0;0;0;
0.91000003;0.472727;0;0;0;0;1;0.70833302;0.0027397301;0;
0;0;0;1;0;0;0;0.93000001;0.472727;0;
0;0;0;1;0.72916698;0.0027397301;0;0;0;0;
1;0;0;0;0.93000001;0.442424;0;0;0;0;
1;0.75;0.0027397301;0;0;0;0;1;0;0;
0;0.93000001;0.472727;0;0;0;0;1;0.77083302;0.0027397301;
0;0;0;0;1;0;0;0;0.93000001;0.472727;
0;0;0;0;1;0.79166698;0.0027397301;0;0;0;
0;1;0;0;0;0.89999998;0.50303;0;0;0;
0;1;0.8125;0.0027397301;0;0;0;0;1;0;
0;0;0.81;0.533333;0;0;0;0;1;0.83333302;
0.0027397301;0;0;0;0;1;0;0;0;0.77999997;
0.563636;0;0;0;0;1;0.85416698;0.0027397301;0;0;
0;0;1;0;0;0;0.74000001;0.59393901;0;0;
0;0;1;0.875;0.0027397301;0;0;0;0;1;
0;0;0;0.67000002;0.62424201;0;0;0;0;1;
0.89583302;0.0027397301;0;0;0;0;1;0;0;0;
0.64999998;0.65454501;0;0;0;0;1;0.91666698;0.0027397301;0;
0;0;0;1;0;0;0;0.63999999;0.68484801;0;
0;0;0;1;0.9375;0.0027397301;0;0;0;0;
1;0;0;0;0.68000001;0.62424201;0;0;0;0;
1;0.97916698;0.0027397301;0;0;0;0;1;0;0;
0;0.69999999;0.62424201;0;0;0;1;0;0;0.0054794499;
0;0;0;0;0;1;0;0;0.72000003;0.62424201;
0;0;0;1;0;0.0208333;0.0054794499;0;0;0;
0;0;1;0;0;0.76999998;0.62424201;0;0;0;
1;0;0.041666701;0.0054794499;0;0;0;0;0;1;
0;0;0.77999997;0.62424201;0;0;0;1;0;0.0625;
0.0054794499;0;0;0;0;0;1;0;0;0.72000003;
0.65454501;0;0;0;1;0;0.083333299;0.0054794499;0;0;
0;0;0;1;0;0;0.73000002;0.65454501;0;0;
0;1;0;0.104167;0.0054794499;0;0;0;0;0;
1;0;0;0.73000002;0.65454501;0;0;0;1;0;
0.125;0.0054794499;0;0;0;0;0;1;0;0;
0.68000001;0.68484801;0;0;0;1;0;0.145833;0.0054794499;0;
0;0;0;0;1;0;0;0.73000002;0.68484801;0;
0;0;1;0;0.166667;0.0054794499;0;0;0;0;
0;1;0;0;0.70999998;0.68484801;0;0;0;1;
0;0.1875;0.0054794499;0;0;0;0;0;1;0;
0;0.75;0.68484801;0;0;0;1;0;0.208333;0.0054794499;
0;0;0;0;0;1;0;0;0.73000002;0.65454501;
0;0;0;1;0;0.229167;0.0054794499;0;0;0;
0;0;1;0;0;0.69999999;0.65454501;0;0;0;
1;0;0.25;0.0054794499;0;0;0;0;0;1;
0;0;0.74000001;0.62424201;0;0;0;1;0;0.27083299;
0.0054794499;0;0;0;0;0;1;0;0;0.75999999;
0.62424201;0;0;0;1;0;0.29166701;0.0054794499;0;0;
0;0;0;1;0;0;0.79000002;0.62424201;0;0;
0;1;0;0.3125;0.0054794499;0;0;0;0;0;
1;0;0;0.81;0.59393901;0;0;0;1;0;
0.33333299;0.0054794499;0;0;0;0;0;1;0;0;
0.83999997;0.563636;0;0;0;1;0;0.35416701;0.0054794499;0;
0;0;0;0;1;0;0;0.87;0.563636;0;
0;0;1;0;0.375;0.0054794499;0;0;0;0;
0;1;0;0;0.87;0.563636;0;0;0;1;
0;0.39583299;0.0054794499;0;0;0;0;0;1;0;
0;0.85000002;0.563636;0;0;0;1;0;0.41666701;0.0054794499;
0;0;0;0;0;1;0;0;0.88;0.563636;
0;0;0;1;0;0.4375;0.0054794499;0;0;0;
0;0;1;0;0;0.88999999;0.563636;0;0;0;
1;0;0.47916701;0.0054794499;0;0;0;0;0;1;
0;0;0.92000002;0.533333;0;0;0;1;0;0.5;
0.0054794499;0;0;0;0;0;1;0;0;0.95999998;
0.50303;0;0;0;1;0;0.52083302;0.0054794499;0;0;
0;0;0;1;0;0;0.95999998;0.50303;0;0;
0;1;0;0.54166698;0.0054794499;0;0;0;0;0;
1;0;0;0.95999998;0.533333;0;0;0;1;0;
0.5625;0.0054794499;0;0;0;0;0;1;0;0;
0.94999999;0.50303;0;0;0;1;0;0.58333302;0.0054794499;0;
0;0;0;0;1;0;0;0.94999999;0.50303;0;
0;0;1;0;0.60416698;0.0054794499;0;0;0;0;
0;1;0;0;0.97000003;0.472727;0;0;0;1;
0;0.625;0.0054794499;0;0;0;0;0;1;0;
0;0.97000003;0.472727;0;0;0;1;0;0.64583302;0.0054794499;
0;0;0;0;0;1;0;0;0.99000001;0.472727;
0;0;0;1;0;0.66666698;0.0054794499;0;0;0;
0;0;1;0;0;1;0.472727;0;0;0;
1;0;0.6875;0.0054794499;0;0;0;0;0;1;
0;0;1;0.472727;0;0;0;1;0;0.70833302;
0.0054794499;0;0;0;0;0;1;0;0;1;
0.472727;0;0;0;1;0;0.72916698;0.0054794499;0;0;
0;0;0;1;0;0;0.99000001;0.472727;0;0;
0;1;0;0.75;0.0054794499;0;0;0;0;0;
1;0;0;1;0.472727;0;0;0;1;0;
0.77083302;0.0054794499;0;0;0;0;0;1;0;0;
0.97000003;0.50303;0;0;0;1;0;0.79166698;0.0054794499;0;
0;0;0;0;1;0;0;0.91000003;0.533333;0;
0;0;1;0;0.8125;0.0054794499;0;0;0;0;
0;1;0;0;0.87;0.563636;0;0;0;1;
0;0.83333302;0.0054794499;0;0;0;0;0;1;0;
0;0.83999997;0.62424201;0;0;0;1;0;0.85416698;0.0054794499;
0;0;0;0;0;1;0;0;0.81999999;0.62424201;
0;0;0;1;0;0.875;0.0054794499;0;0;0;
0;0;1;0;0;0.81;0.65454501;0;0;0;
1;0;0.89583302;0.0054794499;0;0;0;0;0;1;
0;0;0.81999999;0.62424201;0;0;0;1;0;0.91666698;
0.0054794499;0;0;0;0;0;1;0;0;0.76999998;
0.65454501;0;0;0;1;0;0.9375;0.0054794499;0;0;
0;0;0;1;0;0;0.77999997;0.65454501;0;0;
0;1;0;0.97916698;0.0054794499;0;0;0;0;0;
1;0;0;0.73000002;0.71515101;0;0;0;1;0;
0;0.0082191797;0;0;0;0;0;0;1;0;
0.68000001;0.74545503;0;0;0;1;0;0.0208333;0.0082191797;0;
0;0;0;0;0;1;0;0.69999999;0.71515101;0;
0;0;1;0;0.041666701;0.0082191797;0;0;0;0;
0;0;1;0;0.57999998;0.77575803;0;0;0;1;
0;0.0625;0.0082191797;0;0;0;0;0;0;1;
0;0.52999997;0.77575803;0;0;0;1;0;0.083333299;0.0082191797;
0;0;0;0;0;0;1;0;0.64999998;0.74545503;
0;0;0;1;0;0.104167;0.0082191797;0;0;0;
0;0;0;1;0;0.67000002;0.74545503;0;0;0;
1;0;0.125;0.0082191797;0;0;0;0;0;0;
1;0;0.67000002;0.77575803;0;0;0;1;0;0.145833;
0.0082191797;0;0;0;0;0;0;1;0;0.66000003;
0.74545503;0;0;0;1;0;0.166667;0.0082191797;0;0;
0;0;0;0;1;0;0.66000003;0.74545503;0;0;
0;1;0;0.1875;0.0082191797;0;0;0;0;0;
0;1;0;0.63;0.74545503;0;0;0;1;0;
0.208333;0.0082191797;0;0;0;0;0;0;1;0;
0.67000002;0.71515101;0;0;0;1;0;0.229167;0.0082191797;0;
0;0;0;0;0;1;0;0.66000003;0.71515101;0;
0;0;1;0;0.25;0.0082191797;0;0;0;0;
0;0;1;0;0.67000002;0.71515101;0;0;0;1;
0;0.27083299;0.0082191797;0;0;0;0;0;0;1;
0;0.64999998;0.68484801;0;0;0;1;0;0.29166701;0.0082191797;
0;0;0;0;0;0;1;0;0.75;0.65454501;
0;0;0;1;0;0.3125;0.0082191797;0;0;0;
0;0;0;1;0;0.79000002;0.62424201;0;0;0;
1;0;0.33333299;0.0082191797;0;0;0;0;0;0;
1;0;0.82999998;0.59393901;0;0;0;1;0;0.35416701;
0.0082191797;0;0;0;0;0;0;1;0;0.83999997;
0.59393901;0;0;0;1;0;0.375;0.0082191797;0;0;
0;0;0;0;1;0;0.86000001;0.59393901;0;0;
0;1;0;0.39583299;0.0082191797;0;0;0;0;0;
0;1;0;0.89999998;0.59393901;0;0;0;1;0;
0.41666701;0.0082191797;0;0;0;0;0;0;1;0;
0.91000003;0.563636;0;0;0;1;0;0.4375;0.0082191797;0;
0;0;0;0;0;1;0;0.92000002;0.563636;0;
0;0;1;0;0.47916701;0.0082191797;0;0;0;0;
0;0;1;0;0.95999998;0.563636;0;0;0;0;
1;0.5;0.0082191797;0;0;0;0;0;0;1;
0;0.95999998;0.563636;0;0;0;0;1;0.52083302;0.0082191797;
0;0;0;0;0;0;1;0;0.95999998;0.563636;
0;0;0;0;1;0.54166698;0.0082191797;0;0;0;
0;0;0;1;0;0.95999998;0.533333;0;0;0;
0;1;0.5625;0.0082191797;0;0;0;0;0;0;
1;0;0.94999999;0.533333;0;0;0;0;1;0.58333302;
0.0082191797;0;0;0;0;0;0;1;0;0.97000003;
0.50303;0;0;0;0;1;0.60416698;0.0082191797;0;0;
0;0;0;0;1;0;0.95999998;0.533333;0;0;
0;0;1;0.625;0.0082191797;0;0;0;0;0;
0;1;0;0.94999999;0.50303;0;0;0;0;1;
0.64583302;0.0082191797;0;0;0;0;0;0;1;0;
0.94999999;0.50303;0;0;0;0;1;0.66666698;0.0082191797;0;
0;0;0;0;0;1;0;0.95999998;0.50303;0;
0;0;0;1;0.6875;0.0082191797;0;0;0;0;
0;0;1;0;0.97000003;0.472727;0;0;0;0;
1;0.70833302;0.0082191797;0;0;0;0;0;0;1;
0;0.97000003;0.472727;0;0;0;0;1;0.72916698;0.0082191797;
0;0;0;0;0;0;1;0;0.98000002;0.472727;
0;0;0;0;1;0.75;0.0082191797;0;0;0;
0;0;0;1;0;0.98000002;0.50303;0;0;0;
0;1;0.77083302;0.0082191797;0;0;0;0;0;0;
1;0;0.97000003;0.533333;0;0;0;0;1;0.79166698;
0.0082191797;0;0;0;0;0;0;1;0;0.95999998;
0.563636;0;0;0;0;1;0.8125;0.0082191797;0;0;
0;0;0;0;1;0;0.94999999;0.59393901;0;0;
0;0;1;0.83333302;0.0082191797;0;0;0;0;0;
0;1;0;0.85000002;0.59393901;0;0;0;0;1;
0.85416698;0.0082191797;0;0;0;0;0;0;1;0;
0.81999999;0.62424201;0;0;0;0;1;0.875;0.0082191797;0;
0;0;0;0;0;1;0;0.81999999;0.62424201;0;
0;0;0;1;0.89583302;0.0082191797;0;0;0;0;
0;0;1;0;0.79000002;0.65454501;0;0;0;0;
1;0.91666698;0.0082191797;0;0;0;0;0;0;1;
0;0.75;0.68484801;0;0;0;0;1;0.9375;0.0082191797;
0;0;0;0;0;0;1;0;0.75;0.68484801;
0;0;0;0;1;0.97916698;0.0082191797;0;0;0;
0;0;0;1;0;0.72000003;0.68484801;0;0;0;
0;1;0;0.0109589;1;0;0;0;0;0;
0;0;0.72000003;0.68484801;0;0;0;0;1;0.0208333;
0.0109589;1;0;0;0;0;0;0;0;0.72000003;
0.71515101;0;0;0;0;1;0.041666701;0.0109589;1;0;
0;0;0;0;0;0;0.70999998;0.71515101;0;0;
0;0;1;0.0625;0.0109589;1;0;0;0;0;
0;0;0;0.69;0.71515101;0;0;0;0;1;
0.083333299;0.0109589;1;0;0;0;0;0;0;0;
0.67000002;0.71515101;0;0;0;0;1;0.104167;0.0109589;1;
0;0;0;0;0;0;0;0.68000001;0.71515101;0;
0;0;0;1;0.125;0.0109589;1;0;0;0;
0;0;0;0;0.68000001;0.74545503;0;0;0;0;
1;0.145833;0.0109589;1;0;0;0;0;0;0;
0;0.67000002;0.71515101;0;0;0;0;1;0.166667;0.0109589;
1;0;0;0;0;0;0;0;0.68000001;0.71515101;
0;0;0;1;0;0.1875;0.0109589;1;0;0;
0;0;0;0;0;0.69;0.68484801;0;0;0;
1;0;0.208333;0.0109589;1;0;0;0;0;0;
0;0;0.70999998;0.68484801;0;0;0;1;0;0.229167;
0.0109589;1;0;0;0;0;0;0;0;0.74000001;
0.65454501;0;0;0;1;0;0.25;0.0109589;1;0;
0;0;0;0;0;0;0.75;0.62424201;0;0;
0;1;0;0.27083299;0.0109589;1;0;0;0;0;
0;0;0;0.74000001;0.62424201;0;0;0;1;0;
0.29166701;0.0109589;1;0;0;0;0;0;0;0;
0.75999999;0.59393901;0;0;0;1;0;0.3125;0.0109589;1;
0;0;0;0;0;0;0;0.74000001;0.59393901;0;
0;0;1;0;0.33333299;0.0109589;1;0;0;0;
0;0;0;0;0.73000002;0.563636;0;0;0;1;
0;0.35416701;0.0109589;1;0;0;0;0;0;0;
0;0.75999999;0.563636;0;0;0;1;0;0.375;0.0109589;
1;0;0;0;0;0;0;0;0.81;0.563636;
0;0;0;1;0;0.39583299;0.0109589;1;0;0;
0;0;0;0;0;0.81;0.563636;0;0;0;
1;0;0.41666701;0.0109589;1;0;0;0;0;0;
0;0;0.81;0.563636;0;0;0;1;0;0.4375;
0.0109589;1;0;0;0;0;0;0;0;0.85000002;
0.533333;0;0;0;1;0;0.47916701;0.0109589;1;0;
0;0;0;0;0;0;0.83999997;0.563636;0;0;
0;0;1;0.5;0.0109589;1;0;0;0;0;
0;0;0;0.83999997;0.563636;0;0;0;0;1;
0.52083302;0.0109589;1;0;0;0;0;0;0;0;
0.86000001;0.563636;0;0;0;0;1;0.54166698;0.0109589;1;
0;0;0;0;0;0;0;0.81999999;0.563636;0;
0;0;0;1;0.5625;0.0109589;1;0;0;0;
0;0;0;0;0.86000001;0.563636;0;0;0;0;
1;0.58333302;0.0109589;1;0;0;0;0;0;0;
0;0.88999999;0.533333;0;0;0;0;1;0.60416698;0.0109589;
1;0;0;0;0;0;0;0;0.91000003;0.533333;
0;0;0;0;1;0.625;0.0109589;1;0;0;
0;0;0;0;0;0.92000002;0.533333;0;0;0;
0;1;0.64583302;0.0109589;1;0;0;0;0;0;
0;0;0.94;0.50303;0;0;0;0;1;0.66666698;
0.0109589;1;0;0;0;0;0;0;0;0.94999999;
0.472727;0;0;0;0;1;0.6875;0.0109589;1;0;
0;0;0;0;0;0;0.95999998;0.472727;0;0;
0;0;1;0.70833302;0.0109589;1;0;0;0;0;
0;0;0;0.98000002;0.442424;0;0;0;0;1;
0.72916698;0.0109589;1;0;0;0;0;0;0;0;
0.97000003;0.442424;0;0;0;0;1;0.75;0.0109589;1;
0;0;0;0;0;0;0;0.94999999;0.472727;0;
0;0;0;1;0.77083302;0.0109589;1;0;0;0;
0;0;0;0;0.91000003;0.50303;0;0;0;0;
1;0.79166698;0.0109589;1;0;0;0;0;0;0;
0;0.83999997;0.563636;0;0;0;0;1;0.8125;0.0109589;
1;0;0;0;0;0;0;0;0.81999999;0.59393901;
0;0;0;0;1;0.83333302;0.0109589;1;0;0;
0;0;0;0;0;0.73000002;0.65454501;0;0;0;
0;1;0.85416698;0.0109589;1;0;0;0;0;0;
0;0;0.74000001;0.62424201;0;0;0;0;1;0.875;
0.0109589;1;0;0;0;0;0;0;0;0.73000002;
0.65454501;0;0;0;0;1;0.89583302;0.0109589;1;0;
0;0;0;0;0;0;0.69999999;0.68484801;0;0;
0;0;1;0.91666698;0.0109589;1;0;0;0;0;
0;0;0;0.69;0.65454501;0;0;0;0;1;
0.9375;0.0109589;1;0;0;0;0;0;0;0;
0.69;0.68484801;0;0;0;0;1;0.97916698;0.0109589;1;
0;0;0;0;0;0;0;0.66000003;0.71515101;0;
0;0;0;1;0;0.0136986;0;1;0;0;
0;0;0;0;0.63;0.71515101;0;0;0;0;
1;0.0208333;0.0136986;0;1;0;0;0;0;0;
0;0.62;0.74545503;0;0;0;0;1;0.041666701;0.0136986;
0;1;0;0;0;0;0;0;0.62;0.74545503;
0;0;0;0;1;0.0625;0.0136986;0;1;0;
0;0;0;0;0;0.63;0.74545503;0;0;0;
0;1;0.083333299;0.0136986;0;1;0;0;0;0;
0;0;0.61000001;0.71515101;0;0;0;0;1;0.104167;
0.0136986;0;1;0;0;0;0;0;0;0.58999997;
0.71515101;0;0;0;0;1;0.125;0.0136986;0;1;
0;0;0;0;0;0;0.60000002;0.71515101;0;0;
0;0;1;0.145833;0.0136986;0;1;0;0;0;
0;0;0;0.58999997;0.71515101;0;0;0;0;1;
0.166667;0.0136986;0;1;0;0;0;0;0;0;
0.58999997;0.71515101;0;0;0;0;1;0.1875;0.0136986;0;
1;0;0;0;0;0;0;0.57999998;0.71515101;0;
0;0;0;1;0.208333;0.0136986;0;1;0;0;
0;0;0;0;0.60000002;0.71515101;0;0;0;0;
1;0.229167;0.0136986;0;1;0;0;0;0;0;
0;0.63999999;0.68484801;0;0;0;0;1;0.25;0.0136986;
0;1;0;0;0;0;0;0;0.63999999;0.68484801;
0;0;0;0;1;0.27083299;0.0136986;0;1;0;
0;0;0;0;0;0.69;0.65454501;0;0;0;
0;1;0.29166701;0.0136986;0;1;0;0;0;0;
0;0;0.70999998;0.65454501;0;0;0;0;1;0.3125;
0.0136986;0;1;0;0;0;0;0;0;0.75;
0.62424201;0;0;0;0;1;0.33333299;0.0136986;0;1;
0;0;0;0;0;0;0.76999998;0.59393901;0;0;
0;0;1;0.35416701;0.0136986;0;1;0;0;0;
0;0;0;0.77999997;0.59393901;0;0;0;0;1;
0.375;0.0136986;0;1;0;0;0;0;0;0;
0.79000002;0.59393901;0;0;0;0;1;0.39583299;0.0136986;0;
1;0;0;0;0;0;0;0.77999997;0.59393901;0;
0;0;0;1;0.41666701;0.0136986;0;1;0;0;
0;0;0;0;0.80000001;0.59393901;0;0;0;0;
1;0.4375;0.0136986;0;1;0;0;0;0;0;
0;0.77999997;0.59393901;0;0;0;0;1;0.47916701;0.0136986;
0;1;0;0;0;0;0;0;0.80000001;0.59393901;
0;0;0;0;1;0.5;0.0136986;0;1;0;
0;0;0;0;0;0.82999998;0.563636;0;0;0;
0;1;0.52083302;0.0136986;0;1;0;0;0;0;
0;0;0.80000001;0.59393901;0;0;1;0;0;0.54166698;
0.0136986;0;1;0;0;0;0;0;0;0.81999999;
0.563636;0;0;1;0;0;0.5625;0.0136986;0;1;
0;0;0;0;0;0;0.83999997;0.563636;0;0;
1;0;0;0.58333302;0.0136986;0;1;0;0;0;
0;0;0;0.83999997;0.563636;0;0;1;0;0;
0.60416698;0.0136986;0;1;0;0;0;0;0;0;
0.85000002;0.563636;0;0;1;0;0;0.625;0.0136986;0;
1;0;0;0;0;0;0;0.83999997;0.563636;0;
0;1;0;0;0.64583302;0.0136986;0;1;0;0;
0;0;0;0;0.83999997;0.563636;0;0;1;0;
0;0.66666698;0.0136986;0;1;0;0;0;0;0;
0;0.82999998;0.563636;0;0;1;0;0;0.70833302;0.0136986;
0;1;0;0;0;0;0;0;0.88999999;0.533333;
0;0;1;0;0;0.72916698;0.0136986;0;1;0;
0;0;0;0;0;0.93000001;0.50303;0;0;1;
0;0;0.75;0.0136986;0;1;0;0;0;0;
0;0;0.89999998;0.533333;0;0;1;0;0;0.77083302;
0.0136986;0;1;0;0;0;0;0;0;0.85000002;
0.59393901;0;0;1;0;0;0.79166698;0.0136986;0;1;
0;0;0;0;0;0;0.82999998;0.59393901;0;0;
1;0;0;0.8125;0.0136986;0;1;0;0;0;
0;0;0;0.79000002;0.62424201;0;0;1;0;0;
0.83333302;0.0136986;0;1;0;0;0;0;0;0;
0.75999999;0.62424201;0;0;1;0;0;0.85416698;0.0136986;0;
1;0;0;0;0;0;0;0.69999999;0.68484801;0;
0;1;0;0;0.875;0.0136986;0;1;0;0;
0;0;0;0;0.69;0.68484801;0;0;1;0;
0;0.89583302;0.0136986;0;1;0;0;0;0;0;
0;0.66000003;0.68484801;0;0;1;0;0;0.91666698;0.0136986;
0;1;0;0;0;0;0;0;0.64999998;0.68484801;
0;0;1;0;0;0.9375;0.0136986;0;1;0;
0;0;0;0;0;0.63;0.71515101;0;0;0;
0;1;0.97916698;0.0136986;0;1;0;0;0;0;
0;0;0.63999999;0.74545503;0;0;0;0;1;0;
0.0164384;0;0;1;0;0;0;0;0;0.63999999;
0.71515101;0;0;0;0;1;0.0208333;0.0164384;0;0;
1;0;0;0;0;0;0.61000001;0.74545503;0;0;
0;0;1;0.041666701;0.0164384;0;0;1;0;0;
0;0;0;0.63;0.74545503;0;0;0;0;1;
0.0625;0.0164384;0;0;1;0;0;0;0;0;
0.61000001;0.74545503;0;0;0;0;1;0.083333299;0.0164384;0;
0;1;0;0;0;0;0;0.63999999;0.74545503;0;
0;0;0;1;0.104167;0.0164384;0;0;1;0;
0;0;0;0;0.62;0.74545503;0;0;0;0;
1;0.125;0.0164384;0;0;1;0;0;0;0;
0;0.68000001;0.74545503;0;0;0;0;1;0.145833;0.0164384;
0;0;1;0;0;0;0;0;0.69999999;0.71515101;
0;0;0;0;1;0.166667;0.0164384;0;0;1;
0;0;0;0;0;0.72000003;0.71515101;0;0;0;
0;1;0.1875;0.0164384;0;0;1;0;0;0;
0;0;0.73000002;0.68484801;0;0;0;0;1;0.208333;
0.0164384;0;0;1;0;0;0;0;0;0.75;
0.68484801;0;0;0;0;1;0.229167;0.0164384;0;0;
1;0;0;0;0;0;0.72000003;0.68484801;0;0;
0;0;1;0.25;0.0164384;0;0;1;0;0;
0;0;0;0.75;0.65454501;0;0;0;0;1;
0.27083299;0.0164384;0;0;1;0;0;0;0;0;
0.72000003;0.62424201;0;0;0;0;1;0.29166701;0.0164384;0;
0;1;0;0;0;0;0;0.74000001;0.62424201;0;
0;0;0;1;0.3125;0.0164384;0;0;1;0;
0;0;0;0;0.75999999;0.59393901;0;0;0;0;
1;0.33333299;0.0164384;0;0;1;0;0;0;0;
0;0.74000001;0.563636;0;0;0;0;1;0.35416701;0.0164384;
0;0;1;0;0;0;0;0;0.76999998;0.563636;
0;0;0;0;1;0.375;0.0164384;0;0;1;
0;0;0;0;0;0.74000001;0.563636;0;0;0;
0;1;0.39583299;0.0164384;0;0;1;0;0;0;
0;0;0.75;0.563636;0;0;0;0;1;0.41666701;
0.0164384;0;0;1;0;0;0;0;0;0.72000003;
0.563636;0;0;0;0;1;0.4375;0.0164384;0;0;
1;0;0;0;0;0;0.75;0.563636;0;0;
0;0;1;0.47916701;0.0164384;0;0;1;0;0;
0;0;0;0.74000001;0.563636;0;0;1;0;0;
0.5;0.0164384;0;0;1;0;0;0;0;0;
0.75;0.563636;0;0;1;0;0;0.52083302;0.0164384;0;
0;1;0;0;0;0;0;0.70999998;0.563636;0;
0;1;0;0;0.54166698;0.0164384;0;0;1;0;
0;0;0;0;0.73000002;0.563636;0;0;1;0;
0;0.5625;0.0164384;0;0;1;0;0;0;0;
0;0.77999997;0.563636;0;0;1;0;0;0.58333302;0.0164384;
0;0;1;0;0;0;0;0;0.77999997;0.533333;
0;0;1;0;0;0.60416698;0.0164384;0;0;1;
0;0;0;0;0;0.80000001;0.533333;0;0;1;
0;0;0.625;0.0164384;0;0;1;0;0;0;
0;0;0.85000002;0.533333;0;0;1;0;0;0.64583302;
0.0164384;0;0;1;0;0;0;0;0;0.87;
0.50303;0;0;1;0;0;0.66666698;0.0164384;0;0;
1;0;0;0;0;0;0.88;0.50303;0;0;
1;0;0;0.6875;0.0164384;0;0;1;0;0;
0;0;0;0.93000001;0.50303;0;0;1;0;0;
0.70833302;0.0164384;0;0;1;0;0;0;0;0;
0.93000001;0.472727;0;0;1;0;0;0.72916698;0.0164384;0;
0;1;0;0;0;0;0;0.92000002;0.472727;0;
0;1;0;0;0.75;0.0164384;0;0;1;0;
0;0;0;0;0.91000003;0.472727;0;0;1;0;
0;0.77083302;0.0164384;0;0;1;0;0;0;0;
0;0.88999999;0.50303;0;0;1;0;0;0.79166698;0.0164384;
0;0;1;0;0;0;0;0;0.85000002;0.533333;
0;0;1;0;0;0.8125;0.0164384;0;0;1;
0;0;0;0;0;0.81999999;0.563636;0;0;1;
0;0;0.83333302;0.0164384;0;0;1;0;0;0;
0;0;0.76999998;0.59393901;0;0;1;0;0;0.85416698;
0.0164384;0;0;1;0;0;0;0;0;0.73000002;
0.62424201;0;0;1;0;0;0.875;0.0164384;0;0;
1;0;0;0;0;0;0.72000003;0.62424201;0;0;
1;0;0;0.91666698;0.0164384;0;0;1;0;0;
0;0;0;0.69;0.65454501;0;0;1;0;0;
0.9375;0.0164384;0;0;1;0;0;0;0;0;
0.69999999;0.65454501;0;0;1;0;0;0.97916698;0.0164384;0;
0;1;0;0;0;0;0;0.61000001;0.80606103;0;
0;1;0;0;0;0.0191781;0;0;0;1;
0;0;0;0;0.69;0.71515101;0;0;1;0;
0;0.0208333;0.0191781;0;0;0;1;0;0;0;
0;0.66000003;0.71515101;0;0;1;0;0;0.041666701;0.0191781;
0;0;0;1;0;0;0;0;0.69999999;0.68484801;
0;0;1;0;0;0.0625;0.0191781;0;0;0;
1;0;0;0;0;0.64999998;0.68484801;0;0;1;
0;0;0.083333299;0.0191781;0;0;0;1;0;0;
0;0;0.64999998;0.71515101;0;0;1;0;0;0.104167;
0.0191781;0;0;0;1;0;0;0;0;0.62;
0.71515101;0;0;1;0;0;0.125;0.0191781;0;0;
0;1;0;0;0;0;0.63;0.71515101;0;0;
1;0;0;0.145833;0.0191781;0;0;0;1;0;
0;0;0;0.56999999;0.74545503;0;0;1;0;0;
0.166667;0.0191781;0;0;0;1;0;0;0;0;
0.61000001;0.71515101;0;0;0;0;1;0.1875;0.0191781;0;
0;0;1;0;0;0;0;0.52999997;0.74545503;0;
0;0;0;1;0.208333;0.0191781;0;0;0;1;
0;0;0;0;0.61000001;0.71515101;0;0;0;0;
1;0.229167;0.0191781;0;0;0;1;0;0;0;
0;0.58999997;0.71515101;0;0;0;0;1;0.25;0.0191781;
0;0;0;1;0;0;0;0;0.63;0.68484801;
0;0;0;0;1;0.27083299;0.0191781;0;0;0;
1;0;0;0;0;0.68000001;0.65454501;0;0;0;
0;1;0.29166701;0.0191781;0;0;0;1;0;0;
0;0;0.74000001;0.62424201;0;0;0;0;1;0.3125;
0.0191781;0;0;0;1;0;0;0;0;0.75;
0.62424201;0;0;0;0;1;0.33333299;0.0191781;0;0;
0;1;0;0;0;0;0.76999998;0.59393901;0;0;
0;0;1;0.35416701;0.0191781;0;0;0;1;0;
0;0;0;0.80000001;0.59393901;0;0;0;0;1;
0.375;0.0191781;0;0;0;1;0;0;0;0;
0.80000001;0.59393901;0;0;0;0;1;0.39583299;0.0191781;0;
0;0;1;0;0;0;0;0.79000002;0.59393901;0;
0;0;0;1;0.41666701;0.0191781;0;0;0;1;
0;0;0;0;0.80000001;0.59393901;0;0;0;0;
1;0.4375;0.0191781;0;0;0;1;0;0;0;
0;0.80000001;0.59393901;0;0;0;0;1;0.47916701;0.0191781;
0;0;0;1;0;0;0;0;0.79000002;0.59393901;
0;0;0;1;0;0.5;0.0191781;0;0;0;
1;0;0;0;0;0.81;0.59393901;0;0;0;
1;0;0.52083302;0.0191781;0;0;0;1;0;0;
0;0;0.81999999;0.59393901;0;0;0;1;0;0.54166698;
0.0191781;0;0;0;1;0;0;0;0;0.82999998;
0.59393901;0;0;0;1;0;0.5625;0.0191781;0;0;
0;1;0;0;0;0;0.82999998;0.563636;0;0;
0;1;0;0.58333302;0.0191781;0;0;0;1;0;
0;0;0;0.83999997;0.563636;0;0;1;0;0;
0.60416698;0.0191781;0;0;0;1;0;0;0;0;
0.82999998;0.563636;0;0;1;0;0;0.625;0.0191781;0;
0;0;1;0;0;0;0;0.82999998;0.563636;0;
0;1;0;0;0.64583302;0.0191781;0;0;0;1;
0;0;0;0;0.81;0.59393901;0;0;1;0;
0;0.66666698;0.0191781;0;0;0;1;0;0;0;
0;0.81;0.59393901;0;0;1;0;0;0.6875;0.0191781;
0;0;0;1;0;0;0;0;0.81;0.59393901;
0;0;1;0;0;0.70833302;0.0191781;0;0;0;
1;0;0;0;0;0.80000001;0.59393901;0;0;1;
0;0;0.72916698;0.0191781;0;0;0;1;0;0;
0;0;0.80000001;0.59393901;0;0;1;0;0;0.75;
0.0191781;0;0;0;1;0;0;0;0;0.79000002;
0.59393901;0;0;1;0;0;0.77083302;0.0191781;0;0;
0;1;0;0;0;0;0.77999997;0.59393901;0;0;
1;0;0;0.79166698;0.0191781;0;0;0;1;0;
0;0;0;0.79000002;0.59393901;0;0;1;0;0;
0.8125;0.0191781;0;0;0;1;0;0;0;0;
0.77999997;0.62424201;0;0;1;0;0;0.83333302;0.0191781;0;
0;0;1;0;0;0;0;0.77999997;0.62424201;0;
0;1;0;0;0.85416698;0.0191781;0;0;0;1;
0;0;0;0;0.80000001;0.62424201;0;0;1;0;
0;0.875;0.0191781;0;0;0;1;0;0;0;
0;0.77999997;0.65454501;0;0;1;0;0;0.89583302;0.0191781;
0;0;0;1;0;0;0;0;0.70999998;0.65454501;
0;0;1;0;0;0.91666698;0.0191781;0;0;0;
1;0;0;0;0;0.69;0.65454501;0;0;1;
0;0;0.9375;0.0191781;0;0;0;1;0;0;
0;0;0.69;0.65454501;0;0;1;0;0;0.97916698;
0.0191781;0;0;0;1;0;0;0;0;0.62;
0.71515101;0;0;1;0;0;0;0.021917799;0;0;
0;0;1;0;0;0;0.60000002;0.71515101;0;0;
1;0;0;0.0208333;0.021917799;0;0;0;0;1;
0;0;0;0.60000002;0.71515101;0;0;1;0;0;
0.041666701;0.021917799;0;0;0;0;1;0;0;0;
0.57999998;0.74545503;0;0;1;0;0;0.0625;0.021917799;0;
0;0;0;1;0;0;0;0.63;0.71515101;0;
0;1;0;0;0.083333299;0.021917799;0;0;0;0;
1;0;0;0;0.63999999;0.68484801;0;0;1;0;
0;0.104167;0.021917799;0;0;0;0;1;0;0;
0;0.64999998;0.68484801;0;0;1;0;0;0.125;0.021917799;
0;0;0;0;1;0;0;0;0.58999997;0.74545503;
0;0;1;0;0;0.145833;0.021917799;0;0;0;
0;1;0;0;0;0.62;0.71515101;0;0;1;
0;0;0.166667;0.021917799;0;0;0;0;1;0;
0;0;0.63;0.71515101;0;0;1;0;0;0.1875;
0.021917799;0;0;0;0;1;0;0;0;0.63;
0.68484801;0;0;1;0;0;0.208333;0.021917799;0;0;
0;0;1;0;0;0;0.63999999;0.68484801;0;0;
1;0;0;0.229167;0.021917799;0;0;0;0;1;
0;0;0;0.66000003;0.68484801;0;0;1;0;0;
0.25;0.021917799;0;0;0;0;1;0;0;0;
0.69;0.65454501;0;0;1;0;0;0.27083299;0.021917799;0;
0;0;0;1;0;0;0;0.69999999;0.65454501;0;
0;1;0;0;0.3125;0.021917799;0;0;0;0;
1;0;0;0;0.88;0.59393901;0;0;1;0;
0;0.33333299;0.021917799;0;0;0;0;1;0;0;
0;0.89999998;0.59393901;0;0;1;0;0;0.35416701;0.021917799;
0;0;0;0;1;0;0;0;0.86000001;0.59393901;
0;0;1;0;0;0.375;0.021917799;0;0;0;
0;1;0;0;0;0.87;0.563636;0;0;1;
0;0;0.39583299;0.021917799;0;0;0;0;1;0;
0;0;0.87;0.563636;0;0;1;0;0;0.41666701;
0.021917799;0;0;0;0;1;0;0;0;0.91000003;
0.563636;0;0;1;0;0;0.4375;0.021917799;0;0;
0;0;1;0;0;0;0.89999998;0.563636;0;0;
1;0;0;0.47916701;0.021917799;0;0;0;0;1;
0;0;0;0.89999998;0.563636;0;0;0;0;1;
0.5;0.021917799;0;0;0;0;1;0;0;0;
0.91000003;0.563636;0;0;0;0;1;0.52083302;0.021917799;0;
0;0;0;1;0;0;0;0.89999998;0.533333;0;
0;0;0;1;0.54166698;0.021917799;0;0;0;0;
1;0;0;0;0.91000003;0.533333;0;0;0;0;
1;0.5625;0.021917799;0;0;0;0;1;0;0;
0;0.92000002;0.533333;0;0;0;0;1;0.58333302;0.021917799;
0;0;0;0;1;0;0;0;0.94;0.533333;
0;0;0;0;1;0.60416698;0.021917799;0;0;0;
0;1;0;0;0;0.97000003;0.50303;0;0;0;
0;1;0.625;0.021917799;0;0;0;0;1;0;
0;0;0.95999998;0.50303;0;0;0;0;1;0.64583302;
0.021917799;0;0;0;0;1;0;0;0;0.97000003;
0.50303;0;0;0;0;1;0.66666698;0.021917799;0;0;
0;0;1;0;0;0;0.97000003;0.533333;0;0;
0;0;1;0.6875;0.021917799;0;0;0;0;1;
0;0;0;0.97000003;0.533333;0;0;0;0;1;
0.70833302;0.021917799;0;0;0;0;1;0;0;0;
0.94999999;0.533333;0;0;0;0;1;0.72916698;0.021917799;0;
0;0;0;1;0;0;0;0.94999999;0.533333;0;
0;0;0;1;0.75;0.021917799;0;0;0;0;
1;0;0;0;0.94999999;0.563636;0;0;0;0;
1;0.77083302;0.021917799;0;0;0;0;1;0;0;
0;0.94;0.563636;0;0;0;0;1;0.79166698;0.021917799;
0;0;0;0;1;0;0;0;0.94;0.59393901;
0;0;0;0;1;0.8125;0.021917799;0;0;0;
0;1;0;0;0;0.89999998;0.65454501;0;0;0;
0;1;0.83333302;0.021917799;0;0;0;0;1;0;
0;0;0.83999997;0.65454501;0;0;0;0;1;0.85416698;
0.021917799;0;0;0;0;1;0;0;0;0.80000001;
0.65454501;0;0;0;0;1;0.875;0.021917799;0;0;
0;0;1;0;0;0;0.75999999;0.68484801;0;0;
0;0;1;0.89583302;0.021917799;0;0;0;0;1;
0;0;0;0.76999998;0.68484801;0;0;0;0;1;
0.91666698;0.021917799;0;0;0;0;1;0;0;0;
0.72000003;0.71515101;0;0;0;0;1;0.9375;0.021917799;0;
0;0;0;1;0;0;0;0.70999998;0.68484801;0;
0;0;0;1;0.97916698;0.021917799;0;0;0;0;
1;0;0;0;0.66000003;0.74545503;0;0;0;0;
1;0;0.024657501;0;0;0;0;0;1;0;
0;0.63;0.74545503;0;0;0;0;1;0.0208333;0.024657501;
0;0;0;0;0;1;0;0;0.63999999;0.74545503;
0;0;0;0;1;0.041666701;0.024657501;0;0;0;
0;0;1;0;0;0.62;0.74545503;0;0;0;
0;1;0.0625;0.024657501;0;0;0;0;0;1;
0;0;0.62;0.74545503;0;0;0;0;1;0.083333299;
0.024657501;0;0;0;0;0;1;0;0;0.62;
0.77575803;0;0;0;0;1;0.104167;0.024657501;0;0;
0;0;0;1;0;0;0.63999999;0.74545503;0;0;
0;0;1;0.125;0.024657501;0;0;0;0;0;
1;0;0;0.58999997;0.77575803;0;0;0;0;1;
0.145833;0.024657501;0;0;0;0;0;1;0;0;
0.62;0.74545503;0;0;0;0;1;0.166667;0.024657501;0;
0;0;0;0;1;0;0;0.63999999;0.74545503;0;
0;0;1;0;0.1875;0.024657501;0;0;0;0;
0;1;0;0;0.64999998;0.74545503;0;0;0;1;
0;0.208333;0.024657501;0;0;0;0;0;1;0;
0;0.64999998;0.74545503;0;0;0;1;0;0.229167;0.024657501;
0;0;0;0;0;1;0;0;0.64999998;0.71515101;
0;0;0;1;0;0.25;0.024657501;0;0;0;
0;0;1;0;0;0.68000001;0.68484801;0;0;0;
1;0;0.27083299;0.024657501;0;0;0;0;0;1;
0;0;0.69999999;0.68484801;0;0;0;1;0;0.29166701;
0.024657501;0;0;0;0;0;1;0;0;0.74000001;
0.68484801;0;0;0;1;0;0.3125;0.024657501;0;0;
0;0;0;1;0;0;0.77999997;0.65454501;0;0;
0;1;0;0.33333299;0.024657501;0;0;0;0;0;
1;0;0;0.80000001;0.62424201;0;0;0;1;0;
0.35416701;0.024657501;0;0;0;0;0;1;0;0;
0.82999998;0.62424201;0;0;0;1;0;0.375;0.024657501;0;
0;0;0;0;1;0;0;0.85000002;0.62424201;0;
0;0;1;0;0.39583299;0.024657501;0;0;0;0;
0;1;0;0;0.85000002;0.62424201;0;0;0;1;
0;0.41666701;0.024657501;0;0;0;0;0;1;0;
0;0.85000002;0.62424201;0;0;0;1;0;0.4375;0.024657501;
0;0;0;0;0;1;0;0;0.85000002;0.62424201;
0;0;0;1;0;0.47916701;0.024657501;0;0;0;
0;0;1;0;0;0.87;0.62424201;0;0;0;
0;1;0.5;0.024657501;0;0;0;0;0;1;
0;0;0.86000001;0.62424201;0;0;0;0;1;0.52083302;
0.024657501;0;0;0;0;0;1;0;0;0.88;
0.62424201;0;0;0;0;1;0.54166698;0.024657501;0;0;
0;0;0;1;0;0;0.88999999;0.62424201;0;0;
0;0;1;0.5625;0.024657501;0;0;0;0;0;
1;0;0;0.87;0.62424201;0;0;0;0;1;
0.58333302;0.024657501;0;0;0;0;0;1;0;0;
0.88999999;0.59393901;0;0;0;0;1;0.60416698;0.024657501;0;
0;0;0;0;1;0;0;0.88;0.59393901;0;
0;0;0;1;0.625;0.024657501;0;0;0;0;
0;1;0;0;0.88;0.59393901;0;0;0;0;
1;0.64583302;0.024657501;0;0;0;0;0;1;0;
0;0.85000002;0.62424201;0;0;0;0;1;0.66666698;0.024657501;
0;0;0;0;0;1;0;0;0.87;0.59393901;
0;0;0;0;1;0.6875;0.024657501;0;0;0;
0;0;1;0;0;0.88;0.59393901;0;0;0;
0;1;0.70833302;0.024657501;0;0;0;0;0;1;
0;0;0.86000001;0.59393901;0;0;0;0;1;0.72916698;
0.024657501;0;0;0;0;0;1;0;0;0.87;
0.563636;0;0;0;0;1;0.75;0.024657501;0;0;
0;0;0;1;0;0;0.83999997;0.59393901;0;0;
0;0;1;0.77083302;0.024657501;0;0;0;0;0;
1;0;0;0.82999998;0.59393901;0;0;0;0;1;
0.79166698;0.024657501;0;0;0;0;0;1;0;0;
0.80000001;0.62424201;0;0;0;0;1;0.8125;0.024657501;0;
0;0;0;0;1;0;0;0.77999997;0.62424201;0;
0;0;0;1;0.83333302;0.024657501;0;0;0;0;
0;1;0;0;0.70999998;0.65454501;0;0;0;0;
1;0.85416698;0.024657501;0;0;0;0;0;1;0;
0;0.64999998;0.68484801;0;0;0;0;1;0.875;0.024657501;
0;0;0;0;0;1;0;0;0.63;0.68484801;
0;0;0;0;1;0.89583302;0.024657501;0;0;0;
0;0;1;0;0;0.60000002;0.71515101;0;0;0;
0;1;0.91666698;0.024657501;0;0;0;0;0;1;
0;0;0.62;0.71515101;0;0;0;0;1;0.9375;
0.024657501;0;0;0;0;0;1;0;0;0.62;
0.71515101;0;0;0;0;1;0.97916698;0.024657501;0;0;
0;0;0;1;0;0;0.54000002;0.74545503;0;0;
0;1;0;0;0.027397299;0;0;0;0;0;
0;1;0;0.55000001;0.74545503;0;0;0;1;0;
0.0208333;0.027397299;0;0;0;0;0;0;1;0;
0.54000002;0.74545503;0;0;0;1;0;0.041666701;0.027397299;0;
0;0;0;0;0;1;0;0.54000002;0.74545503;0;
0;0;1;0;0.0625;0.027397299;0;0;0;0;
0;0;1;0;0.50999999;0.74545503;0;0;0;1;
0;0.083333299;0.027397299;0;0;0;0;0;0;1;
0;0.56;0.74545503;0;0;0;1;0;0.104167;0.027397299;
0;0;0;0;0;0;1;0;0.54000002;0.74545503;
0;0;0;1;0;0.125;0.027397299;0;0;0;
0;0;0;1;0;0.52999997;0.74545503;0;0;0;
1;0;0.145833;0.027397299;0;0;0;0;0;0;
1;0;0.56;0.74545503;0;0;0;1;0;0.166667;
0.027397299;0;0;0;0;0;0;1;0;0.56;
0.71515101;0;0;0;1;0;0.1875;0.027397299;0;0;
0;0;0;0;1;0;0.57999998;0.71515101;0;0;
0;1;0;0.208333;0.027397299;0;0;0;0;0;
0;1;0;0.60000002;0.71515101;0;0;0;1;0;
0.229167;0.027397299;0;0;0;0;0;0;1;0;
0.60000002;0.68484801;0;0;0;1;0;0.25;0.027397299;0;
0;0;0;0;0;1;0;0.62;0.65454501;0;
0;0;1;0;0.27083299;0.027397299;0;0;0;0;
0;0;1;0;0.64999998;0.65454501;0;0;0;1;
0;0.29166701;0.027397299;0;0;0;0;0;0;1;
0;0.67000002;0.62424201;0;0;0;1;0;0.3125;0.027397299;
0;0;0;0;0;0;1;0;0.66000003;0.62424201;
0;0;0;1;0;0.33333299;0.027397299;0;0;0;
0;0;0;1;0;0.69;0.59393901;0;0;0;
1;0;0.35416701;0.027397299;0;0;0;0;0;0;
1;0;0.73000002;0.59393901;0;0;0;1;0;0.375;
0.027397299;0;0;0;0;0;0;1;0;0.74000001;
0.59393901;0;0;0;1;0;0.39583299;0.027397299;0;0;
0;0;0;0;1;0;0.75;0.59393901;0;0;
0;1;0;0.41666701;0.027397299;0;0;0;0;0;
0;1;0;0.76999998;0.59393901;0;0;0;1;0;
0.4375;0.027397299;0;0;0;0;0;0;1;0;
0.76999998;0.59393901;0;0;0;1;0;0.47916701;0.027397299;0;
0;0;0;0;0;1;0;0.79000002;0.59393901;0;
0;0;0;1;0.5;0.027397299;0;0;0;0;
0;0;1;0;0.77999997;0.59393901;0;0;0;0;
1;0.52083302;0.027397299;0;0;0;0;0;0;1;
0;0.79000002;0.59393901;0;0;0;0;1;0.54166698;0.027397299;
0;0;0;0;0;0;1;0;0.80000001;0.59393901;
0;0;0;0;1;0.5625;0.027397299;0;0;0;
0;0;0;1;0;0.79000002;0.59393901;0;0;0;
0;1;0.58333302;0.027397299;0;0;0;0;0;0;
1;0;0.79000002;0.59393901;0;0;0;0;1;0.60416698;
0.027397299;0;0;0;0;0;0;1;0;0.81999999;
0.59393901;0;0;0;0;1;0.625;0.027397299;0;0;
0;0;0;0;1;0;0.82999998;0.59393901;0;0;
0;0;1;0.64583302;0.027397299;0;0;0;0;0;
0;1;0;0.83999997;0.59393901;0;0;0;0;1;
0.66666698;0.027397299;0;0;0;0;0;0;1;0;
0.83999997;0.59393901;0;0;0;0;1;0.6875;0.027397299;0;
0;0;0;0;0;1;0;0.83999997;0.62424201;0;
0;0;0;1;0.70833302;0.027397299;0;0;0;0;
0;0;1;0;0.83999997;0.59393901;0;0;0;0;
1;0.72916698;0.027397299;0;0;0;0;0;0;1;
0;0.86000001;0.59393901;0;0;0;0;1;0.75;0.027397299;
0;0;0;0;0;0;1;0;0.86000001;0.59393901;
0;0;0;0;1;0.77083302;0.027397299;0;0;0;
0;0;0;1;0;0.82999998;0.62424201;0;0;0;
0;1;0.79166698;0.027397299;0;0;0;0;0;0;
1;0;0.81;0.65454501;0;0;0;0;1;0.8125;
0.027397299;0;0;0;0;0;0;1;0;0.79000002;
0.65454501;0;0;0;0;1;0.83333302;0.027397299;0;0;
0;0;0;0;1;0;0.76999998;0.65454501;0;0;
0;0;1;0.85416698;0.027397299;0;0;0;0;0;
0;1;0;0.73000002;0.68484801;0;0;0;0;1;
0.875;0.027397299;0;0;0;0;0;0;1;0;
0.70999998;0.68484801;0;0;0;0;1;0.89583302;0.027397299;0;
0;0;0;0;0;1;0;0.69999999;0.68484801;0;
0;0;0;1;0.91666698;0.027397299;0;0;0;0;
0;0;1;0;0.69;0.71515101;0;0;0;0;
1;0.9375;0.027397299;0;0;0;0;0;0;1;
0;0.69;0.71515101;0;0;0;0;1;0.97916698;0.027397299;
0;0;0;0;0;0;1;0;0.64999998;0.74545503;
0;0;0;0;1;0;0.030137001;1;0;0;
0;0;0;0;0;0.60000002;0.74545503;0;0;0;
0;1;0.0208333;0.030137001;1;0;0;0;0;0;
0;0;0.60000002;0.74545503;0;0;0;0;1;0.041666701;
0.030137001;1;0;0;0;0;0;0;0;0.63;
0.74545503;0;0;0;0;1;0.0625;0.030137001;1;0;
0;0;0;0;0;0;0.64999998;0.74545503;0;0;
0;0;1;0.083333299;0.030137001;1;0;0;0;0;
0;0;0;0.64999998;0.74545503;0;0;0;0;1;
0.104167;0.030137001;1;0;0;0;0;0;0;0;
0.63999999;0.77575803;0;0;0;0;1;0.125;0.030137001;1;
0;0;0;0;0;0;0;0.64999998;0.77575803;0;
0;0;0;1;0.145833;0.030137001;1;0;0;0;
0;0;0;0;0.69999999;0.74545503;0;0;0;0;
1;0.166667;0.030137001;1;0;0;0;0;0;0;
0;0.68000001;0.74545503;0;0;0;0;1;0.1875;0.030137001;
1;0;0;0;0;0;0;0;0.73000002;0.71515101;
0;0;0;0;1;0.208333;0.030137001;1;0;0;
0;0;0;0;0;0.75999999;0.71515101;0;0;0;
0;1;0.229167;0.030137001;1;0;0;0;0;0;
0;0;0.77999997;0.68484801;0;0;0;0;1;0.25;
0.030137001;1;0;0;0;0;0;0;0;0.76999998;
0.71515101;0;0;0;0;1;0.27083299;0.030137001;1;0;
0;0;0;0;0;0;0.75999999;0.71515101;0;0;
0;0;1;0.29166701;0.030137001;1;0;0;0;0;
0;0;0;0.77999997;0.68484801;0;0;0;0;1;
0.3125;0.030137001;1;0;0;0;0;0;0;0;
0.81999999;0.65454501;0;0;0;0;1;0.33333299;0.030137001;1;
0;0;0;0;0;0;0;0.82999998;0.65454501;0;
0;0;0;1;0.35416701;0.030137001;1;0;0;0;
0;0;0;0;0.85000002;0.65454501;0;0;0;0;
1;0.375;0.030137001;1;0;0;0;0;0;0;
0;0.86000001;0.65454501;0;0;0;0;1;0.39583299;0.030137001;
1;0;0;0;0;0;0;0;0.88;0.65454501;
0;0;0;0;1;0.41666701;0.030137001;1;0;0;
0;0;0;0;0;0.88;0.62424201;0;0;0;
0;1;0.4375;0.030137001;1;0;0;0;0;0;
0;0;0.88;0.62424201;0;0;0;0;1;0.47916701;
0.030137001;1;0;0;0;0;0;0;0;0.81999999;
0.62424201;0;0;0;0;1;0.5;0.030137001;1;0;
0;0;0;0;0;0;0.80000001;0.62424201;0;0;
0;0;1;0.52083302;0.030137001;1;0;0;0;0;
0;0;0;0.77999997;0.62424201;0;0;0;0;1;
0.54166698;0.030137001;1;0;0;0;0;0;0;0;
0.80000001;0.62424201;0;0;0;0;1;0.5625;0.030137001;1;
0;0;0;0;0;0;0;0.83999997;0.59393901;0;
0;0;0;1;0.58333302;0.030137001;1;0;0;0;
0;0;0;0;0.82999998;0.62424201;0;0;0;0;
1;0.60416698;0.030137001;1;0;0;0;0;0;0;
0;0.81;0.59393901;0;0;0;0;1;0.625;0.030137001;
1;0;0;0;0;0;0;0;0.82999998;0.59393901;
0;0;0;0;1;0.64583302;0.030137001;1;0;0;
0;0;0;0;0;0.80000001;0.59393901;0;0;0;
0;1;0.66666698;0.030137001;1;0;0;0;0;0;
0;0;0.81999999;0.59393901;0;0;0;0;1;0.6875;
0.030137001;1;0;0;0;0;0;0;0;0.82999998;
0.59393901;0;0;0;0;1;0.70833302;0.030137001;1;0;
0;0;0;0;0;0;0.85000002;0.563636;0;0;
0;0;1;0.72916698;0.030137001;1;0;0;0;0;
0;0;0;0.82999998;0.563636;0;0;0;0;1;
0.75;0.030137001;1;0;0;0;0;0;0;0;
0.83999997;0.563636;0;0;0;0;1;0.77083302;0.030137001;1;
0;0;0;0;0;0;0;0.81;0.59393901;0;
0;0;0;1;0.79166698;0.030137001;1;0;0;0;
0;0;0;0;0.81;0.59393901;0;0;0;0;
1;0.8125;0.030137001;1;0;0;0;0;0;0;
0;0.75999999;0.62424201;0;0;0;0;1;0.83333302;0.030137001;
1;0;0;0;0;0;0;0;0.73000002;0.65454501;
0;0;0;0;1;0.85416698;0.030137001;1;0;0;
0;0;0;0;0;0.69;0.65454501;0;0;0;
0;1;0.875;0.030137001;1;0;0;0;0;0;
0;0;0.67000002;0.68484801;0;0;0;0;1;0.89583302;
0.030137001;1;0;0;0;0;0;0;0;0.66000003;
0.68484801;0;0;0;0;1;0.91666698;0.030137001;1;0;
0;0;0;0;0;0;0.63999999;0.71515101;0;0;
0;0;1;0.9375;0.030137001;1;0;0;0;0;
0;0;0;0.63;0.71515101;0;0;0;1;0;
0.97916698;0.030137001;1;0;0;0;0;0;0;0;
0.62;0.71515101;0;0;0;1;0;0;0.0328767;0;
1;0;0;0;0;0;0;0.63;0.71515101;0;
0;0;1;0;0.0208333;0.0328767;0;1;0;0;
0;0;0;0;0.62;0.71515101;0;0;0;1;
0;0.041666701;0.0328767;0;1;0;0;0;0;0;
0;0.62;0.74545503;0;0;0;1;0;0.0625;0.0328767;
0;1;0;0;0;0;0;0;0.60000002;0.74545503;
0;0;0;1;0;0.083333299;0.0328767;0;1;0;
0;0;0;0;0;0.63;0.71515101;0;0;0;
1;0;0.104167;0.0328767;0;1;0;0;0;0;
0;0;0.61000001;0.74545503;0;0;0;1;0;0.125;
0.0328767;0;1;0;0;0;0;0;0;0.61000001;
0.71515101;0;0;0;1;0;0.145833;0.0328767;0;1;
0;0;0;0;0;0;0.60000002;0.74545503;0;0;
0;1;0;0.166667;0.0328767;0;1;0;0;0;
0;0;0;0.62;0.71515101;0;0;0;0;1;
0.1875;0.0328767;0;1;0;0;0;0;0;0;
0.63;0.71515101;0;0;0;0;1;0.208333;0.0328767;0;
1;0;0;0;0;0;0;0.63999999;0.71515101;0;
0;0;0;1;0.229167;0.0328767;0;1;0;0;
0;0;0;0;0.67000002;0.68484801;0;0;0;0;
1;0.25;0.0328767;0;1;0;0;0;0;0;
0;0.69;0.68484801;0;0;0;0;1;0.27083299;0.0328767;
0;1;0;0;0;0;0;0;0.69999999;0.65454501;
0;0;0;0;1;0.29166701;0.0328767;0;1;0;
0;0;0;0;0;0.74000001;0.65454501;0;0;0;
0;1;0.3125;0.0328767;0;1;0;0;0;0;
0;0;0.75;0.62424201;0;0;0;0;1;0.33333299;
0.0328767;0;1;0;0;0;0;0;0;0.77999997;
0.59393901;0;0;0;0;1;0.35416701;0.0328767;0;1;
0;0;0;0;0;0;0.80000001;0.59393901;0;0;
0;0;1;0.375;0.0328767;0;1;0;0;0;
0;0;0;0.80000001;0.59393901;0;0;0;0;1;
0.39583299;0.0328767;0;1;0;0;0;0;0;0;
0.80000001;0.563636;0;0;0;0;1;0.41666701;0.0328767;0;
1;0;0;0;0;0;0;0.79000002;0.563636;0;
0;0;0;1;0.4375;0.0328767;0;1;0;0;
0;0;0;0;0.81;0.563636;0;0;0;0;
1;0.47916701;0.0328767;0;1;0;0;0;0;0;
0;0.81999999;0.563636;0;0;0;0;1;0.5;0.0328767;
0;1;0;0;0;0;0;0;0.83999997;0.533333;
0;0;0;0;1;0.52083302;0.0328767;0;1;0;
0;0;0;0;0;0.82999998;0.533333;0;0;0;
0;1;0.54166698;0.0328767;0;1;0;0;0;0;
0;0;0.85000002;0.533333;0;0;0;0;1;0.5625;
0.0328767;0;1;0;0;0;0;0;0;0.85000002;
0.533333;0;0;0;0;1;0.58333302;0.0328767;0;1;
0;0;0;0;0;0;0.85000002;0.533333;0;0;
0;0;1;0.60416698;0.0328767;0;1;0;0;0;
0;0;0;0.82999998;0.533333;0;0;0;0;1;
0.625;0.0328767;0;1;0;0;0;0;0;0;
0.81999999;0.533333;0;0;0;0;1;0.64583302;0.0328767;0;
1;0;0;0;0;0;0;0.81;0.533333;0;
0;0;0;1;0.66666698;0.0328767;0;1;0;0;
0;0;0;0;0.85000002;0.533333;0;0;0;0;
1;0.6875;0.0328767;0;1;0;0;0;0;0;
0;0.85000002;0.533333;0;0;0;0;1;0.70833302;0.0328767;
0;1;0;0;0;0;0;0;0.85000002;0.533333;
0;0;0;0;1;0.72916698;0.0328767;0;1;0;
0;0;0;0;0;0.86000001;0.533333;0;0;0;
0;1;0.75;0.0328767;0;1;0;0;0;0;
0;0;0.88999999;0.50303;0;0;0;0;1;0.77083302;
0.0328767;0;1;0;0;0;0;0;0;0.87;
0.533333;0;0;0;0;1;0.79166698;0.0328767;0;1;
0;0;0;0;0;0;0.81999999;0.563636;0;0;
0;0;1;0.8125;0.0328767;0;1;0;0;0;
0;0;0;0.76999998;0.59393901;0;0;0;0;1;
0.83333302;0.0328767;0;1;0;0;0;0;0;0;
0.70999998;0.59393901;0;0;0;0;1;0.85416698;0.0328767;0;
1;0;0;0;0;0;0;0.69;0.62424201;0;
0;0;0;1;0.875;0.0328767;0;1;0;0;
0;0;0;0;0.66000003;0.62424201;0;0;0;0;
1;0.89583302;0.0328767;0;1;0;0;0;0;0;
0;0.66000003;0.62424201;0;0;0;0;1;0.91666698;0.0328767;
0;1;0;0;0;0;0;0;0.63;0.65454501;
0;0;0;0;1;0.9375;0.0328767;0;1;0;
0;0;0;0;0;0.63;0.68484801;0;0;0;
1;0;0.97916698;0.0328767;0;1;0;0;0;0;
0;0;0.61000001;0.68484801;0;0;0;1;0;0;
0.035616402;0;0;1;0;0;0;0;0;0.60000002;
0.68484801;0;0;0;1;0;0.0208333;0.035616402;0;0;
1;0;0;0;0;0;0.60000002;0.68484801;0;0;
0;1;0;0.041666701;0.035616402;0;0;1;0;0;
0;0;0;0.60000002;0.71515101;0;0;0;1;0;
0.0625;0.035616402;0;0;1;0;0;0;0;0;
0.57999998;0.71515101;0;0;0;1;0;0.083333299;0.035616402;0;
0;1;0;0;0;0;0;0.57999998;0.71515101;0;
0;0;1;0;0.104167;0.035616402;0;0;1;0;
0;0;0;0;0.56999999;0.71515101;0;0;0;1;
0;0.125;0.035616402;0;0;1;0;0;0;0;
0;0.56999999;0.74545503;0;0;0;1;0;0.145833;0.035616402;
0;0;1;0;0;0;0;0;0.57999998;0.71515101;
0;0;0;1;0;0.166667;0.035616402;0;0;1;
0;0;0;0;0;0.58999997;0.71515101;0;0;0;
1;0;0.1875;0.035616402;0;0;1;0;0;0;
0;0;0.58999997;0.71515101;0;0;0;1;0;0.208333;
0.035616402;0;0;1;0;0;0;0;0;0.58999997;
0.68484801;0;0;0;1;0;0.229167;0.035616402;0;0;
1;0;0;0;0;0;0.62;0.68484801;0;0;
0;1;0;0.25;0.035616402;0;0;1;0;0;
0;0;0;0.62;0.65454501;0;0;0;1;0;
0.27083299;0.035616402;0;0;1;0;0;0;0;0;
0.63999999;0.65454501;0;0;0;1;0;0.29166701;0.035616402;0;
0;1;0;0;0;0;0;0.64999998;0.62424201;0;
0;0;1;0;0.3125;0.035616402;0;0;1;0;
0;0;0;0;0.67000002;0.62424201;0;0;0;1;
0;0.33333299;0.035616402;0;0;1;0;0;0;0;
0;0.69999999;0.59393901;0;0;0;1;0;0.35416701;0.035616402;
0;0;1;0;0;0;0;0;0.72000003;0.59393901;
0;0;0;1;0;0.375;0.035616402;0;0;1;
0;0;0;0;0;0.70999998;0.563636;0;0;0;
1;0;0.39583299;0.035616402;0;0;1;0;0;0;
0;0;0.72000003;0.563636;0;0;0;1;0;0.41666701;
0.035616402;0;0;1;0;0;0;0;0;0.74000001;
0.563636;0;0;0;1;0;0.4375;0.035616402;0;0;
1;0;0;0;0;0;0.75999999;0.563636;0;0;
0;1;0;0.47916701;0.035616402;0;0;1;0;0;
0;0;0;0.82999998;0.533333;0;0;0;1;0;
0.5;0.035616402;0;0;1;0;0;0;0;0;
0.83999997;0.533333;0;0;0;1;0;0.52083302;0.035616402;0;
0;1;0;0;0;0;0;0.86000001;0.50303;0;
0;0;1;0;0.54166698;0.035616402;0;0;1;0;
0;0;0;0;0.86000001;0.50303;0;0;0;1;
0;0.5625;0.035616402;0;0;1;0;0;0;0;
0;0.87;0.50303;0;0;0;1;0;0.58333302;0.035616402;
0;0;1;0;0;0;0;0;0.85000002;0.50303;
0;0;0;1;0;0.60416698;0.035616402;0;0;1;
0;0;0;0;0;0.86000001;0.50303;0;0;0;
1;0;0.625;0.035616402;0;0;1;0;0;0;
0;0;0.88;0.533333;0;0;0;1;0;0.64583302;
0.035616402;0;0;1;0;0;0;0;0;0.87;
0.50303;0;0;0;1;0;0.66666698;0.035616402;0;0;
1;0;0;0;0;0;0.88;0.50303;0;0;
0;1;0;0.6875;0.035616402;0;0;1;0;0;
0;0;0;0.86000001;0.533333;0;0;0;1;0;
0.70833302;0.035616402;0;0;1;0;0;0;0;0;
0.83999997;0.533333;0;0;0;1;0;0.72916698;0.035616402;0;
0;1;0;0;0;0;0;0.86000001;0.533333;0;
0;0;1;0;0.75;0.035616402;0;0;1;0;
0;0;0;0;0.87;0.533333;0;0;0;1;
0;0.77083302;0.035616402;0;0;1;0;0;0;0;
0;0.82999998;0.563636;0;0;0;1;0;0.79166698;0.035616402;
0;0;1;0;0;0;0;0;0.79000002;0.563636;
0;0;0;1;0;0.8125;0.035616402;0;0;1;
0;0;0;0;0;0.75;0.59393901;0;0;0;
1;0;0.83333302;0.035616402;0;0;1;0;0;0;
0;0;0.73000002;0.62424201;0;0;0;1;0;0.85416698;
0.035616402;0;0;1;0;0;0;0;0;0.69;
0.62424201;0;0;0;1;0;0.875;0.035616402;0;0;
1;0;0;0;0;0;0.68000001;0.65454501;0;0;
0;1;0;0.89583302;0.035616402;0;0;1;0;0;
0;0;0;0.67000002;0.68484801;0;0;0;1;0;
0.9375;0.035616402;0;0;1;0;0;0;0;0;
0.60000002;0.71515101;0;0;0;1;0;0.97916698;0.035616402;0;
0;1;0;0;0;0;0;0.55000001;0.74545503;0;
0;0;1;0;0;0.0383562;0;0;0;1;
0;0;0;0;0.54000002;0.74545503;0;0;0;1;
0;0.0208333;0.0383562;0;0;0;1;0;0;0;
0;0.54000002;0.74545503;0;0;0;1;0;0.0625;0.0383562;
0;0;0;1;0;0;0;0;0.57999998;0.80606103;
0;0;0;1;0;0.083333299;0.0383562;0;0;0;
1;0;0;0;0;0.60000002;0.80606103;0;0;0;
1;0;0.104167;0.0383562;0;0;0;1;0;0;
0;0;0.62;0.77575803;0;0;0;1;0;0.125;
0.0383562;0;0;0;1;0;0;0;0;0.63;
0.77575803;0;0;0;1;0;0.145833;0.0383562;0;0;
0;1;0;0;0;0;0.63999999;0.74545503;0;0;
0;1;0;0.166667;0.0383562;0;0;0;1;0;
0;0;0;0.66000003;0.74545503;0;0;0;1;0;
0.1875;0.0383562;0;0;0;1;0;0;0;0;
0.68000001;0.71515101;0;0;0;1;0;0.208333;0.0383562;0;
0;0;1;0;0;0;0;0.66000003;0.71515101;0;
0;0;1;0;0.229167;0.0383562;0;0;0;1;
0;0;0;0;0.67000002;0.74545503;0;0;0;1;
0;0.25;0.0383562;0;0;0;1;0;0;0;
0;0.73000002;0.68484801;0;0;0;1;0;0.27083299;0.0383562;
0;0;0;1;0;0;0;0;0.69999999;0.68484801;
0;0;0;1;0;0.29166701;0.0383562;0;0;0;
1;0;0;0;0;0.72000003;0.68484801;0;0;0;
1;0;0.3125;0.0383562;0;0;0;1;0;0;
0;0;0.75;0.65454501;0;0;0;1;0;0.33333299;
0.0383562;0;0;0;1;0;0;0;0;0.79000002;
0.62424201;0;0;0;1;0;0.35416701;0.0383562;0;0;
0;1;0;0;0;0;0.80000001;0.62424201;0;0;
0;1;0;0.375;0.0383562;0;0;0;1;0;
0;0;0;0.81999999;0.62424201;0;0;0;1;0;
0.39583299;0.0383562;0;0;0;1;0;0;0;0;
0.82999998;0.62424201;0;0;0;1;0;0.41666701;0.0383562;0;
0;0;1;0;0;0;0;0.81;0.62424201;0;
0;0;1;0;0.4375;0.0383562;0;0;0;1;
0;0;0;0;0.82999998;0.59393901;0;0;0;1;
0;0.47916701;0.0383562;0;0;0;1;0;0;0;
0;0.80000001;0.59393901;0;0;0;0;1;0.5;0.0383562;
0;0;0;1;0;0;0;0;0.87;0.563636;
0;0;0;0;1;0.52083302;0.0383562;0;0;0;
1;0;0;0;0;0.77999997;0.59393901;0;0;0;
0;1;0.54166698;0.0383562;0;0;0;1;0;0;
0;0;0.81;0.59393901;0;0;0;0;1;0.5625;
0.0383562;0;0;0;1;0;0;0;0;0.89999998;
0.533333;0;0;1;0;0;0.58333302;0.0383562;0;0;
0;1;0;0;0;0;0.91000003;0.533333;0;0;
1;0;0;0.60416698;0.0383562;0;0;0;1;0;
0;0;0;0.89999998;0.563636;0;0;1;0;0;
0.625;0.0383562;0;0;0;1;0;0;0;0;
0.91000003;0.533333;0;0;1;0;0;0.64583302;0.0383562;0;
0;0;1;0;0;0;0;0.89999998;0.533333;0;
0;1;0;0;0.66666698;0.0383562;0;0;0;1;
0;0;0;0;0.91000003;0.533333;0;0;1;0;
0;0.6875;0.0383562;0;0;0;1;0;0;0;
0;0.89999998;0.563636;0;0;1;0;0;0.70833302;0.0383562;
0;0;0;1;0;0;0;0;0.88999999;0.533333;
0;0;1;0;0;0.72916698;0.0383562;0;0;0;
1;0;0;0;0;0.89999998;0.533333;0;0;1;
0;0;0.75;0.0383562;0;0;0;1;0;0;
0;0;0.89999998;0.533333;0;0;1;0;0;0.77083302;
0.0383562;0;0;0;1;0;0;0;0;0.86000001;
0.59393901;0;0;1;0;0;0.79166698;0.0383562;0;0;
0;1;0;0;0;0;0.79000002;0.62424201;0;0;
1;0;0;0.8125;0.0383562;0;0;0;1;0;
0;0;0;0.74000001;0.65454501;0;0;1;0;0;
0.83333302;0.0383562;0;0;0;1;0;0;0;0;
0.69;0.65454501;0;0;1;0;0;0.85416698;0.0383562;0;
0;0;1;0;0;0;0;0.67000002;0.68484801;0;
0;1;0;0;0.875;0.0383562;0;0;0;1;
0;0;0;0;0.55000001;0.71515101;0;0;1;0;
0;0.89583302;0.0383562;0;0;0;1;0;0;0;
0;0.55000001;0.71515101;0;0;1;0;0;0.91666698;0.0383562;
0;0;0;1;0;0;0;0;0.52999997;0.74545503;
0;0;1;0;0;0.9375;0.0383562;0;0;0;
1;0;0;0;0;0.60000002;0.71515101;0;0;0;
1;0;0.97916698;0.0383562;0;0;0;1;0;0;
0;0;0.54000002;0.71515101;0;0;0;1;0;0;
0.041095901;0;0;0;0;1;0;0;0;0.49000001;
0.77575803;0;0;0;1;0;0.0208333;0.041095901;0;0;
0;0;1;0;0;0;0.46000001;0.77575803;0;0;
0;1;0;0.041666701;0.041095901;0;0;0;0;1;
0;0;0;0.44999999;0.77575803;0;0;0;1;0;
0.0625;0.041095901;0;0;0;0;1;0;0;0;
0.46000001;0.80606103;0;0;0;1;0;0.083333299;0.041095901;0;
0;0;0;1;0;0;0;0.47999999;0.77575803;0;
0;0;1;0;0.104167;0.041095901;0;0;0;0;
1;0;0;0;0.5;0.77575803;0;0;0;1;
0;0.125;0.041095901;0;0;0;0;1;0;0;
0;0.63999999;0.74545503;0;0;0;1;0;0.145833;0.041095901;
0;0;0;0;1;0;0;0;0.63;0.71515101;
0;0;0;1;0;0.166667;0.041095901;0;0;0;
0;1;0;0;0;0.61000001;0.74545503;0;0;0;
1;0;0.1875;0.041095901;0;0;0;0;1;0;
0;0;0.60000002;0.74545503;0;0;0;1;0;0.208333;
0.041095901;0;0;0;0;1;0;0;0;0.52999997;
0.77575803;0;0;0;1;0;0.229167;0.041095901;0;0;
0;0;1;0;0;0;0.52999997;0.77575803;0;0;
0;1;0;0.25;0.041095901;0;0;0;0;1;
0;0;0;0.52999997;0.77575803;0;0;0;1;0;
0.27083299;0.041095901;0;0;0;0;1;0;0;0;
0.52999997;0.74545503;0;0;0;1;0;0.29166701;0.041095901;0;
0;0;0;1;0;0;0;0.51999998;0.74545503;0;
0;0;1;0;0.3125;0.041095901;0;0;0;0;
1;0;0;0;0.60000002;0.68484801;0;0;0;1;
0;0.33333299;0.041095901;0;0;0;0;1;0;0;
0;0.68000001;0.68484801;0;0;0;1;0;0.35416701;0.041095901;
0;0;0;0;1;0;0;0;0.73000002;0.68484801;
0;0;0;1;0;0.375;0.041095901;0;0;0;
0;1;0;0;0;0.76999998;0.62424201;0;0;0;
1;0;0.39583299;0.041095901;0;0;0;0;1;0;
0;0;0.73000002;0.65454501;0;0;0;1;0;0.41666701;
0.041095901;0;0;0;0;1;0;0;0;0.81999999;
0.62424201;0;0;0;1;0;0.4375;0.041095901;0;0;
0;0;1;0;0;0;0.74000001;0.59393901;0;0;
0;1;0;0.47916701;0.041095901;0;0;0;0;1;
0;0;0;0.80000001;0.62424201;0;0;1;0;0;
0.5;0.041095901;0;0;0;0;1;0;0;0;
0.87;0.563636;0;0;1;0;0;0.52083302;0.041095901;0;
0;0;0;1;0;0;0;0.88;0.563636;0;
0;1;0;0;0.54166698;0.041095901;0;0;0;0;
1;0;0;0;0.91000003;0.563636;0;0;1;0;
0;0.5625;0.041095901;0;0;0;0;1;0;0;
0;0.92000002;0.563636;0;0;1;0;0;0.58333302;0.041095901;
0;0;0;0;1;0;0;0;0.91000003;0.563636;
0;0;1;0;0;0.625;0.041095901;0;0;0;
0;1;0;0;0;0.91000003;0.563636;0;0;1;
0;0;0.66666698;0.041095901;0;0;0;0;1;0;
0;0;0.88999999;0.59393901;0;0;1;0;0;0.6875;
0.041095901;0;0;0;0;1;0;0;0;0.91000003;
0.563636;0;0;1;0;0;0.70833302;0.041095901;0;0;
0;0;1;0;0;0;0.89999998;0.563636;0;0;
1;0;0;0.72916698;0.041095901;0;0;0;0;1;
0;0;0;0.88999999;0.563636;0;0;1;0;0;
0.75;0.041095901;0;0;0;0;1;0;0;0;
0.91000003;0.563636;0;0;1;0;0;0.77083302;0.041095901;0;
0;0;0;1;0;0;0;0.88999999;0.59393901;0;
0;1;0;0;0.79166698;0.041095901;0;0;0;0;
1;0;0;0;0.81999999;0.62424201;0;0;1;0;
0;0.8125;0.041095901;0;0;0;0;1;0;0;
0;0.70999998;0.65454501;0;0;1;0;0;0.83333302;0.041095901;
0;0;0;0;1;0;0;0;0.69;0.68484801;
0;0;1;0;0;0.85416698;0.041095901;0;0;0;
0;1;0;0;0;0.61000001;0.71515101;0;0;1;
0;0;0.875;0.041095901;0;0;0;0;1;0;
0;0;0.56;0.74545503;0;0;1;0;0;0.89583302;
0.041095901;0;0;0;0;1;0;0;0;0.55000001;
0.77575803;0;0;1;0;0;0.91666698;0.041095901;0;0;
0;0;1;0;0;0;0.56999999;0.74545503;0;0;
1;0;0;0.9375;0.041095901;0;0;0;0;1;
0;0;0;0.56;0.77575803;0;0;1;0;0;
0.97916698;0.041095901;0;0;0;0;1;0;0;0;
0.56;0.77575803;0;0;1;0;0;0;0.043835599;0;
0;0;0;0;1;0;0;0.63999999;0.74545503;0;
0;1;0;0;0.0208333;0.043835599;0;0;0;0;
0;1;0;0;0.64999998;0.77575803;0;0;1;0;
0;0.041666701;0.043835599;0;0;0;0;0;1;0;
0;0.80000001;0.71515101;0;0;1;0;0;0.0625;0.043835599;
0;0;0;0;0;1;0;0;0.86000001;0.68484801;
0;0;1;0;0;0.083333299;0.043835599;0;0;0;
0;0;1;0;0;0.81999999;0.71515101;0;0;1;
0;0;0.104167;0.043835599;0;0;0;0;0;1;
0;0;0.81;0.71515101;0;0;1;0;0;0.125;
0.043835599;0;0;0;0;0;1;0;0;0.75;
0.71515101;0;0;1;0;0;0.145833;0.043835599;0;0;
0;0;0;1;0;0;0.91000003;0.65454501;0;0;
1;0;0;0.166667;0.043835599;0;0;0;0;0;
1;0;0;0.94999999;0.65454501;0;0;1;0;0;
0.1875;0.043835599;0;0;0;0;0;1;0;0;
0.94999999;0.65454501;0;0;1;0;0;0.208333;0.043835599;0;
0;0;0;0;1;0;0;0.97000003;0.65454501;0;
0;1;0;0;0.229167;0.043835599;0;0;0;0;
0;1;0;0;0.92000002;0.65454501;0;0;1;0;
0;0.25;0.043835599;0;0;0;0;0;1;0;
0;0.97000003;0.65454501;0;0;1;0;0;0.27083299;0.043835599;
0;0;0;0;0;1;0;0;0.98000002;0.65454501;
0;0;1;0;0;0.29166701;0.043835599;0;0;0;
0;0;1;0;0;0.97000003;0.62424201;0;0;1;
0;0;0.3125;0.043835599;0;0;0;0;0;1;
0;0;0.97000003;0.65454501;0;0;1;0;0;0.33333299;
0.043835599;0;0;0;0;0;1;0;0;0.98000002;
0.65454501;0;0;1;0;0;0.35416701;0.043835599;0;0;
0;0;0;1;0;0;0.98000002;0.65454501;0;0;
1;0;0;0.375;0.043835599;0;0;0;0;0;
1;0;0;0.97000003;0.65454501;0;0;1;0;0;
0.39583299;0.043835599;0;0;0;0;0;1;0;0;
0.97000003;0.65454501;0;0;1;0;0;0.41666701;0.043835599;0;
0;0;0;0;1;0;0;0.97000003;0.62424201;0;
0;1;0;0;0.4375;0.043835599;0;0;0;0;
0;1;0;0;0.95999998;0.62424201;0;0;1;0;
0;0.47916701;0.043835599;0;0;0;0;0;1;0;
0;0.94;0.62424201;0;0;0;1;0;0.5;0.043835599;
0;0;0;0;0;1;0;0;0.93000001;0.62424201;
0;0;0;1;0;0.52083302;0.043835599;0;0;0;
0;0;1;0;0;0.92000002;0.62424201;0;0;0;
1;0;0.54166698;0.043835599;0;0;0;0;0;1;
0;0;0.92000002;0.59393901;0;0;0;1;0;0.5625;
0.043835599;0;0;0;0;0;1;0;0;0.94;
0.59393901;0;0;0;1;0;0.58333302;0.043835599;0;0;
0;0;0;1;0;0;0.89999998;0.59393901;0;0;
0;1;0;0.60416698;0.043835599;0;0;0;0;0;
1;0;0;0.88999999;0.59393901;0;0;0;1;0;
0.625;0.043835599;0;0;0;0;0;1;0;0;
0.88;0.59393901;0;0;0;1;0;0.64583302;0.043835599;0;
0;0;0;0;1;0;0;0.82999998;0.59393901;0;
0;0;1;0;0.66666698;0.043835599;0;0;0;0;
0;1;0;0;0.81;0.59393901;0;0;0;1;
0;0.6875;0.043835599;0;0;0;0;0;1;0;
0;0.80000001;0.59393901;0;0;0;1;0;0.70833302;0.043835599;
0;0;0;0;0;1;0;0;0.81;0.563636;
0;0;0;1;0;0.72916698;0.043835599;0;0;0;
0;0;1;0;0;0.81999999;0.563636;0;0;0;
1;0;0.75;0.043835599;0;0;0;0;0;1;
0;0;0.81;0.563636;0;0;0;1;0;0.77083302;
0.043835599;0;0;0;0;0;1;0;0;0.81;
0.59393901;0;0;0;1;0;0.79166698;0.043835599;0;0;
0;0;0;1;0;0;0.76999998;0.59393901;0;0;
0;1;0;0.8125;0.043835599;0;0;0;0;0;
1;0;0;0.72000003;0.62424201;0;0;0;1;0;
0.83333302;0.043835599;0;0;0;0;0;1;0;0;
0.69;0.62424201;0;0;0;1;0;0.85416698;0.043835599;0;
0;0;0;0;1;0;0;0.69;0.68484801;0;
0;0;1;0;0.875;0.043835599;0;0;0;0;
0;1;0;0;0.68000001;0.65454501;0;0;0;1;
0;0.89583302;0.043835599;0;0;0;0;0;1;0;
0;0.61000001;0.68484801;0;0;0;1;0;0.91666698;0.043835599;
0;0;0;0;0;1;0;0;0.61000001;0.68484801;
0;0;0;1;0;0.9375;0.043835599;0;0;0;
0;0;1;0;0;0.56999999;0.71515101;0;0;0;
1;0;0.97916698;0.043835599;0;0;0;0;0;1;
0;0;0.56;0.71515101;0;0;0;1;0;0;
0.0465753;0;0;0;0;0;0;1;0;0.55000001;
0.71515101;0;0;0;1;0;0.0208333;0.0465753;0;0;
0;0;0;0;1;0;0.56999999;0.71515101;0;0;
0;1;0;0.041666701;0.0465753;0;0;0;0;0;
0;1;0;0.56;0.74545503;0;0;0;1;0;
0.0625;0.0465753;0;0;0;0;0;0;1;0;
0.56999999;0.74545503;0;0;0;1;0;0.083333299;0.0465753;0;
0;0;0;0;0;1;0;0.55000001;0.74545503;0;
0;0;1;0;0.104167;0.0465753;0;0;0;0;
0;0;1;0;0.55000001;0.74545503;0;0;0;1;
0;0.125;0.0465753;0;0;0;0;0;0;1;
0;0.56999999;0.74545503;0;0;0;1;0;0.145833;0.0465753;
0;0;0;0;0;0;1;0;0.56999999;0.74545503;
0;0;0;1;0;0.166667;0.0465753;0;0;0;
0;0;0;1;0;0.56999999;0.77575803;0;0;0;
1;0;0.1875;0.0465753;0;0;0;0;0;0;
1;0;0.58999997;0.74545503;0;0;0;1;0;0.208333;
0.0465753;0;0;0;0;0;0;1;0;0.56;
0.74545503;0;0;0;1;0;0.229167;0.0465753;0;0;
0;0;0;0;1;0;0.61000001;0.74545503;0;0;
0;1;0;0.25;0.0465753;0;0;0;0;0;
0;1;0;0.63999999;0.71515101;0;0;0;1;0;
0.27083299;0.0465753;0;0;0;0;0;0;1;0;
0.66000003;0.71515101;0;0;0;1;0;0.29166701;0.0465753;0;
0;0;0;0;0;1;0;0.72000003;0.68484801;0;
0;0;1;0;0.3125;0.0465753;0;0;0;0;
0;0;1;0;0.72000003;0.65454501;0;0;0;1;
0;0.33333299;0.0465753;0;0;0;0;0;0;1;
0;0.79000002;0.62424201;0;0;0;1;0;0.35416701;0.0465753;
0;0;0;0;0;0;1;0;0.81;0.62424201;
0;0;0;1;0;0.375;0.0465753;0;0;0;
0;0;0;1;0;0.80000001;0.62424201;0;0;0;
1;0;0.39583299;0.0465753;0;0;0;0;0;0;
1;0;0.81999999;0.62424201;0;0;0;1;0;0.41666701;
0.0465753;0;0;0;0;0;0;1;0;0.82999998;
0.59393901;0;0;0;1;0;0.4375;0.0465753;0;0;
0;0;0;0;1;0;0.82999998;0.62424201;0;0;
0;1;0;0.47916701;0.0465753;0;0;0;0;0;
0;1;0;0.86000001;0.59393901;0;0;1;0;0;
0.5;0.0465753;0;0;0;0;0;0;1;0;
0.87;0.59393901;0;0;1;0;0;0.52083302;0.0465753;0;
0;0;0;0;0;1;0;0.87;0.59393901;0;
0;1;0;0;0.54166698;0.0465753;0;0;0;0;
0;0;1;0;0.88999999;0.59393901;0;0;1;0;
0;0.5625;0.0465753;0;0;0;0;0;0;1;
0;0.88999999;0.59393901;0;0;1;0;0;0.58333302;0.0465753;
0;0;0;0;0;0;1;0;0.94;0.62424201;
0;0;1;0;0;0.60416698;0.0465753;0;0;0;
0;0;0;1;0;0.95999998;0.59393901;0;0;1;
0;0;0.625;0.0465753;0;0;0;0;0;0;
1;0;0.98000002;0.563636;0;0;1;0;0;0.64583302;
0.0465753;0;0;0;0;0;0;1;0;0.95999998;
0.59393901;0;0;1;0;0;0.66666698;0.0465753;0;0;
0;0;0;0;1;0;0.94999999;0.59393901;0;0;
1;0;0;0.6875;0.0465753;0;0;0;0;0;
0;1;0;0.94;0.59393901;0;0;1;0;0;
0.70833302;0.0465753;0;0;0;0;0;0;1;0;
0.92000002;0.59393901;0;0;1;0;0;0.72916698;0.0465753;0;
0;0;0;0;0;1;0;0.89999998;0.59393901;0;
0;1;0;0;0.75;0.0465753;0;0;0;0;
0;0;1;0;0.89999998;0.59393901;0;0;0;0;
1;0.77083302;0.0465753;0;0;0;0;0;0;1;
0;0.89999998;0.59393901;0;0;0;0;1;0.79166698;0.0465753;
0;0;0;0;0;0;1;0;0.85000002;0.65454501;
0;0;0;0;1;0.8125;0.0465753;0;0;0;
0;0;0;1;0;0.85000002;0.65454501;0;0;0;
0;1;0.83333302;0.0465753;0;0;0;0;0;0;
1;0;0.81999999;0.65454501;0;0;0;0;1;0.85416698;
0.0465753;0;0;0;0;0;0;1;0;0.77999997;
0.68484801;0;0;0;0;1;0.875;0.0465753;0;0;
0;0;0;0;1;0;0.67000002;0.71515101;0;0;
0;0;1;0.89583302;0.0465753;0;0;0;0;0;
0;1;0;0.64999998;0.71515101;0;0;0;0;1;
0.91666698;0.0465753;0;0;0;0;0;0;1;0;
0.63999999;0.71515101;0;0;0;0;1;0.9375;0.0465753;0;
0;0;0;0;0;1;0;0.58999997;0.74545503;0;
0;0;1;0;0.97916698;0.0465753;0;0;0;0;
0;0;1;0;0.55000001;0.77575803;0;0;0;1;
0;0;0.049315099;1;0;0;0;0;0;0;
0;0.51999998;0.74545503;0;0;0;1;0;0.0208333;0.049315099;
1;0;0;0;0;0;0;0;0.54000002;0.77575803;
0;0;0;1;0;0.041666701;0.049315099;1;0;0;
0;0;0;0;0;0.55000001;0.77575803;0;0;0;
1;0;0.0625;0.049315099;1;0;0;0;0;0;
0;0;0.55000001;0.77575803;0;0;0;1;0;0.083333299;
0.049315099;1;0;0;0;0;0;0;0;0.56999999;
0.80606103;0;0;0;1;0;0.104167;0.049315099;1;0;
0;0;0;0;0;0;0.56;0.77575803;0;0;
0;1;0;0.125;0.049315099;1;0;0;0;0;
0;0;0;0.56999999;0.77575803;0;0;0;1;0;
0.145833;0.049315099;1;0;0;0;0;0;0;0;
0.54000002;0.77575803;0;0;0;1;0;0.166667;0.049315099;1;
0;0;0;0;0;0;0;0.56999999;0.77575803;0;
0;0;1;0;0.1875;0.049315099;1;0;0;0;
0;0;0;0;0.56999999;0.74545503;0;0;0;1;
0;0.208333;0.049315099;1;0;0;0;0;0;0;
0;0.60000002;0.77575803;0;0;0;1;0;0.229167;0.049315099;
1;0;0;0;0;0;0;0;0.58999997;0.74545503;
0;0;0;1;0;0.25;0.049315099;1;0;0;
0;0;0;0;0;0.55000001;0.74545503;0;0;0;
1;0;0.27083299;0.049315099;1;0;0;0;0;0;
0;0;0.62;0.71515101;0;0;0;1;0;0.29166701;
0.049315099;1;0;0;0;0;0;0;0;0.68000001;
0.68484801;0;0;0;1;0;0.3125;0.049315099;1;0;
0;0;0;0;0;0;0.70999998;0.65454501;0;0;
0;1;0;0.33333299;0.049315099;1;0;0;0;0;
0;0;0;0.74000001;0.65454501;0;0;0;1;0;
0.35416701;0.049315099;1;0;0;0;0;0;0;0;
0.76999998;0.62424201;0;0;0;1;0;0.375;0.049315099;1;
0;0;0;0;0;0;0;0.79000002;0.62424201;0;
0;0;1;0;0.39583299;0.049315099;1;0;0;0;
0;0;0;0;0.81;0.62424201;0;0;0;1;
0;0.41666701;0.049315099;1;0;0;0;0;0;0;
0;0.82999998;0.62424201;0;0;0;1;0;0.4375;0.049315099;
1;0;0;0;0;0;0;0;0.82999998;0.62424201;
0;0;0;1;0;0.47916701;0.049315099;1;0;0;
0;0;0;0;0;0.81999999;0.62424201;0;0;0;
0;1;0.5;0.049315099;1;0;0;0;0;0;
0;0;0.85000002;0.59393901;0;0;0;0;1;0.52083302;
0.049315099;1;0;0;0;0;0;0;0;0.83999997;
0.59393901;0;0;0;0;1;0.54166698;0.049315099;1;0;
0;0;0;0;0;0;0.86000001;0.563636;0;0;
0;0;1;0.5625;0.049315099;1;0;0;0;0;
0;0;0;0.87;0.59393901;0;0;0;0;1;
0.58333302;0.049315099;1;0;0;0;0;0;0;0;
0.86000001;0.59393901;0;0;0;0;1;0.60416698;0.049315099;1;
0;0;0;0;0;0;0;0.88;0.563636;0;
0;0;0;1;0.625;0.049315099;1;0;0;0;
0;0;0;0;0.88;0.563636;0;0;0;0;
1;0.64583302;0.049315099;1;0;0;0;0;0;0;
0;0.88999999;0.563636;0;0;0;0;1;0.66666698;0.049315099;
1;0;0;0;0;0;0;0;0.91000003;0.563636;
0;0;0;0;1;0.6875;0.049315099;1;0;0;
0;0;0;0;0;0.94999999;0.533333;0;0;0;
0;1;0.70833302;0.049315099;1;0;0;0;0;0;
0;0;0.94;0.533333;0;0;0;0;1;0.72916698;
0.049315099;1;0;0;0;0;0;0;0;0.94;
0.563636;0;0;0;0;1;0.75;0.049315099;1;0;
0;0;0;0;0;0;0.94;0.563636;0;0;
0;0;1;0.77083302;0.049315099;1;0;0;0;0;
0;0;0;0.88999999;0.59393901;0;0;0;0;1;
0.79166698;0.049315099;1;0;0;0;0;0;0;0;
0.87;0.62424201;0;0;0;0;1;0.8125;0.049315099;1;
0;0;0;0;0;0;0;0.81999999;0.65454501;0;
0;0;0;1;0.83333302;0.049315099;1;0;0;0;
0;0;0;0;0.80000001;0.65454501;0;0;0;0;
1;0.85416698;0.049315099;1;0;0;0;0;0;0;
0;0.73000002;0.68484801;0;0;0;0;1;0.875;0.049315099;
1;0;0;0;0;0;0;0;0.70999998;0.71515101;
0;0;0;0;1;0.91666698;0.049315099;1;0;0;
0;0;0;0;0;0.80000001;0.65454501;0;0;0;
0;1;0.9375;0.049315099;1;0;0;0;0;0;
0;0;0.75;0.68484801;0;0;1;0;0;0.97916698;
0.049315099;1;0;0;0;0;0;0;0;0.69;
0.74545503;0;0;1;0;0;0;0.0520548;0;1;
0;0;0;0;0;0;0.66000003;0.74545503;0;0;
1;0;0;0.0208333;0.0520548;0;1;0;0;0;
0;0;0;0.61000001;0.77575803;0;0;1;0;0;
0.041666701;0.0520548;0;1;0;0;0;0;0;0;
0.63;0.77575803;0;0;1;0;0;0.0625;0.0520548;0;
1;0;0;0;0;0;0;0.63;0.77575803;0;
0;1;0;0;0.083333299;0.0520548;0;1;0;0;
0;0;0;0;0.63;0.77575803;0;0;1;0;
0;0.104167;0.0520548;0;1;0;0;0;0;0;
0;0.63;0.77575803;0;0;1;0;0;0.125;0.0520548;
0;1;0;0;0;0;0;0;0.60000002;0.74545503;
0;0;1;0;0;0.145833;0.0520548;0;1;0;
0;0;0;0;0;0.57999998;0.77575803;0;0;1;
0;0;0.166667;0.0520548;0;1;0;0;0;0;
0;0;0.56;0.77575803;0;0;1;0;0;0.1875;
0.0520548;0;1;0;0;0;0;0;0;0.56999999;
0.77575803;0;0;1;0;0;0.208333;0.0520548;0;1;
0;0;0;0;0;0;0.58999997;0.74545503;0;0;
1;0;0;0.229167;0.0520548;0;1;0;0;0;
0;0;0;0.63;0.71515101;0;0;1;0;0;
0.25;0.0520548;0;1;0;0;0;0;0;0;
0.66000003;0.71515101;0;0;1;0;0;0.27083299;0.0520548;0;
1;0;0;0;0;0;0;0.67000002;0.68484801;0;
0;1;0;0;0.29166701;0.0520548;0;1;0;0;
0;0;0;0;0.69;0.65454501;0;0;1;0;
0;0.3125;0.0520548;0;1;0;0;0;0;0;
0;0.72000003;0.65454501;0;0;1;0;0;0.33333299;0.0520548;
0;1;0;0;0;0;0;0;0.74000001;0.62424201;
0;0;1;0;0;0.35416701;0.0520548;0;1;0;
0;0;0;0;0;0.75;0.62424201;0;0;1;
0;0;0.375;0.0520548;0;1;0;0;0;0;
0;0;0.74000001;0.62424201;0;0;1;0;0;0.39583299;
0.0520548;0;1;0;0;0;0;0;0;0.73000002;
0.62424201;0;0;1;0;0;0.41666701;0.0520548;0;1;
0;0;0;0;0;0;0.72000003;0.62424201;0;0;
1;0;0;0.4375;0.0520548;0;1;0;0;0;
0;0;0;0.74000001;0.62424201;0;0;1;0;0;
0.47916701;0.0520548;0;1;0;0;0;0;0;0;
0.72000003;0.59393901;0;0;0;1;0;0.5;0.0520548;0;
1;0;0;0;0;0;0;0.74000001;0.59393901;0;
0;0;1;0;0.52083302;0.0520548;0;1;0;0;
0;0;0;0;0.73000002;0.59393901;0;0;0;1;
0;0.54166698;0.0520548;0;1;0;0;0;0;0;
0;0.70999998;0.59393901;0;0;0;1;0;0.5625;0.0520548;
0;1;0;0;0;0;0;0;0.70999998;0.59393901;
0;0;0;1;0;0.58333302;0.0520548;0;1;0;
0;0;0;0;0;0.72000003;0.59393901;0;0;0;
1;0;0.60416698;0.0520548;0;1;0;0;0;0;
0;0;0.74000001;0.563636;0;0;0;1;0;0.625;
0.0520548;0;1;0;0;0;0;0;0;0.77999997;
0.563636;0;0;0;1;0;0.64583302;0.0520548;0;1;
0;0;0;0;0;0;0.77999997;0.563636;0;0;
0;1;0;0.66666698;0.0520548;0;1;0;0;0;
0;0;0;0.77999997;0.533333;0;0;0;1;0;
0.6875;0.0520548;0;1;0;0;0;0;0;0;
0.80000001;0.533333;0;0;0;1;0;0.70833302;0.0520548;0;
1;0;0;0;0;0;0;0.79000002;0.533333;0;
0;0;1;0;0.72916698;0.0520548;0;1;0;0;
0;0;0;0;0.77999997;0.563636;0;0;0;1;
0;0.75;0.0520548;0;1;0;0;0;0;0;
0;0.80000001;0.533333;0;0;0;1;0;0.77083302;0.0520548;
0;1;0;0;0;0;0;0;0.77999997;0.563636;
0;0;0;1;0;0.79166698;0.0520548;0;1;0;
0;0;0;0;0;0.75;0.563636;0;0;0;
1;0;0.8125;0.0520548;0;1;0;0;0;0;
0;0;0.73000002;0.59393901;0;0;0;1;0;0.83333302;
0.0520548;0;1;0;0;0;0;0;0;0.70999998;
0.59393901;0;0;0;1;0;0.85416698;0.0520548;0;1;
0;0;0;0;0;0;0.66000003;0.62424201;0;0;
0;1;0;0.875;0.0520548;0;1;0;0;0;
0;0;0;0.61000001;0.65454501;0;0;0;1;0;
0.89583302;0.0520548;0;1;0;0;0;0;0;0;
0.52999997;0.68484801;0;0;0;1;0;0.91666698;0.0520548;0;
1;0;0;0;0;0;0;0.52999997;0.65454501;0;
0;0;1;0;0.9375;0.0520548;0;1;0;0;
0;0;0;0;0.56;0.68484801;0;0;0;1;
0;0.97916698;0.0520548;0;1;0;0;0;0;0;
0;0.52999997;0.68484801;0;0;0;1;0;0;0.054794502;
0;0;1;0;0;0;0;0;0.5;0.71515101;
0;0;0;1;0;0.0208333;0.054794502;0;0;1;
0;0;0;0;0;0.5;0.71515101;0;0;0;
1;0;0.041666701;0.054794502;0;0;1;0;0;0;
0;0;0.49000001;0.71515101;0;0;0;1;0;0.0625;
0.054794502;0;0;1;0;0;0;0;0;0.50999999;
0.71515101;0;0;0;1;0;0.083333299;0.054794502;0;0;
1;0;0;0;0;0;0.47999999;0.74545503;0;0;
0;1;0;0.104167;0.054794502;0;0;1;0;0;
0;0;0;0.44999999;0.71515101;0;0;0;1;0;
0.125;0.054794502;0;0;1;0;0;0;0;0;
0.47999999;0.71515101;0;0;0;1;0;0.145833;0.054794502;0;
0;1;0;0;0;0;0;0.43000001;0.71515101;0;
0;0;1;0;0.166667;0.054794502;0;0;1;0;
0;0;0;0;0.44;0.71515101;0;0;0;1;
0;0.1875;0.054794502;0;0;1;0;0;0;0;
0;0.49000001;0.68484801;0;0;0;1;0;0.208333;0.054794502;
0;0;1;0;0;0;0;0;0.51999998;0.65454501;
0;0;0;1;0;0.229167;0.054794502;0;0;1;
0;0;0;0;0;0.58999997;0.65454501;0;0;0;
1;0;0.25;0.054794502;0;0;1;0;0;0;
0;0;0.56999999;0.62424201;0;0;0;1;0;0.27083299;
0.054794502;0;0;1;0;0;0;0;0;0.56999999;
0.62424201;0;0;0;1;0;0.29166701;0.054794502;0;0;
1;0;0;0;0;0;0.63;0.59393901;0;0;
0;1;0;0.3125;0.054794502;0;0;1;0;0;
0;0;0;0.63;0.59393901;0;0;0;1;0;
0.33333299;0.054794502;0;0;1;0;0;0;0;0;
0.63;0.59393901;0;0;0;1;0;0.35416701;0.054794502;0;
0;1;0;0;0;0;0;0.66000003;0.59393901;0;
0;0;1;0;0.375;0.054794502;0;0;1;0;
0;0;0;0;0.67000002;0.563636;0;0;0;1;
0;0.39583299;0.054794502;0;0;1;0;0;0;0;
0;0.68000001;0.563636;0;0;0;1;0;0.41666701;0.054794502;
0;0;1;0;0;0;0;0;0.67000002;0.563636;
0;0;0;1;0;0.4375;0.054794502;0;0;1;
0;0;0;0;0;0.68000001;0.59393901;0;0;0;
1;0;0.47916701;0.054794502;0;0;1;0;0;0;
0;0;0.69999999;0.59393901;0;0;0;1;0;0.5;
0.054794502;0;0;1;0;0;0;0;0;0.75999999;
0.59393901;0;0;0;1;0;0.52083302;0.054794502;0;0;
1;0;0;0;0;0;0.79000002;0.59393901;0;0;
0;1;0;0.54166698;0.054794502;0;0;1;0;0;
0;0;0;0.82999998;0.563636;0;0;0;1;0;
0.5625;0.054794502;0;0;1;0;0;0;0;0;
0.82999998;0.563636;0;0;0;1;0;0.58333302;0.054794502;0;
0;1;0;0;0;0;0;0.87;0.50303;0;
0;0;1;0;0.60416698;0.054794502;0;0;1;0;
0;0;0;0;0.86000001;0.50303;0;0;0;1;
0;0.625;0.054794502;0;0;1;0;0;0;0;
0;0.87;0.472727;0;0;0;1;0;0.64583302;0.054794502;
0;0;1;0;0;0;0;0;0.91000003;0.50303;
0;0;0;1;0;0.66666698;0.054794502;0;0;1;
0;0;0;0;0;0.89999998;0.472727;0;0;0;
1;0;0.6875;0.054794502;0;0;1;0;0;0;
0;0;0.88;0.472727;0;0;0;1;0;0.70833302;
0.054794502;0;0;1;0;0;0;0;0;0.92000002;
0.442424;0;0;0;1;0;0.72916698;0.054794502;0;0;
1;0;0;0;0;0;0.92000002;0.442424;0;0;
0;1;0;0.75;0.054794502;0;0;1;0;0;
0;0;0;0.92000002;0.472727;0;0;0;1;0;
0.77083302;0.054794502;0;0;1;0;0;0;0;0;
0.91000003;0.472727;0;0;0;1;0;0.79166698;0.054794502;0;
0;1;0;0;0;0;0;0.87;0.50303;0;
0;0;1;0;0.8125;0.054794502;0;0;1;0;
0;0;0;0;0.77999997;0.533333;0;0;0;1;
0;0.83333302;0.054794502;0;0;1;0;0;0;0;
0;0.69999999;0.59393901;0;0;0;1;0;0.85416698;0.054794502;
0;0;1;0;0;0;0;0;0.63999999;0.65454501;
0;0;0;1;0;0.875;0.054794502;0;0;1;
0;0;0;0;0;0.62;0.65454501;0;0;0;
1;0;0.89583302;0.054794502;0;0;1;0;0;0;
0;0;0.60000002;0.68484801;0;0;0;1;0;0.91666698;
0.054794502;0;0;1;0;0;0;0;0;0.56;
0.71515101;0;0;0;1;0;0.9375;0.054794502;0;0;
1;0;0;0;0;0;0.57999998;0.71515101;0;0;
0;1;0;0.97916698;0.054794502;0;0;1;0;0;
0;0;0;0.52999997;0.77575803;0;0;0;1;0;
0;0.057534199;0;0;0;1;0;0;0;0;
0.54000002;0.74545503;0;0;0;1;0;0.0208333;0.057534199;0;
0;0;1;0;0;0;0;0.50999999;0.80606103;0;
0;0;1;0;0.041666701;0.057534199;0;0;0;1;
0;0;0;0;0.51999998;0.77575803;0;0;0;1;
0;0.0625;0.057534199;0;0;0;1;0;0;0;
0;0.50999999;0.77575803;0;0;0;1;0;0.104167;0.057534199;
0;0;0;1;0;0;0;0;0.51999998;0.77575803;
0;0;0;0;1;0.125;0.057534199;0;0;0;
1;0;0;0;0;0.50999999;0.77575803;0;0;0;
0;1;0.145833;0.057534199;0;0;0;1;0;0;
0;0;0.50999999;0.77575803;0;0;0;0;1;0.166667;
0.057534199;0;0;0;1;0;0;0;0;0.52999997;
0.74545503;0;0;0;0;1;0.1875;0.057534199;0;0;
0;1;0;0;0;0;0.52999997;0.77575803;0;0;
0;0;1;0.208333;0.057534199;0;0;0;1;0;
0;0;0;0.56;0.71515101;0;0;0;0;1;
0.229167;0.057534199;0;0;0;1;0;0;0;0;
0.55000001;0.71515101;0;0;0;0;1;0.25;0.057534199;0;
0;0;1;0;0;0;0;0.56999999;0.68484801;0;
0;0;0;1;0.27083299;0.057534199;0;0;0;1;
0;0;0;0;0.58999997;0.68484801;0;0;0;0;
1;0.29166701;0.057534199;0;0;0;1;0;0;0;
0;0.60000002;0.65454501;0;0;0;0;1;0.3125;0.057534199;
0;0;0;1;0;0;0;0;0.61000001;0.62424201;
0;0;0;0;1;0.33333299;0.057534199;0;0;0;
1;0;0;0;0;0.64999998;0.62424201;0;0;0;
0;1;0.35416701;0.057534199;0;0;0;1;0;0;
0;0;0.69;0.59393901;0;0;0;0;1;0.375;
0.057534199;0;0;0;1;0;0;0;0;0.69;
0.59393901;0;0;0;0;1;0.39583299;0.057534199;0;0;
0;1;0;0;0;0;0.70999998;0.59393901;0;0;
0;0;1;0.41666701;0.057534199;0;0;0;1;0;
0;0;0;0.72000003;0.59393901;0;0;0;0;1;
0.4375;0.057534199;0;0;0;1;0;0;0;0;
0.72000003;0.59393901;0;0;0;0;1;0.47916701;0.057534199;0;
0;0;1;0;0;0;0;0.73000002;0.59393901;0;
0;0;1;0;0.5;0.057534199;0;0;0;1;
0;0;0;0;0.75;0.59393901;0;0;0;1;
0;0.52083302;0.057534199;0;0;0;1;0;0;0;
0;0.76999998;0.59393901;0;0;0;1;0;0.54166698;0.057534199;
0;0;0;1;0;0;0;0;0.77999997;0.563636;
0;0;0;1;0;0.5625;0.057534199;0;0;0;
1;0;0;0;0;0.80000001;0.563636;0;0;0;
1;0;0.58333302;0.057534199;0;0;0;1;0;0;
0;0;0.77999997;0.563636;0;0;0;1;0;0.60416698;
0.057534199;0;0;0;1;0;0;0;0;0.79000002;
0.563636;0;0;0;1;0;0.625;0.057534199;0;0;
0;1;0;0;0;0;0.81999999;0.563636;0;0;
0;1;0;0.64583302;0.057534199;0;0;0;1;0;
0;0;0;0.81999999;0.563636;0;0;0;1;0;
0.66666698;0.057534199;0;0;0;1;0;0;0;0;
0.79000002;0.563636;0;0;0;1;0;0.6875;0.057534199;0;
0;0;1;0;0;0;0;0.81;0.563636;0;
0;0;1;0;0.70833302;0.057534199;0;0;0;1;
0;0;0;0;0.86000001;0.533333;0;0;0;1;
0;0.72916698;0.057534199;0;0;0;1;0;0;0;
0;0.88999999;0.533333;0;0;0;1;0;0.75;0.057534199;
0;0;0;1;0;0;0;0;0.88;0.533333;
0;0;0;1;0;0.77083302;0.057534199;0;0;0;
1;0;0;0;0;0.87;0.533333;0;0;0;
1;0;0.79166698;0.057534199;0;0;0;1;0;0;
0;0;0.80000001;0.563636;0;0;0;1;0;0.8125;
0.057534199;0;0;0;1;0;0;0;0;0.69999999;
0.62424201;0;0;0;1;0;0.83333302;0.057534199;0;0;
0;1;0;0;0;0;0.66000003;0.65454501;0;0;
0;1;0;0.85416698;0.057534199;0;0;0;1;0;
0;0;0;0.61000001;0.68484801;0;0;0;1;0;
0.875;0.057534199;0;0;0;1;0;0;0;0;
0.56999999;0.71515101;0;0;0;1;0;0.89583302;0.057534199;0;
0;0;1;0;0;0;0;0.55000001;0.71515101;0;
0;0;1;0;0.91666698;0.057534199;0;0;0;1;
0;0;0;0;0.56999999;0.71515101;0;0;0;1;
0;0.9375;0.057534199;0;0;0;1;0;0;0;
0;0.56;0.74545503;0;0;0;1;0;0.97916698;0.057534199;
0;0;0;1;0;0;0;0;0.51999998;0.74545503;
0;0;0;1;0;0.0208333;0.060274001;0;0;0;
0;1;0;0;0;0.54000002;0.74545503;0;0;0;
1;0;0.041666701;0.060274001;0;0;0;0;1;0;
0;0;0.56;0.74545503;0;0;0;1;0;0.0625;
0.060274001;0;0;0;0;1;0;0;0;0.54000002;
0.74545503;0;0;0;1;0;0.083333299;0.060274001;0;0;
0;0;1;0;0;0;0.50999999;0.77575803;0;0;
0;1;0;0.104167;0.060274001;0;0;0;0;1;
0;0;0;0.52999997;0.74545503;0;0;0;1;0;
0.125;0.060274001;0;0;0;0;1;0;0;0;
0.50999999;0.74545503;0;0;0;1;0;0.145833;0.060274001;0;
0;0;0;1;0;0;0;0.55000001;0.71515101;0;
0;0;1;0;0.166667;0.060274001;0;0;0;0;
1;0;0;0;0.52999997;0.77575803;0;0;0;1;
0;0.1875;0.060274001;0;0;0;0;1;0;0;
0;0.55000001;0.74545503;0;0;0;1;0;0.208333;0.060274001;
0;0;0;0;1;0;0;0;0.56;0.71515101;
0;0;0;1;0;0.229167;0.060274001;0;0;0;
0;1;0;0;0;0.56;0.71515101;0;0;0;
1;0;0.25;0.060274001;0;0;0;0;1;0;
0;0;0.56999999;0.71515101;0;0;0;1;0;0.27083299;
0.060274001;0;0;0;0;1;0;0;0;0.60000002;
0.68484801;0;0;0;1;0;0.29166701;0.060274001;0;0;
0;0;1;0;0;0;0.57999998;0.68484801;0;0;
0;1;0;0.3125;0.060274001;0;0;0;0;1;
0;0;0;0.58999997;0.68484801;0;0;0;1;0;
0.33333299;0.060274001;0;0;0;0;1;0;0;0;
0.63;0.65454501;0;0;0;1;0;0.35416701;0.060274001;0;
0;0;0;1;0;0;0;0.63999999;0.65454501;0;
0;0;1;0;0.375;0.060274001;0;0;0;0;
1;0;0;0;0.66000003;0.65454501;0;0;0;1;
0;0.39583299;0.060274001;0;0;0;0;1;0;0;
0;0.69;0.62424201;0;0;0;1;0;0.41666701;0.060274001;
0;0;0;0;1;0;0;0;0.72000003;0.62424201;
0;0;0;1;0;0.4375;0.060274001;0;0;0;
0;1;0;0;0;0.74000001;0.59393901;0;0;0;
1;0;0.47916701;0.060274001;0;0;0;0;1;0;
0;0;0.75;0.62424201;0;0;0;1;0;0.5;
0.060274001;0;0;0;0;1;0;0;0;0.75;
0.62424201;0;0;0;1;0;0.52083302;0.060274001;0;0;
0;0;1;0;0;0;0.69;0.62424201;0;0;
0;1;0;0.54166698;0.060274001;0;0;0;0;1;
0;0;0;0.70999998;0.59393901;0;0;0;1;0;
0.5625;0.060274001;0;0;0;0;1;0;0;0;
0.72000003;0.59393901;0;0;0;1;0;0.58333302;0.060274001;0;
0;0;0;1;0;0;0;0.75999999;0.563636;0;
0;0;1;0;0.60416698;0.060274001;0;0;0;0;
1;0;0;0;0.74000001;0.59393901;0;0;0;1;
0;0.625;0.060274001;0;0;0;0;1;0;0;
0;0.74000001;0.59393901;0;0;0;1;0;0.64583302;0.060274001;
0;0;0;0;1;0;0;0;0.74000001;0.59393901;
0;0;0;1;0;0.66666698;0.060274001;0;0;0;
0;1;0;0;0;0.74000001;0.59393901;0;0;0;
1;0;0.6875;0.060274001;0;0;0;0;1;0;
0;0;0.73000002;0.62424201;0;0;0;1;0;0.70833302;
0.060274001;0;0;0;0;1;0;0;0;0.75999999;
0.59393901;0;0;0;1;0;0.72916698;0.060274001;0;0;
0;0;1;0;0;0;0.82999998;0.59393901;0;0;
0;1;0;0.75;0.060274001;0;0;0;0;1;
0;0;0;0.88;0.563636;0;0;0;1;0;
0.77083302;0.060274001;0;0;0;0;1;0;0;0;
0.86000001;0.59393901;0;0;0;1;0;0.79166698;0.060274001;0;
0;0;0;1;0;0;0;0.86000001;0.59393901;0;
0;0;1;0;0.8125;0.060274001;0;0;0;0;
1;0;0;0;0.81;0.62424201;0;0;0;1;
0;0.83333302;0.060274001;0;0;0;0;1;0;0;
0;0.75;0.65454501;0;0;0;1;0;0.85416698;0.060274001;
0;0;0;0;1;0;0;0;0.69999999;0.68484801;
0;0;0;1;0;0.875;0.060274001;0;0;0;
0;1;0;0;0;0.69;0.68484801;0;0;0;
1;0;0.89583302;0.060274001;0;0;0;0;1;0;
0;0;0.66000003;0.71515101;0;0;0;1;0;0.91666698;
0.060274001;0;0;0;0;1;0;0;0;0.66000003;
0.71515101;0;0;0;1;0;0.9375;0.060274001;0;0;
0;0;1;0;0;0;0.63;0.71515101;0;0;
0;1;0;0.97916698;0.060274001;0;0;0;0;1;
0;0;0;0.58999997;0.74545503;0;0;0;1;0;
0;0.063013703;0;0;0;0;0;1;0;0;
0.57999998;0.77575803;0;0;0;1;0;0.0208333;0.063013703;0;
0;0;0;0;1;0;0;0.51999998;0.77575803;0;
0;0;1;0;0.041666701;0.063013703;0;0;0;0;
0;1;0;0;0.5;0.80606103;0;0;0;1;
0;0.0625;0.063013703;0;0;0;0;0;1;0;
0;0.54000002;0.80606103;0;0;0;1;0;0.083333299;0.063013703;
0;0;0;0;0;1;0;0;0.49000001;0.80606103;
0;0;0;1;0;0.104167;0.063013703;0;0;0;
0;0;1;0;0;0.49000001;0.80606103;0;0;0;
1;0;0.125;0.063013703;0;0;0;0;0;1;
0;0;0.47999999;0.80606103;0;0;0;1;0;0.145833;
0.063013703;0;0;0;0;0;1;0;0;0.50999999;
0.80606103;0;0;0;1;0;0.166667;0.063013703;0;0;
0;0;0;1;0;0;0.49000001;0.80606103;0;0;
0;1;0;0.1875;0.063013703;0;0;0;0;0;
1;0;0;0.54000002;0.77575803;0;0;0;1;0;
0.208333;0.063013703;0;0;0;0;0;1;0;0;
0.52999997;0.77575803;0;0;0;1;0;0.229167;0.063013703;0;
0;0;0;0;1;0;0;0.49000001;0.77575803;0;
0;0;1;0;0.25;0.063013703;0;0;0;0;
0;1;0;0;0.54000002;0.74545503;0;0;0;1;
0;0.27083299;0.063013703;0;0;0;0;0;1;0;
0;0.56999999;0.74545503;0;0;0;1;0;0.29166701;0.063013703;
0;0;0;0;0;1;0;0;0.60000002;0.71515101;
0;0;0;1;0;0.3125;0.063013703;0;0;0;
0;0;1;0;0;0.63;0.68484801;0;0;0;
1;0;0.33333299;0.063013703;0;0;0;0;0;1;
0;0;0.70999998;0.65454501;0;0;0;1;0;0.35416701;
0.063013703;0;0;0;0;0;1;0;0;0.74000001;
0.65454501;0;0;0;1;0;0.375;0.063013703;0;0;
0;0;0;1;0;0;0.79000002;0.62424201;0;0;
0;1;0;0.39583299;0.063013703;0;0;0;0;0;
1;0;0;0.81;0.62424201;0;0;0;1;0;
0.41666701;0.063013703;0;0;0;0;0;1;0;0;
0.81999999;0.62424201;0;0;0;1;0;0.4375;0.063013703;0;
0;0;0;0;1;0;0;0.85000002;0.62424201;0;
0;0;1;0;0.47916701;0.063013703;0;0;0;0;
0;1;0;0;0.88999999;0.59393901;0;0;0;1;
0;0.5;0.063013703;0;0;0;0;0;1;0;
0;0.89999998;0.59393901;0;0;0;1;0;0.52083302;0.063013703;
0;0;0;0;0;1;0;0;0.89999998;0.59393901;
0;0;0;1;0;0.54166698;0.063013703;0;0;0;
0;0;1;0;0;0.91000003;0.59393901;0;0;0;
1;0;0.5625;0.063013703;0;0;0;0;0;1;
0;0;0.88999999;0.59393901;0;0;0;1;0;0.58333302;
0.063013703;0;0;0;0;0;1;0;0;0.89999998;
0.59393901;0;0;0;1;0;0.60416698;0.063013703;0;0;
0;0;0;1;0;0;0.89999998;0.59393901;0;0;
0;1;0;0.625;0.063013703;0;0;0;0;0;
1;0;0;0.89999998;0.59393901;0;0;0;1;0;
0.64583302;0.063013703;0;0;0;0;0;1;0;0;
0.91000003;0.563636;0;0;0;1;0;0.66666698;0.063013703;0;
0;0;0;0;1;0;0;0.92000002;0.563636;0;
0;0;1;0;0.6875;0.063013703;0;0;0;0;
0;1;0;0;0.94;0.563636;0;0;0;1;
0;0.70833302;0.063013703;0;0;0;0;0;1;0;
0;0.94999999;0.50303;0;0;0;1;0;0.72916698;0.063013703;
0;0;0;0;0;1;0;0;0.93000001;0.533333;
0;0;0;1;0;0.75;0.063013703;0;0;0;
0;0;1;0;0;0.93000001;0.533333;0;0;0;
1;0;0.77083302;0.063013703;0;0;0;0;0;1;
0;0;0.91000003;0.563636;0;0;0;1;0;0.79166698;
0.063013703;0;0;0;0;0;1;0;0;0.85000002;
0.59393901;0;0;0;1;0;0.8125;0.063013703;0;0;
0;0;0;1;0;0;0.80000001;0.62424201;0;0;
0;1;0;0.83333302;0.063013703;0;0;0;0;0;
1;0;0;0.75;0.65454501;0;0;0;1;0;
0.85416698;0.063013703;0;0;0;0;0;1;0;0;
0.69999999;0.68484801;0;0;0;1;0;0.875;0.063013703;0;
0;0;0;0;1;0;0;0.68000001;0.68484801;0;
0;0;1;0;0.89583302;0.063013703;0;0;0;0;
0;1;0;0;0.63;0.74545503;0;0;0;1;
0;0.91666698;0.063013703;0;0;0;0;0;1;0;
0;0.56999999;0.74545503;0;0;0;1;0;0.9375;0.063013703;
0;0;0;0;0;1;0;0;0.55000001;0.74545503;
0;0;0;1;0;0.97916698;0.063013703;0;0;0;
0;0;1;0;0;0.56;0.77575803;0;0;0;
1;0;0;0.0657534;0;0;0;0;0;0;
1;0;0.50999999;0.80606103;0;0;0;1;0;0.0208333;
0.0657534;0;0;0;0;0;0;1;0;0.51999998;
0.80606103;0;0;0;1;0;0.041666701;0.0657534;0;0;
0;0;0;0;1;0;0.5;0.80606103;0;0;
0;1;0;0.0625;0.0657534;0;0;0;0;0;
0;1;0;0.50999999;0.80606103;0;0;0;1;0;
0.083333299;0.0657534;0;0;0;0;0;0;1;0;
0.5;0.80606103;0;0;0;1;0;0.104167;0.0657534;0;
0;0;0;0;0;1;0;0.49000001;0.83636397;0;
0;0;1;0;0.125;0.0657534;0;0;0;0;
0;0;1;0;0.5;0.80606103;0;0;0;1;
0;0.145833;0.0657534;0;0;0;0;0;0;1;
0;0.52999997;0.80606103;0;0;0;1;0;0.166667;0.0657534;
0;0;0;0;0;0;1;0;0.54000002;0.77575803;
0;0;0;1;0;0.1875;0.0657534;0;0;0;
0;0;0;1;0;0.56999999;0.77575803;0;0;0;
1;0;0.208333;0.0657534;0;0;0;0;0;0;
1;0;0.58999997;0.77575803;0;0;0;1;0;0.229167;
0.0657534;0;0;0;0;0;0;1;0;0.58999997;
0.74545503;0;0;0;1;0;0.25;0.0657534;0;0;
0;0;0;0;1;0;0.61000001;0.71515101;0;0;
0;1;0;0.27083299;0.0657534;0;0;0;0;0;
0;1;0;0.62;0.71515101;0;0;0;1;0;
0.29166701;0.0657534;0;0;0;0;0;0;1;0;
0.63999999;0.68484801;0;0;0;1;0;0.3125;0.0657534;0;
0;0;0;0;0;1;0;0.69999999;0.65454501;0;
0;0;1;0;0.33333299;0.0657534;0;0;0;0;
0;0;1;0;0.74000001;0.62424201;0;0;0;1;
0;0.35416701;0.0657534;0;0;0;0;0;0;1;
0;0.75999999;0.62424201;0;0;0;1;0;0.375;0.0657534;
0;0;0;0;0;0;1;0;0.74000001;0.62424201;
0;0;0;1;0;0.39583299;0.0657534;0;0;0;
0;0;0;1;0;0.75;0.62424201;0;0;0;
1;0;0.41666701;0.0657534;0;0;0;0;0;0;
1;0;0.75999999;0.59393901;0;0;0;1;0;0.4375;
0.0657534;0;0;0;0;0;0;1;0;0.77999997;
0.59393901;0;0;0;1;0;0.47916701;0.0657534;0;0;
0;0;0;0;1;0;0.77999997;0.563636;0;0;
0;1;0;0.5;0.0657534;0;0;0;0;0;
0;1;0;0.76999998;0.563636;0;0;0;1;0;
0.52083302;0.0657534;0;0;0;0;0;0;1;0;
0.80000001;0.563636;0;0;0;1;0;0.54166698;0.0657534;0;
0;0;0;0;0;1;0;0.81;0.563636;0;
0;0;1;0;0.5625;0.0657534;0;0;0;0;
0;0;1;0;0.81;0.563636;0;0;0;1;
0;0.58333302;0.0657534;0;0;0;0;0;0;1;
0;0.81;0.533333;0;0;0;1;0;0.60416698;0.0657534;
0;0;0;0;0;0;1;0;0.79000002;0.563636;
0;0;0;1;0;0.625;0.0657534;0;0;0;
0;0;0;1;0;0.76999998;0.563636;0;0;0;
1;0;0.64583302;0.0657534;0;0;0;0;0;0;
1;0;0.76999998;0.59393901;0;0;0;1;0;0.66666698;
0.0657534;0;0;0;0;0;0;1;0;0.75999999;
0.59393901;0;0;0;1;0;0.6875;0.0657534;0;0;
0;0;0;0;1;0;0.75999999;0.59393901;0;0;
0;1;0;0.70833302;0.0657534;0;0;0;0;0;
0;1;0;0.81;0.563636;0;0;0;1;0;
0.72916698;0.0657534;0;0;0;0;0;0;1;0;
0.80000001;0.563636;0;0;0;1;0;0.75;0.0657534;0;
0;0;0;0;0;1;0;0.81;0.563636;0;
0;0;1;0;0.77083302;0.0657534;0;0;0;0;
0;0;1;0;0.81999999;0.563636;0;0;0;1;
0;0.79166698;0.0657534;0;0;0;0;0;0;1;
0;0.81999999;0.563636;0;0;0;1;0;0.8125;0.0657534;
0;0;0;0;0;0;1;0;0.80000001;0.59393901;
0;0;0;1;0;0.83333302;0.0657534;0;0;0;
0;0;0;1;0;0.76999998;0.59393901;0;0;0;
1;0;0.85416698;0.0657534;0;0;0;0;0;0;
1;0;0.70999998;0.62424201;0;0;0;1;0;0.875;
0.0657534;0;0;0;0;0;0;1;0;0.64999998;
0.65454501;0;0;0;1;0;0.89583302;0.0657534;0;0;
0;0;0;0;1;0;0.60000002;0.65454501;0;0;
0;1;0;0.91666698;0.0657534;0;0;0;0;0;
0;1;0;0.55000001;0.68484801;0;0;0;1;0;
0.9375;0.0657534;0;0;0;0;0;0;1;0;
0.54000002;0.68484801;0;0;0;1;0;0.97916698;0.0657534;0;
0;0;0;0;0;1;0;0.5;0.71515101;0;
0;0;1;0;0;0.068493202;1;0;0;0;
0;0;0;0;0.50999999;0.71515101;0;0;0;1;
0;0.0208333;0.068493202;1;0;0;0;0;0;0;
0;0.5;0.71515101;0;0;0;1;0;0.041666701;0.068493202;
1;0;0;0;0;0;0;0;0.49000001;0.71515101;
0;0;0;1;0;0.0625;0.068493202;1;0;0;
0;0;0;0;0;0.47999999;0.77575803;0;0;0;
1;0;0.083333299;0.068493202;1;0;0;0;0;0;
0;0;0.5;0.74545503;0;0;0;1;0;0.104167;
0.068493202;1;0;0;0;0;0;0;0;0.46000001;
0.77575803;0;0;0;1;0;0.125;0.068493202;1;0;
0;0;0;0;0;0;0.46000001;0.77575803;0;0;
0;1;0;0.145833;0.068493202;1;0;0;0;0;
0;0;0;0.44;0.80606103;0;0;0;1;0;
0.166667;0.068493202;1;0;0;0;0;0;0;0;
0.43000001;0.77575803;0;0;0;1;0;0.1875;0.068493202;1;
0;0;0;0;0;0;0;0.46000001;0.77575803;0;
0;0;1;0;0.208333;0.068493202;1;0;0;0;
0;0;0;0;0.47;0.74545503;0;0;0;1;
0;0.229167;0.068493202;1;0;0;0;0;0;0;
0;0.44;0.77575803;0;0;0;1;0;0.25;0.068493202;
1;0;0;0;0;0;0;0;0.52999997;0.71515101;
0;0;0;1;0;0.27083299;0.068493202;1;0;0;
0;0;0;0;0;0.57999998;0.71515101;0;0;0;
1;0;0.29166701;0.068493202;1;0;0;0;0;0;
0;0;0.63999999;0.71515101;0;0;0;1;0;0.3125;
0.068493202;1;0;0;0;0;0;0;0;0.67000002;
0.68484801;0;0;0;1;0;0.33333299;0.068493202;1;0;
0;0;0;0;0;0;0.73000002;0.65454501;0;0;
0;1;0;0.35416701;0.068493202;1;0;0;0;0;
0;0;0;0.75;0.65454501;0;0;0;1;0;
0.375;0.068493202;1;0;0;0;0;0;0;0;
0.79000002;0.62424201;0;0;0;1;0;0.39583299;0.068493202;1;
0;0;0;0;0;0;0;0.81999999;0.59393901;0;
0;0;1;0;0.41666701;0.068493202;1;0;0;0;
0;0;0;0;0.82999998;0.62424201;0;0;0;1;
0;0.4375;0.068493202;1;0;0;0;0;0;0;
0;0.82999998;0.62424201;0;0;0;1;0;0.47916701;0.068493202;
1;0;0;0;0;0;0;0;0.85000002;0.62424201;
0;0;0;0;1;0.5;0.068493202;1;0;0;
0;0;0;0;0;0.88;0.59393901;0;0;0;
0;1;0.52083302;0.068493202;1;0;0;0;0;0;
0;0;0.88999999;0.59393901;0;0;0;0;1;0.54166698;
0.068493202;1;0;0;0;0;0;0;0;0.87;
0.59393901;0;0;0;0;1;0.5625;0.068493202;1;0;
0;0;0;0;0;0;0.88;0.59393901;0;0;
0;0;1;0.58333302;0.068493202;1;0;0;0;0;
0;0;0;0.88999999;0.59393901;0;0;0;0;1;
0.60416698;0.068493202;1;0;0;0;0;0;0;0;
0.88;0.59393901;0;0;0;0;1;0.625;0.068493202;1;
0;0;0;0;0;0;0;0.88999999;0.59393901;0;
0;0;0;1;0.64583302;0.068493202;1;0;0;0;
0;0;0;0;0.94;0.563636;0;0;0;0;
1;0.66666698;0.068493202;1;0;0;0;0;0;0;
0;0.94;0.563636;0;0;0;0;1;0.6875;0.068493202;
1;0;0;0;0;0;0;0;0.92000002;0.563636;
0;0;0;0;1;0.70833302;0.068493202;1;0;0;
0;0;0;0;0;0.92000002;0.563636;0;0;0;
0;1;0.72916698;0.068493202;1;0;0;0;0;0;
0;0;0.91000003;0.563636;0;0;0;0;1;0.75;
0.068493202;1;0;0;0;0;0;0;0;0.91000003;
0.563636;0;0;0;0;1;0.77083302;0.068493202;1;0;
0;0;0;0;0;0;0.89999998;0.59393901;0;0;
0;0;1;0.79166698;0.068493202;1;0;0;0;0;
0;0;0;0.87;0.59393901;0;0;0;0;1;
0.8125;0.068493202;1;0;0;0;0;0;0;0;
0.81999999;0.62424201;0;0;0;0;1;0.83333302;0.068493202;1;
0;0;0;0;0;0;0;0.81999999;0.62424201;0;
0;0;0;1;0.85416698;0.068493202;1;0;0;0;
0;0;0;0;0.72000003;0.65454501;0;0;0;0;
1;0.875;0.068493202;1;0;0;0;0;0;0;
0;0.67000002;0.71515101;0;0;0;0;1;0.89583302;0.068493202;
1;0;0;0;0;0;0;0;0.60000002;0.71515101;
0;0;0;0;1;0.91666698;0.068493202;1;0;0;
0;0;0;0;0;0.56;0.71515101;0;0;0;
0;1;0.9375;0.068493202;1;0;0;0;0;0;
0;0;0.55000001;0.71515101;0;0;0;0;1;0.97916698;
0.068493202;1;0;0;0;0;0;0;0;0.50999999;
0.74545503;0;0;0;0;1;0;0.0712329;0;1;
0;0;0;0;0;0;0.5;0.77575803;0;0;
0;0;1;0.0208333;0.0712329;0;1;0;0;0;
0;0;0;0.44999999;0.80606103;0;0;0;0;1;
0.041666701;0.0712329;0;1;0;0;0;0;0;0;
0.44;0.80606103;0;0;0;0;1;0.0625;0.0712329;0;
1;0;0;0;0;0;0;0.46000001;0.77575803;0;
0;0;0;1;0.083333299;0.0712329;0;1;0;0;
0;0;0;0;0.49000001;0.77575803;0;0;0;0;
1;0.104167;0.0712329;0;1;0;0;0;0;0;
0;0.47999999;0.74545503;0;0;0;0;1;0.125;0.0712329;
0;1;0;0;0;0;0;0;0.46000001;0.77575803;
0;0;0;0;1;0.145833;0.0712329;0;1;0;
0;0;0;0;0;0.44999999;0.77575803;0;0;0;
0;1;0.166667;0.0712329;0;1;0;0;0;0;
0;0;0.44999999;0.77575803;0;0;0;0;1;0.1875;
0.0712329;0;1;0;0;0;0;0;0;0.47;
0.77575803;0;0;0;0;1;0.208333;0.0712329;0;1;
0;0;0;0;0;0;0.61000001;0.71515101;0;0;
0;0;1;0.229167;0.0712329;0;1;0;0;0;
0;0;0;0.67000002;0.71515101;0;0;0;0;1;
0.25;0.0712329;0;1;0;0;0;0;0;0;
0.58999997;0.74545503;0;0;0;0;1;0.27083299;0.0712329;0;
1;0;0;0;0;0;0;0.52999997;0.74545503;0;
0;0;0;1;0.29166701;0.0712329;0;1;0;0;
0;0;0;0;0.51999998;0.77575803;0;0;0;0;
1;0.3125;0.0712329;0;1;0;0;0;0;0;
0;0.61000001;0.71515101;0;0;0;0;1;0.33333299;0.0712329;
0;1;0;0;0;0;0;0;0.63;0.71515101;
0;0;0;0;1;0.35416701;0.0712329;0;1;0;
0;0;0;0;0;0.72000003;0.71515101;0;0;0;
0;1;0.375;0.0712329;0;1;0;0;0;0;
0;0;0.73000002;0.68484801;0;0;0;0;1;0.39583299;
0.0712329;0;1;0;0;0;0;0;0;0.80000001;
0.65454501;0;0;0;0;1;0.41666701;0.0712329;0;1;
0;0;0;0;0;0;0.81999999;0.65454501;0;0;
0;0;1;0.4375;0.0712329;0;1;0;0;0;
0;0;0;0.85000002;0.62424201;0;0;0;0;1;
0.47916701;0.0712329;0;1;0;0;0;0;0;0;
0.86000001;0.62424201;0;0;1;0;0;0.5;0.0712329;0;
1;0;0;0;0;0;0;0.82999998;0.62424201;0;
0;1;0;0;0.52083302;0.0712329;0;1;0;0;
0;0;0;0;0.81999999;0.62424201;0;0;1;0;
0;0.54166698;0.0712329;0;1;0;0;0;0;0;
0;0.80000001;0.65454501;0;0;1;0;0;0.5625;0.0712329;
0;1;0;0;0;0;0;0;0.80000001;0.65454501;
0;0;1;0;0;0.58333302;0.0712329;0;1;0;
0;0;0;0;0;0.83999997;0.62424201;0;0;1;
0;0;0.60416698;0.0712329;0;1;0;0;0;0;
0;0;0.85000002;0.59393901;0;0;1;0;0;0.625;
0.0712329;0;1;0;0;0;0;0;0;0.82999998;
0.59393901;0;0;1;0;0;0.64583302;0.0712329;0;1;
0;0;0;0;0;0;0.87;0.59393901;0;0;
1;0;0;0.66666698;0.0712329;0;1;0;0;0;
0;0;0;0.85000002;0.59393901;0;0;1;0;0;
0.6875;0.0712329;0;1;0;0;0;0;0;0;
0.85000002;0.59393901;0;0;1;0;0;0.70833302;0.0712329;0;
1;0;0;0;0;0;0;0.85000002;0.62424201;0;
0;1;0;0;0.72916698;0.0712329;0;1;0;0;
0;0;0;0;0.81;0.62424201;0;0;1;0;
0;0.75;0.0712329;0;1;0;0;0;0;0;
0;0.87;0.59393901;0;0;1;0;0;0.77083302;0.0712329;
0;1;0;0;0;0;0;0;0.87;0.59393901;
0;0;1;0;0;0.79166698;0.0712329;0;1;0;
0;0;0;0;0;0.85000002;0.59393901;0;0;1;
0;0;0.8125;0.0712329;0;1;0;0;0;0;
0;0;0.81999999;0.62424201;0;0;1;0;0;0.83333302;
0.0712329;0;1;0;0;0;0;0;0;0.74000001;
0.65454501;0;0;1;0;0;0.85416698;0.0712329;0;1;
0;0;0;0;0;0;0.66000003;0.68484801;0;0;
1;0;0;0.875;0.0712329;0;1;0;0;0;
0;0;0;0.69;0.68484801;0;0;1;0;0;
0.89583302;0.0712329;0;1;0;0;0;0;0;0;
0.62;0.74545503;0;0;1;0;0;0.91666698;0.0712329;0;
1;0;0;0;0;0;0;0.55000001;0.80606103;0;
0;1;0;0;0.9375;0.0712329;0;1;0;0;
0;0;0;0;0.57999998;0.74545503;0;0;1;0;
0;0.97916698;0.0712329;0;1;0;0;0;0;0;
0;0.56;0.77575803;0;0;1;0;0;0;0.073972598;
0;0;1;0;0;0;0;0;0.58999997;0.77575803;
0;0;1;0;0;0.041666701;0.073972598;0;0;1;
0;0;0;0;0;0.58999997;0.80606103;0;0;1;
0;0;0.0625;0.073972598;0;0;1;0;0;0;
0;0;0.56999999;0.77575803;0;0;1;0;0;0.083333299;
0.073972598;0;0;1;0;0;0;0;0;0.57999998;
0.77575803;0;0;1;0;0;0.104167;0.073972598;0;0;
1;0;0;0;0;0;0.55000001;0.80606103;0;0;
1;0;0;0.125;0.073972598;0;0;1;0;0;
0;0;0;0.67000002;0.74545503;0;0;1;0;0;
0.145833;0.073972598;0;0;1;0;0;0;0;0;
0.72000003;0.71515101;0;0;1;0;0;0.166667;0.073972598;0;
0;1;0;0;0;0;0;0.69;0.74545503;0;
0;1;0;0;0.1875;0.073972598;0;0;1;0;
0;0;0;0;0.60000002;0.77575803;0;0;1;0;
0;0.208333;0.073972598;0;0;1;0;0;0;0;
0;0.55000001;0.77575803;0;0;1;0;0;0.229167;0.073972598;
0;0;1;0;0;0;0;0;0.5;0.80606103;
0;0;1;0;0;0.25;0.073972598;0;0;1;
0;0;0;0;0;0.49000001;0.80606103;0;0;1;
0;0;0.27083299;0.073972598;0;0;1;0;0;0;
0;0;0.49000001;0.77575803;0;0;1;0;0;0.29166701;
0.073972598;0;0;1;0;0;0;0;0;0.51999998;
0.74545503;0;0;1;0;0;0.3125;0.073972598;0;0;
1;0;0;0;0;0;0.55000001;0.71515101;0;0;
1;0;0;0.33333299;0.073972598;0;0;1;0;0;
0;0;0;0.61000001;0.68484801;0;0;1;0;0;
0.35416701;0.073972598;0;0;1;0;0;0;0;0;
0.63;0.68484801;0;0;1;0;0;0.375;0.073972598;0;
0;1;0;0;0;0;0;0.66000003;0.65454501;0;
0;1;0;0;0.39583299;0.073972598;0;0;1;0;
0;0;0;0;0.68000001;0.65454501;0;0;1;0;
0;0.41666701;0.073972598;0;0;1;0;0;0;0;
0;0.75;0.62424201;0;0;1;0;0;0.4375;0.073972598;
0;0;1;0;0;0;0;0;0.81999999;0.59393901;
0;0;1;0;0;0.47916701;0.073972598;0;0;1;
0;0;0;0;0;0.83999997;0.59393901;0;0;0;
0;1;0.5;0.073972598;0;0;1;0;0;0;
0;0;0.85000002;0.59393901;0;0;0;0;1;0.52083302;
0.073972598;0;0;1;0;0;0;0;0;0.82999998;
0.59393901;0;0;0;0;1;0.54166698;0.073972598;0;0;
1;0;0;0;0;0;0.86000001;0.59393901;0;0;
0;0;1;0.5625;0.073972598;0;0;1;0;0;
0;0;0;0.86000001;0.59393901;0;0;0;0;1;
0.58333302;0.073972598;0;0;1;0;0;0;0;0;
0.87;0.59393901;0;0;0;0;1;0.60416698;0.073972598;0;
0;1;0;0;0;0;0;0.88999999;0.59393901;0;
0;0;0;1;0.625;0.073972598;0;0;1;0;
0;0;0;0;0.88999999;0.563636;0;0;0;0;
1;0.64583302;0.073972598;0;0;1;0;0;0;0;
0;0.88999999;0.563636;0;0;0;0;1;0.66666698;0.073972598;
0;0;1;0;0;0;0;0;0.88;0.59393901;
0;0;0;0;1;0.6875;0.073972598;0;0;1;
0;0;0;0;0;0.88999999;0.563636;0;0;0;
0;1;0.70833302;0.073972598;0;0;1;0;0;0;
0;0;0.88999999;0.59393901;0;0;0;0;1;0.72916698;
0.073972598;0;0;1;0;0;0;0;0;0.88999999;
0.563636;0;0;0;0;1;0.75;0.073972598;0;0;
1;0;0;0;0;0;0.88999999;0.563636;0;0;
0;0;1;0.77083302;0.073972598;0;0;1;0;0;
0;0;0;0.87;0.563636;0;0;0;0;1;
0.79166698;0.073972598;0;0;1;0;0;0;0;0;
0.83999997;0.59393901;0;0;0;0;1;0.8125;0.073972598;0;
0;1;0;0;0;0;0;0.75999999;0.65454501;0;
0;0;0;1;0.83333302;0.073972598;0;0;1;0;
0;0;0;0;0.68000001;0.68484801;0;0;0;0;
1;0.85416698;0.073972598;0;0;1;0;0;0;0;
0;0.67000002;0.71515101;0;0;0;0;1;0.875;0.073972598;
0;0;1;0;0;0;0;0;0.62;0.74545503;
0;0;0;0;1;0.89583302;0.073972598;0;0;1;
0;0;0;0;0;0.58999997;0.74545503;0;0;0;
0;1;0.91666698;0.073972598;0;0;1;0;0;0;
0;0;0.58999997;0.77575803;0;0;0;0;1;0.9375;
0.073972598;0;0;1;0;0;0;0;0;0.56999999;
0.80606103;0;0;1;0;0;0.97916698;0.073972598;0;0;
1;0;0;0;0;0;0.60000002;0.77575803;0;0;
1;0;0;0;0.076712303;0;0;0;1;0;
0;0;0;0.52999997;0.80606103;0;0;1;0;0;
0.0208333;0.076712303;0;0;0;1;0;0;0;0;
0.5;0.86666697;0;0;1;0;0;0.041666701;0.076712303;0;
0;0;1;0;0;0;0;0.56999999;0.80606103;0;
0;1;0;0;0.0625;0.076712303;0;0;0;1;
0;0;0;0;0.55000001;0.80606103;0;0;1;0;
0;0.083333299;0.076712303;0;0;0;1;0;0;0;
0;0.54000002;0.80606103;0;0;1;0;0;0.104167;0.076712303;
0;0;0;1;0;0;0;0;0.5;0.86666697;
0;0;1;0;0;0.125;0.076712303;0;0;0;
1;0;0;0;0;0.47999999;0.86666697;0;0;1;
0;0;0.145833;0.076712303;0;0;0;1;0;0;
0;0;0.47999999;0.86666697;0;0;1;0;0;0.166667;
0.076712303;0;0;0;1;0;0;0;0;0.50999999;
0.83636397;0;0;0;0;1;0.1875;0.076712303;0;0;
0;1;0;0;0;0;0.5;0.83636397;0;0;
0;0;1;0.208333;0.076712303;0;0;0;1;0;
0;0;0;0.56999999;0.80606103;0;0;0;0;1;
0.229167;0.076712303;0;0;0;1;0;0;0;0;
0.58999997;0.80606103;0;0;0;0;1;0.25;0.076712303;0;
0;0;1;0;0;0;0;0.58999997;0.77575803;0;
0;0;0;1;0.27083299;0.076712303;0;0;0;1;
0;0;0;0;0.63;0.74545503;0;0;0;0;
1;0.29166701;0.076712303;0;0;0;1;0;0;0;
0;0.64999998;0.74545503;0;0;0;0;1;0.3125;0.076712303;
0;0;0;1;0;0;0;0;0.69999999;0.71515101;
0;0;0;0;1;0.33333299;0.076712303;0;0;0;
1;0;0;0;0;0.72000003;0.68484801;0;0;0;
0;1;0.35416701;0.076712303;0;0;0;1;0;0;
0;0;0.77999997;0.65454501;0;0;0;0;1;0.375;
0.076712303;0;0;0;1;0;0;0;0;0.79000002;
0.65454501;0;0;0;0;1;0.39583299;0.076712303;0;0;
0;1;0;0;0;0;0.81999999;0.62424201;0;0;
0;0;1;0.41666701;0.076712303;0;0;0;1;0;
0;0;0;0.82999998;0.62424201;0;0;0;0;1;
0.4375;0.076712303;0;0;0;1;0;0;0;0;
0.82999998;0.62424201;0;0;0;0;1;0.47916701;0.076712303;0;
0;0;1;0;0;0;0;0.85000002;0.62424201;0;
0;1;0;0;0.5;0.076712303;0;0;0;1;
0;0;0;0;0.88999999;0.59393901;0;0;1;0;
0;0.52083302;0.076712303;0;0;0;1;0;0;0;
0;0.85000002;0.59393901;0;0;1;0;0;0.54166698;0.076712303;
0;0;0;1;0;0;0;0;0.86000001;0.59393901;
0;0;1;0;0;0.5625;0.076712303;0;0;0;
1;0;0;0;0;0.88999999;0.59393901;0;0;1;
0;0;0.58333302;0.076712303;0;0;0;1;0;0;
0;0;0.88999999;0.59393901;0;0;1;0;0;0.60416698;
0.076712303;0;0;0;1;0;0;0;0;0.91000003;
0.563636;0;0;1;0;0;0.625;0.076712303;0;0;
0;1;0;0;0;0;0.91000003;0.59393901;0;0;
1;0;0;0.64583302;0.076712303;0;0;0;1;0;
0;0;0;0.91000003;0.59393901;0;0;1;0;0;
0.66666698;0.076712303;0;0;0;1;0;0;0;0;
0.92000002;0.59393901;0;0;1;0;0;0.6875;0.076712303;0;
0;0;1;0;0;0;0;0.91000003;0.59393901;0;
0;1;0;0;0.70833302;0.076712303;0;0;0;1;
0;0;0;0;0.88999999;0.59393901;0;0;1;0;
0;0.72916698;0.076712303;0;0;0;1;0;0;0;
0;0.92000002;0.563636;0;0;1;0;0;0.75;0.076712303;
0;0;0;1;0;0;0;0;0.91000003;0.59393901;
0;0;1;0;0;0.77083302;0.076712303;0;0;0;
1;0;0;0;0;0.87;0.62424201;0;0;1;
0;0;0.79166698;0.076712303;0;0;0;1;0;0;
0;0;0.83999997;0.65454501;0;0;1;0;0;0.8125;
0.076712303;0;0;0;1;0;0;0;0;0.75999999;
0.71515101;0;0;1;0;0;0.83333302;0.076712303;0;0;
0;1;0;0;0;0;0.74000001;0.71515101;0;0;
1;0;0;0.85416698;0.076712303;0;0;0;1;0;
0;0;0;0.72000003;0.71515101;0;0;1;0;0;
0.875;0.076712303;0;0;0;1;0;0;0;0;
0.69;0.71515101;0;0;1;0;0;0.89583302;0.076712303;0;
0;0;1;0;0;0;0;0.68000001;0.74545503;0;
0;1;0;0;0.91666698;0.076712303;0;0;0;1;
0;0;0;0;0.64999998;0.74545503;0;0;1;0;
0;0.9375;0.076712303;0;0;0;1;0;0;0;
0;0.61000001;0.77575803;0;0;1;0;0;0.97916698;0.076712303;
0;0;0;1;0;0;0;0;0.55000001;0.83636397;
0;0;0;0;1;0;0.079452097;0;0;0;
0;1;0;0;0;0.50999999;0.83636397;0;0;0;
0;1;0.0208333;0.079452097;0;0;0;0;1;0;
0;0;0.56;0.80606103;0;0;0;0;1;0.041666701;
0.079452097;0;0;0;0;1;0;0;0;0.58999997;
0.80606103;0;0;0;0;1;0.0625;0.079452097;0;0;
0;0;1;0;0;0;0.52999997;0.86666697;0;0;
0;0;1;0.083333299;0.079452097;0;0;0;0;1;
0;0;0;0.47;0.86666697;0;0;0;0;1;
0.104167;0.079452097;0;0;0;0;1;0;0;0;
0.51999998;0.83636397;0;0;0;0;1;0.125;0.079452097;0;
0;0;0;1;0;0;0;0.54000002;0.83636397;0;
0;0;0;1;0.145833;0.079452097;0;0;0;0;
1;0;0;0;0.55000001;0.83636397;0;0;0;0;
1;0.166667;0.079452097;0;0;0;0;1;0;0;
0;0.52999997;0.86666697;0;0;0;0;1;0.1875;0.079452097;
0;0;0;0;1;0;0;0;0.58999997;0.80606103;
0;0;0;0;1;0.208333;0.079452097;0;0;0;
0;1;0;0;0;0.55000001;0.80606103;0;0;0;
0;1;0.229167;0.079452097;0;0;0;0;1;0;
0;0;0.60000002;0.77575803;0;0;0;0;1;0.25;
0.079452097;0;0;0;0;1;0;0;0;0.61000001;
0.77575803;0;0;0;0;1;0.27083299;0.079452097;0;0;
0;0;1;0;0;0;0.62;0.77575803;0;0;
0;0;1;0.29166701;0.079452097;0;0;0;0;1;
0;0;0;0.67000002;0.71515101;0;0;0;0;1;
0.3125;0.079452097;0;0;0;0;1;0;0;0;
0.73000002;0.71515101;0;0;0;0;1;0.33333299;0.079452097;0;
0;0;0;1;0;0;0;0.77999997;0.68484801;0;
0;0;0;1;0.35416701;0.079452097;0;0;0;0;
1;0;0;0;0.77999997;0.68484801;0;0;0;0;
1;0.375;0.079452097;0;0;0;0;1;0;0;
0;0.75;0.68484801;0;0;0;0;1;0.39583299;0.079452097;
0;0;0;0;1;0;0;0;0.82999998;0.68484801;
0;0;0;0;1;0.41666701;0.079452097;0;0;0;
0;1;0;0;0;0.85000002;0.68484801;0;0;0;
0;1;0.4375;0.079452097;0;0;0;0;1;0;
0;0;0.85000002;0.68484801;0;0;0;0;1;0.47916701;
0.079452097;0;0;0;0;1;0;0;0;0.85000002;
0.68484801;0;0;0;0;1;0.5;0.079452097;0;0;
0;0;1;0;0;0;0.81;0.68484801;0;0;
0;0;1;0.52083302;0.079452097;0;0;0;0;1;
0;0;0;0.82999998;0.68484801;0;0;0;0;1;
0.54166698;0.079452097;0;0;0;0;1;0;0;0;
0.83999997;0.68484801;0;0;0;0;1;0.5625;0.079452097;0;
0;0;0;1;0;0;0;0.86000001;0.68484801;0;
0;0;0;1;0.58333302;0.079452097;0;0;0;0;
1;0;0;0;0.86000001;0.65454501;0;0;0;0;
1;0.60416698;0.079452097;0;0;0;0;1;0;0;
0;0.89999998;0.65454501;0;0;0;0;1;0.625;0.079452097;
0;0;0;0;1;0;0;0;0.94;0.65454501;
0;0;0;0;1;0.64583302;0.079452097;0;0;0;
0;1;0;0;0;0.93000001;0.65454501;0;0;0;
0;1;0.66666698;0.079452097;0;0;0;0;1;0;
0;0;0.94;0.65454501;0;0;0;0;1;0.6875;
0.079452097;0;0;0;0;1;0;0;0;0.93000001;
0.65454501;0;0;0;0;1;0.70833302;0.079452097;0;0;
0;0;1;0;0;0;0.94;0.65454501;0;0;
0;0;1;0.72916698;0.079452097;0;0;0;0;1;
0;0;0;0.97000003;0.62424201;0;0;0;0;1;
0.75;0.079452097;0;0;0;0;1;0;0;0;
0.98000002;0.62424201;0;0;1;0;0;0.77083302;0.079452097;0;
0;0;0;1;0;0;0;0.95999998;0.62424201;0;
0;1;0;0;0.79166698;0.079452097;0;0;0;0;
1;0;0;0;0.95999998;0.62424201;0;0;1;0;
0;0.8125;0.079452097;0;0;0;0;1;0;0;
0;0.95999998;0.62424201;0;0;1;0;0;0.83333302;0.079452097;
0;0;0;0;1;0;0;0;0.95999998;0.62424201;
0;0;1;0;0;0.85416698;0.079452097;0;0;0;
0;1;0;0;0;0.97000003;0.62424201;0;0;1;
0;0;0.875;0.079452097;0;0;0;0;1;0;
0;0;0.99000001;0.62424201;0;0;1;0;0;0.89583302;
0.079452097;0;0;0;0;1;0;0;0;0.99000001;
0.62424201;0;0;1;0;0;0.91666698;0.079452097;0;0;
0;0;1;0;0;0;0.98000002;0.65454501;0;0;
1;0;0;0.9375;0.079452097;0;0;0;0;1;
0;0;0;0.94999999;0.65454501;0;0;1;0;0;
0.97916698;0.079452097;0;0;0;0;1;0;0;0;
0.83999997;0.68484801;0;0;1;0;0;0;0.082191803;0;
0;0;0;0;1;0;0;0.83999997;0.68484801;0;
0;1;0;0;0.0208333;0.082191803;0;0;0;0;
0;1;0;0;0.76999998;0.74545503;0;0;1;0;
0;0.041666701;0.082191803;0;0;0;0;0;1;0;
0;0.74000001;0.74545503;0;0;1;0;0;0.0625;0.082191803;
0;0;0;0;0;1;0;0;0.73000002;0.74545503;
0;0;1;0;0;0.104167;0.082191803;0;0;0;
0;0;1;0;0;0.72000003;0.74545503;0;0;1;
0;0;0.125;0.082191803;0;0;0;0;0;1;
0;0;0.73000002;0.74545503;0;0;1;0;0;0.145833;
0.082191803;0;0;0;0;0;1;0;0;0.69999999;
0.74545503;0;0;1;0;0;0.166667;0.082191803;0;0;
0;0;0;1;0;0;0.67000002;0.74545503;0;0;
1;0;0;0.1875;0.082191803;0;0;0;0;0;
1;0;0;0.69999999;0.74545503;0;0;1;0;0;
0.208333;0.082191803;0;0;0;0;0;1;0;0;
0.66000003;0.74545503;0;0;1;0;0;0.229167;0.082191803;0;
0;0;0;0;1;0;0;0.69;0.74545503;0;
0;1;0;0;0.25;0.082191803;0;0;0;0;
0;1;0;0;0.75;0.71515101;0;0;1;0;
0;0.27083299;0.082191803;0;0;0;0;0;1;0;
0;0.76999998;0.71515101;0;0;1;0;0;0.29166701;0.082191803;
0;0;0;0;0;1;0;0;0.75999999;0.68484801;
0;0;1;0;0;0.3125;0.082191803;0;0;0;
0;0;1;0;0;0.80000001;0.68484801;0;0;1;
0;0;0.33333299;0.082191803;0;0;0;0;0;1;
0;0;0.81;0.68484801;0;0;1;0;0;0.35416701;
0.082191803;0;0;0;0;0;1;0;0;0.81;
0.68484801;0;0;1;0;0;0.375;0.082191803;0;0;
0;0;0;1;0;0;0.82999998;0.65454501;0;0;
1;0;0;0.39583299;0.082191803;0;0;0;0;0;
1;0;0;0.83999997;0.65454501;0;0;1;0;0;
0.41666701;0.082191803;0;0;0;0;0;1;0;0;
0.85000002;0.65454501;0;0;1;0;0;0.4375;0.082191803;0;
0;0;0;0;1;0;0;0.86000001;0.65454501;0;
0;1;0;0;0.47916701;0.082191803;0;0;0;0;
0;1;0;0;0.88;0.65454501;0;0;1;0;
0;0.5;0.082191803;0;0;0;0;0;1;0;
0;0.88;0.65454501;0;0;1;0;0;0.52083302;0.082191803;
0;0;0;0;0;1;0;0;0.89999998;0.65454501;
0;0;1;0;0;0.54166698;0.082191803;0;0;0;
0;0;1;0;0;0.88999999;0.65454501;0;0;1;
0;0;0.5625;0.082191803;0;0;0;0;0;1;
0;0;0.91000003;0.62424201;0;0;1;0;0;0.58333302;
0.082191803;0;0;0;0;0;1;0;0;0.91000003;
0.62424201;0;0;1;0;0;0.60416698;0.082191803;0;0;
0;0;0;1;0;0;0.89999998;0.62424201;0;0;
1;0;0;0.625;0.082191803;0;0;0;0;0;
1;0;0;0.88999999;0.65454501;0;0;1;0;0;
0.64583302;0.082191803;0;0;0;0;0;1;0;0;
0.91000003;0.62424201;0;0;1;0;0;0.66666698;0.082191803;0;
0;0;0;0;1;0;0;0.88999999;0.65454501;0;
0;1;0;0;0.6875;0.082191803;0;0;0;0;
0;1;0;0;0.89999998;0.65454501;0;0;1;0;
0;0.70833302;0.082191803;0;0;0;0;0;1;0;
0;0.89999998;0.65454501;0;0;1;0;0;0.72916698;0.082191803;
0;0;0;0;0;1;0;0;0.88999999;0.65454501;
0;0;1;0;0;0.75;0.082191803;0;0;0;
0;0;1;0;0;0.88;0.65454501;0;0;1;
0;0;0.77083302;0.082191803;0;0;0;0;0;1;
0;0;0.86000001;0.65454501;0;0;1;0;0;0.79166698;
0.082191803;0;0;0;0;0;1;0;0;0.86000001;
0.65454501;0;0;1;0;0;0.8125;0.082191803;0;0;
0;0;0;1;0;0;0.88;0.65454501;0;0;
1;0;0;0.83333302;0.082191803;0;0;0;0;0;
1;0;0;0.89999998;0.65454501;0;0;1;0;0;
0.85416698;0.082191803;0;0;0;0;0;1;0;0;
0.86000001;0.68484801;0;0;1;0;0;0.875;0.082191803;0;
0;0;0;0;1;0;0;0.76999998;0.71515101;0;
0;1;0;0;0.89583302;0.082191803;0;0;0;0;
0;1;0;0;0.75;0.71515101;0;0;1;0;
0;0.91666698;0.082191803;0;0;0;0;0;1;0;
0;0.74000001;0.68484801;0;0;1;0;0;0.9375;0.082191803;
0;0;0;0;0;1;0;0;0.86000001;0.65454501;
0;0;1;0;0;0.97916698;0.082191803;0;0;0;
0;0;1;0;0;0.81;0.68484801;0;0;1;
0;0;      };
     };
     float_Data @[2] {
      name="Output";
      col_flags=SAVE_DATA|AUTO_WIDTH;
      is_matrix=1;
      cell_geom{ 1;1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [2] ;;      };
      width=6;
      matrix_col_width=10;
      ar {
       name="ar";
      [1 1 2826] 0.075535998;0.078441396;0.0798731;0.077919699;0.077082202;0.077015601;0.075736299;0.077775203;0.083882101;0.069252104;
0.070019796;0.072891697;0.096898302;0.113078;0.116101;0.125506;0.133745;0.1332;0.140063;0.13263699;
0.132093;0.13730399;0.13366;0.13262001;0.133514;0.13566899;0.130182;0.131044;0.13226201;0.134955;
0.132163;0.136861;0.129439;0.120205;0.109709;0.106065;0.085323602;0.068367697;0.069875002;0.073856197;
0.072016403;0.073045596;0.0731773;0.076069601;0.0791068;0.076216102;0.078967899;0.080328003;0.0799613;0.085243396;
0.083949201;0.086576298;0.091949299;0.089491598;0.087252297;0.071896397;0.074714303;0.085074298;0.095662899;0.115338;
0.11821;0.127996;0.130137;0.13082901;0.137876;0.132774;0.13354801;0.129362;0.129393;0.12826499;
0.131442;0.12823901;0.13461401;0.132566;0.130384;0.125567;0.127131;0.131671;0.117725;0.117074;
0.101672;0.081260003;0.078928299;0.068721198;0.071676202;0.070193604;0.068975396;0.070222303;0.068234302;0.067428097;
0.066865198;0.069550797;0.067580499;0.072295398;0.070805401;0.074043103;0.069897503;0.071549103;0.069656603;0.070228897;
0.070244901;0.068196401;0.068084501;0.079254597;0.099574097;0.116101;0.113406;0.127148;0.13784;0.134368;
0.134608;0.135534;0.133696;0.13459;0.13349199;0.129609;0.130391;0.130603;0.128666;0.130955;
0.126909;0.133417;0.127492;0.133981;0.119739;0.112929;0.101223;0.083984002;0.064986803;0.068574697;
0.069100901;0.066943802;0.0725713;0.070530199;0.0688667;0.069238998;0.069299899;0.073759802;0.0718197;0.073400304;
0.077423498;0.0721756;0.0711172;0.077849798;0.072556399;0.076243997;0.073675796;0.073090903;0.072050899;0.0829373;
0.106681;0.121472;0.116993;0.143977;0.206128;0.19111;0.19135199;0.203513;0.20686699;0.220429;
0.248996;0.204789;0.19014101;0.191328;0.189099;0.18953501;0.20204601;0.230272;0.196476;0.22371601;
0.24413;0.27447599;0.30890501;0.34777299;0.35087299;0.488123;0.39592001;0.37955001;0.32994199;0.30659899;
0.28551999;0.287301;0.24978399;0.23786999;0.23321;0.219349;0.193968;0.18540099;0.175961;0.18249799;
0.156031;0.163546;0.156279;0.14217401;0.19637799;0.161385;0.211688;0.26228899;0.30741;0.343173;
0.42583999;0.399737;0.38572499;0.35090399;0.31093401;0.28927201;0.27589399;0.27899501;0.27750701;0.26936099;
0.329824;0.327494;0.315465;0.28885701;0.32071701;0.29024199;0.186691;0.29135901;0.28643;0.287689;
0.24330799;0.25922701;0.25641799;0.224682;0.21135899;0.26209101;0.29239199;0.28901201;0.295297;0.36920401;
0.43959701;0.41742301;0.42804801;0.41218099;0.41527399;0.412586;0.42860901;0.38148901;0.39472699;0.29739001;
0.395944;0.39994499;0.453563;0.450151;0.55287898;0.402668;0.351206;0.360257;0.29130599;0.30155799;
0.281905;0.285604;0.27689701;0.28450099;0.28535101;0.286542;0.287191;0.28628001;0.28590199;0.28904301;
0.301094;0.31247601;0.410391;0.36386499;0.38637501;0.437603;0.41420799;0.36063999;0.32040799;0.29816201;
0.289592;0.31538999;0.277973;0.239281;0.243011;0.28728399;0.343795;0.32706401;0.307044;0.28975201;
0.33196399;0.345662;0.32652;0.319451;0.30779701;0.31287399;0.29440799;0.32291999;0.25515199;0.369331;
0.38105899;0.39518899;0.40162101;0.393608;0.39769399;0.29704699;0.26965001;0.270035;0.31641999;0.339679;
0.33925799;0.335287;0.33031201;0.33768401;0.32871899;0.34082401;0.346338;0.350494;0.440299;0.47756699;
0.34875301;0.334126;0.31085801;0.29979599;0.27853701;0.259698;0.34079599;0.30809999;0.30927899;0.286309;
0.35819399;0.36991301;0.33050999;0.29322901;0.25731999;0.242779;0.24737801;0.20650899;0.186838;0.147493;
0.16070101;0.190782;0.27284101;0.33685499;0.48336199;0.482779;0.45865399;0.47439501;0.39780799;0.37079701;
0.332528;0.29673201;0.29984;0.33491999;0.34120899;0.33864301;0.33855799;0.337724;0.35865501;0.345411;
0.35481;0.33149999;0.374378;0.45155701;0.426994;0.42032599;0.36943799;0.37467;0.35372499;0.24697401;
0.210012;0.240795;0.28712699;0.21579701;0.27264401;0.218752;0.263401;0.30484101;0.29156899;0.25090599;
0.16784699;0.17455301;0.22605699;0.182264;0.20863999;0.24446;0.232324;0.26511699;0.254076;0.39683399;
0.42075399;0.42287901;0.40323299;0.40798399;0.39847299;0.38447201;0.37491399;0.38123399;0.37202701;0.37187901;
0.31233901;0.304151;0.27891999;0.33838701;0.33052999;0.32516;0.32716399;0.362358;0.34152901;0.29230601;
0.17051201;0.194493;0.166767;0.094398998;0.11041;0.090322398;0.0841529;0.099610098;0.098092303;0.091843799;
0.094922498;0.093629099;0.090622403;0.0890835;0.093098499;0.087894604;0.093738496;0.0903534;0.092930801;0.096060298;
0.091371998;0.096806303;0.0951313;0.12081;0.1451;0.14547101;0.163413;0.156523;0.162871;0.16404501;
0.17399199;0.16239899;0.160852;0.166049;0.163202;0.159916;0.16279399;0.16027001;0.165286;0.16402701;
0.157378;0.163798;0.16978499;0.167825;0.17361;0.15759601;0.131561;0.147331;0.098561101;0.092242502;
0.093872197;0.092116199;0.092527702;0.091470003;0.094475798;0.095736399;0.095889904;0.093736097;0.091462597;0.080734797;
0.0808345;0.0895634;0.084601;0.085238799;0.087583899;0.084751897;0.078864902;0.081698798;0.086488098;0.111039;
0.122202;0.133119;0.143984;0.139516;0.153063;0.16071799;0.155845;0.140862;0.142055;0.143122;
0.14524899;0.145863;0.14395;0.146156;0.141792;0.142634;0.14195301;0.151287;0.167399;0.195704;
0.277336;0.26684099;0.249457;0.217062;0.21777099;0.184765;0.195715;0.235277;0.18765099;0.19299001;
0.19837099;0.24555101;0.244739;0.222418;0.22940101;0.22199699;0.16689999;0.15736701;0.17313901;0.16035999;
0.161386;0.188592;0.190837;0.146641;0.153781;0.224573;0.24989399;0.286576;0.36770001;0.36352399;
0.358955;0.367621;0.345707;0.329743;0.30409399;0.30307299;0.29841399;0.300219;0.26310501;0.26449099;
0.27231899;0.273954;0.27156499;0.27642101;0.30763;0.35160801;0.41686499;0.36413899;0.34250399;0.31710601;
0.32345599;0.339607;0.27666399;0.26840699;0.264422;0.29047;0.28259999;0.266166;0.26956901;0.27664801;
0.27524999;0.26598999;0.242441;0.212183;0.222013;0.22479799;0.198138;0.195253;0.210704;0.21984001;
0.236471;0.245377;0.270017;0.341501;0.34402001;0.35207301;0.353091;0.34478399;0.33634901;0.31643999;
0.286791;0.28636399;0.28414401;0.32161701;0.32291201;0.32149801;0.322119;0.322119;0.301018;0.29246199;
0.31470001;0.34280699;0.39821601;0.40365899;0.38389301;0.31531799;0.26719001;0.248108;0.25233001;0.22983;
0.213734;0.23693401;0.289125;0.25501999;0.22228201;0.21735901;0.225857;0.22564501;0.20931;0.19417;
0.216131;0.228542;0.21898399;0.20182499;0.20684201;0.223599;0.246692;0.244422;0.200395;0.293405;
0.31915301;0.38167;0.38688999;0.383203;0.37499499;0.33219299;0.32687101;0.32387301;0.32226199;0.32876199;
0.32645199;0.33037499;0.32923499;0.334066;0.353508;0.37846199;0.396602;0.42409301;0.47301099;0.44410101;
0.432574;0.38693801;0.36917999;0.343523;0.319399;0.31510499;0.30232;0.31310499;0.299907;0.29527;
0.33067501;0.284706;0.30535901;0.281106;0.23849601;0.29431799;0.29030201;0.29107699;0.27224299;0.27531999;
0.29315501;0.32278499;0.35080001;0.38415301;0.373238;0.37640899;0.379078;0.38444501;0.36241299;0.33902901;
0.32101801;0.24803101;0.248982;0.24168301;0.244425;0.249;0.248529;0.24766099;0.25409499;0.26111701;
0.28244701;0.29824001;0.37645799;0.41913101;0.310206;0.405673;0.383876;0.380759;0.36116999;0.34138301;
0.41087201;0.36925301;0.33879301;0.30670601;0.33379799;0.30785501;0.299546;0.240118;0.227219;0.215657;
0.207561;0.15118299;0.19906899;0.177286;0.148756;0.166168;0.14422999;0.183864;0.204024;0.251571;
0.355618;0.34748599;0.32372901;0.28852201;0.289175;0.27103001;0.27002299;0.26426899;0.26205;0.263935;
0.26523301;0.266063;0.152493;0.15369099;0.156499;0.14646;0.138485;0.11632;0.100835;0.083523899;
0.093378797;0.080095999;0.073044904;0.073406301;0.0778955;0.081017002;0.079536498;0.082381196;0.081336603;0.0734265;
0.085058197;0.084958203;0.116491;0.126644;0.121058;0.107226;0.10887;0.115314;0.111361;0.12486;
0.111737;0.13342699;0.140268;0.13125101;0.145101;0.14949501;0.14409301;0.150754;0.161126;0.16781899;
0.140295;0.13713101;0.137602;0.14503101;0.146704;0.142416;0.14732;0.144706;0.14035399;0.143684;
0.15417001;0.16146199;0.14388999;0.13618;0.113573;0.084865101;0.079320498;0.0824209;0.088711403;0.083033197;
0.0889742;0.0873276;0.083630502;0.076240398;0.079764903;0.080732398;0.080670498;0.079882503;0.078690998;0.081138402;
0.086845003;0.086627498;0.089332201;0.0892573;0.086223997;0.076722398;0.087891802;0.109496;0.13198499;0.125274;
0.135529;0.147476;0.143673;0.148535;0.147053;0.151564;0.137336;0.13440999;0.14459699;0.13546801;
0.140086;0.14079501;0.152234;0.14107201;0.1332;0.149873;0.19642401;0.28509599;0.35515499;0.36158201;
0.34938699;0.331337;0.330865;0.30201501;0.34611401;0.31361899;0.30568999;0.30431899;0.27598801;0.259469;
0.26702201;0.25694901;0.24692801;0.246105;0.221642;0.202555;0.198414;0.22190499;0.23085301;0.239665;
0.243349;0.247851;0.247678;0.28023499;0.379769;0.38426301;0.40033799;0.394261;0.39443001;0.419449;
0.403649;0.37417001;0.353264;0.34417799;0.34528801;0.343734;0.34287;0.37554401;0.35082701;0.33513001;
0.35002401;0.35612699;0.39922199;0.44285801;0.503631;0.48041999;0.49095401;0.518547;0.573479;0.63652402;
0.53391099;0.46457401;0.415564;0.53159302;0.41046101;0.462154;0.456402;0.41095001;0.381942;0.35617799;
0.33204299;0.34370199;0.371961;0.37217;0.37513;0.35591599;0.349731;0.35037899;0.36325201;0.38236201;
0.52234203;0.53085798;0.53495997;0.52852702;0.52717102;0.463269;0.444942;0.418129;0.423062;0.41691801;
0.419902;0.41437501;0.415656;0.41032001;0.413578;0.420066;0.46609199;0.49447599;0.537916;0.61034501;
0.63461697;0.60977298;0.57173401;0.57731497;0.52673;0.501378;0.48899099;0.52896798;0.56239402;0.54455101;
0.490145;0.45152101;0.453076;0.40152499;0.3883;0.36978701;0.352375;0.35545;0.373009;0.38126999;
0.355515;0.317002;0.34620401;0.342161;0.357941;0.42078501;0.47724101;0.46545199;0.49733499;0.50801599;
0.51565701;0.49508801;0.479029;0.459593;0.46329999;0.46927899;0.47217801;0.47969401;0.45524299;0.45477101;
0.370267;0.36617199;0.389386;0.410965;0.44338599;0.471194;0.49786901;0.50158501;0.42763901;0.33552501;
0.39140299;0.40053999;0.391608;0.35085601;0.44239599;0.39250401;0.39064801;0.29503301;0.274196;0.354379;
0.238383;0.219162;0.248666;0.25418401;0.237505;0.28298;0.23091;0.25440401;0.25690901;0.26857701;
0.311086;0.41699299;0.428635;0.411338;0.421307;0.41694799;0.40659299;0.40315101;0.39247701;0.40030399;
0.399266;0.400563;0.39886999;0.39488801;0.39143801;0.317536;0.32249501;0.33791599;0.33992201;0.36320701;
0.38648799;0.38285899;0.29016;0.27453101;0.26505199;0.22659899;0.202672;0.35151699;0.45443201;0.35536399;
0.30923399;0.39187101;0.33168799;0.30479699;0.27822399;0.291563;0.25009799;0.26344299;0.25434801;0.22754499;
0.24452101;0.215736;0.187975;0.171767;0.17022599;0.19795901;0.26861101;0.36315301;0.37597299;0.33566901;
0.33998799;0.33601901;0.33273599;0.32754299;0.33042899;0.287965;0.26894501;0.28766301;0.28014699;0.28661299;
0.25751901;0.217813;0.21413;0.21502399;0.214509;0.192109;0.195952;0.20831899;0.20469899;0.19733401;
0.160969;0.111472;0.112139;0.098210998;0.093604103;0.094540097;0.105863;0.098305002;0.100502;0.099301398;
0.099000201;0.098755598;0.099924996;0.103113;0.10607;0.090715103;0.084040597;0.088693701;0.0761903;0.092930101;
0.120842;0.132337;0.138577;0.185873;0.239454;0.244312;0.23682299;0.24824899;0.226477;0.19685499;
0.135022;0.143713;0.133108;0.134415;0.13047101;0.141286;0.131265;0.133526;0.13215899;0.15403;
0.155761;0.14050999;0.130867;0.11162;0.117072;0.103672;0.100772;0.097562701;0.096434303;0.086760402;
0.084802501;0.087333903;0.079637296;0.096606798;0.079871699;0.089515299;0.083244801;0.082330696;0.0819683;0.083224103;
0.085638903;0.082956798;0.0797261;0.089075901;0.085903898;0.092768602;0.114301;0.124538;0.122048;0.136188;
0.14706901;0.146725;0.14706101;0.13699099;0.12711;0.126204;0.12811001;0.12938599;0.13024101;0.12887301;
0.12794299;0.12573799;0.124008;0.125966;0.137815;0.13813899;0.14429;0.121631;0.120695;0.114259;
0.100926;0.107479;0.076995797;0.089081302;0.077012204;0.073040903;0.082138702;0.067314602;0.0945905;0.115887;
0.117568;0.0960541;0.080251798;0.082580499;0.089425102;0.081081703;0.091294602;0.091917597;0.120338;0.085112698;
0.093706504;0.111053;0.121173;0.137971;0.14115299;0.15847901;0.147542;0.141478;0.15191799;0.15954401;
0.161599;0.135447;0.14226;0.13435499;0.134481;0.141496;0.134951;0.139025;0.13463999;0.14197101;
0.16184101;0.181961;0.241906;0.28650701;0.28403801;0.269335;0.25283399;0.25176701;0.22632;0.23351599;
0.225035;0.193417;0.19510899;0.178948;0.20262299;0.204456;0.201656;0.230305;0.27643099;0.30668801;
0.23192801;0.232585;0.244462;0.246369;0.248206;0.212262;0.168437;0.168899;0.18862499;0.22648899;
0.294155;0.30829099;0.28193301;0.28507;0.29574499;0.31110099;0.29487401;0.26648599;0.24726699;0.259031;
0.237287;0.272053;0.262041;0.266873;0.26651999;0.26155999;0.27934799;0.30695501;0.33357099;0.443591;
0.44418901;0.322447;0.30566099;0.31401101;0.23633701;0.242035;0.22022399;0.23440699;0.222619;0.276362;
0.311463;0.36128601;0.373721;0.324613;0.31995401;0.30347499;0.34600899;0.333561;0.28131199;0.35198101;
0.299353;0.30575401;0.30335599;0.337551;0.35246101;0.42168;0.51456797;0.53031301;0.52814502;0.54866999;
0.57792503;0.55814201;0.53654599;0.532148;0.56514901;0.56729102;0.522578;0.54963398;0.52183902;0.519822;
0.50414503;0.52286297;0.495823;0.53431201;0.57248598;0.59285903;0.33263701;0.355225;0.43154201;0.39608899;
0.391056;0.39609501;0.373483;0.363783;0.35326901;0.43559599;0.44395399;0.46411401;0.47330299;0.473241;
0.436865;0.40177301;0.40088201;0.41082299;0.41716999;0.43878001;0.37728301;0.40827;0.397439;0.38133699;
0.46030799;0.51460397;0.52097398;0.52703601;0.52257198;0.51104498;0.495123;0.43834299;0.43499801;0.42733499;
0.42748901;0.43916401;0.43055499;0.434625;0.43413201;0.43801901;0.43619999;0.44693699;0.48671699;0.51217401;
0.56836098;0.56295198;0.57773501;0.55676001;0.46335;0.493839;0.48598;0.47850201;0.44912699;0.41286299;
0.438407;0.397365;0.386729;0.324918;0.31271601;0.29683101;0.28551501;0.213321;0.22444101;0.20846701;
0.25259599;0.19159;0.247223;0.26235199;0.306205;0.46769699;0.50283599;0.507092;0.42472601;0.35029799;
0.32374901;0.33354801;0.35780099;0.36572799;0.42376101;0.42359701;0.41548401;0.419862;0.36433101;0.36305499;
0.36436999;0.35584801;0.36553299;0.36683899;0.36967301;0.37930101;0.32044601;0.271465;0.26719201;0.254067;
0.253149;0.245309;0.249834;0.23114701;0.23962;0.218886;0.21869101;0.213082;0.149524;0.13626499;
0.137569;0.14343999;0.16046;0.12989099;0.196117;0.209545;0.23314901;0.233595;0.236426;0.260039;
0.20336699;0.21283799;0.21114799;0.204915;0.206154;0.215877;0.21542101;0.22911;0.23297399;0.156277;
0.137822;0.173196;0.18058801;0.188875;0.178911;0.181747;0.18336;0.20073999;0.198533;0.20306499;
0.235981;0.23113699;0.218666;0.203605;0.203069;0.188806;0.180742;0.16595501;0.174041;0.172956;
0.17924599;0.15737601;0.109027;0.075535998;0.078441396;0.0798731;0.077919699;0.077082202;0.077015601;0.075736299;
0.077775203;0.083882101;0.069252104;0.070019796;0.072891697;0.096898302;0.113078;0.116101;0.125506;0.133745;
0.1332;0.140063;0.13263699;0.132093;0.13730399;0.13366;0.13262001;0.133514;0.13566899;0.130182;
0.131044;0.13226201;0.134955;0.132163;0.136861;0.129439;0.120205;0.109709;0.106065;0.085323602;
0.068367697;0.069875002;0.073856197;0.072016403;0.073045596;0.0731773;0.076069601;0.0791068;0.076216102;0.078967899;
0.080328003;0.0799613;0.085243396;0.083949201;0.086576298;0.091949299;0.089491598;0.087252297;0.071896397;0.074714303;
0.085074298;0.095662899;0.115338;0.11821;0.127996;0.130137;0.13082901;0.137876;0.132774;0.13354801;
0.129362;0.129393;0.12826499;0.131442;0.12823901;0.13461401;0.132566;0.130384;0.125567;0.127131;
0.131671;0.117725;0.117074;0.101672;0.081260003;0.078928299;0.068721198;0.071676202;0.070193604;0.068975396;
0.070222303;0.068234302;0.067428097;0.066865198;0.069550797;0.067580499;0.072295398;0.070805401;0.074043103;0.069897503;
0.071549103;0.069656603;0.070228897;0.070244901;0.068196401;0.068084501;0.079254597;0.099574097;0.116101;0.113406;
0.127148;0.13784;0.134368;0.134608;0.135534;0.133696;0.13459;0.13349199;0.129609;0.130391;
0.130603;0.128666;0.130955;0.126909;0.133417;0.127492;0.133981;0.119739;0.112929;0.101223;
0.083984002;0.064986803;0.068574697;0.069100901;0.066943802;0.0725713;0.070530199;0.0688667;0.069238998;0.069299899;
0.073759802;0.0718197;0.073400304;0.077423498;0.0721756;0.0711172;0.077849798;0.072556399;0.076243997;0.073675796;
0.073090903;0.072050899;0.0829373;0.106681;0.121472;0.116993;0.143977;0.206128;0.19111;0.19135199;
0.203513;0.20686699;0.220429;0.248996;0.204789;0.19014101;0.191328;0.189099;0.18953501;0.20204601;
0.230272;0.196476;0.22371601;0.24413;0.27447599;0.30890501;0.34777299;0.35087299;0.488123;0.39592001;
0.37955001;0.32994199;0.30659899;0.28551999;0.287301;0.24978399;0.23786999;0.23321;0.219349;0.193968;
0.18540099;0.175961;0.18249799;0.156031;0.163546;0.156279;0.14217401;0.19637799;0.161385;0.211688;
0.26228899;0.30741;0.343173;0.42583999;0.399737;0.38572499;0.35090399;0.31093401;0.28927201;0.27589399;
0.27899501;0.27750701;0.26936099;0.329824;0.327494;0.315465;0.28885701;0.32071701;0.29024199;0.186691;
0.29135901;0.28643;0.287689;0.24330799;0.25922701;0.25641799;0.224682;0.21135899;0.26209101;0.29239199;
0.28901201;0.295297;0.36920401;0.43959701;0.41742301;0.42804801;0.41218099;0.41527399;0.412586;0.42860901;
0.38148901;0.39472699;0.29739001;0.395944;0.39994499;0.453563;0.450151;0.55287898;0.402668;0.351206;
0.360257;0.29130599;0.30155799;0.281905;0.285604;0.27689701;0.28450099;0.28535101;0.286542;0.287191;
0.28628001;0.28590199;0.28904301;0.301094;0.31247601;0.410391;0.36386499;0.38637501;0.437603;0.41420799;
0.36063999;0.32040799;0.29816201;0.289592;0.31538999;0.277973;0.239281;0.243011;0.28728399;0.343795;
0.32706401;0.307044;0.28975201;0.33196399;0.345662;0.32652;0.319451;0.30779701;0.31287399;0.29440799;
0.32291999;0.25515199;0.369331;0.38105899;0.39518899;0.40162101;0.393608;0.39769399;0.29704699;0.26965001;
0.270035;0.31641999;0.339679;0.33925799;0.335287;0.33031201;0.33768401;0.32871899;0.34082401;0.346338;
0.350494;0.440299;0.47756699;0.34875301;0.334126;0.31085801;0.29979599;0.27853701;0.259698;0.34079599;
0.30809999;0.30927899;0.286309;0.35819399;0.36991301;0.33050999;0.29322901;0.25731999;0.242779;0.24737801;
0.20650899;0.186838;0.147493;0.16070101;0.190782;0.27284101;0.33685499;0.48336199;0.482779;0.45865399;
0.47439501;0.39780799;0.37079701;0.332528;0.29673201;0.29984;0.33491999;0.34120899;0.33864301;0.33855799;
0.337724;0.35865501;0.345411;0.35481;0.33149999;0.374378;0.45155701;0.426994;0.42032599;0.36943799;
0.37467;0.35372499;0.24697401;0.210012;0.240795;0.28712699;0.21579701;0.27264401;0.218752;0.263401;
0.30484101;0.29156899;0.25090599;0.16784699;0.17455301;0.22605699;0.182264;0.20863999;0.24446;0.232324;
0.26511699;0.254076;0.39683399;0.42075399;0.42287901;0.40323299;0.40798399;0.39847299;0.38447201;0.37491399;
0.38123399;0.37202701;0.37187901;0.31233901;0.304151;0.27891999;0.33838701;0.33052999;0.32516;0.32716399;
0.362358;0.34152901;0.29230601;0.17051201;0.194493;0.166767;0.094398998;0.11041;0.090322398;0.0841529;
0.099610098;0.098092303;0.091843799;0.094922498;0.093629099;0.090622403;0.0890835;0.093098499;0.087894604;0.093738496;
0.0903534;0.092930801;0.096060298;0.091371998;0.096806303;0.0951313;0.12081;0.1451;0.14547101;0.163413;
0.156523;0.162871;0.16404501;0.17399199;0.16239899;0.160852;0.166049;0.163202;0.159916;0.16279399;
0.16027001;0.165286;0.16402701;0.157378;0.163798;0.16978499;0.167825;0.17361;0.15759601;0.131561;
0.147331;0.098561101;0.092242502;0.093872197;0.092116199;0.092527702;0.091470003;0.094475798;0.095736399;0.095889904;
0.093736097;0.091462597;0.080734797;0.0808345;0.0895634;0.084601;0.085238799;0.087583899;0.084751897;0.078864902;
0.081698798;0.086488098;0.111039;0.122202;0.133119;0.143984;0.139516;0.153063;0.16071799;0.155845;
0.140862;0.142055;0.143122;0.14524899;0.145863;0.14395;0.146156;0.141792;0.142634;0.14195301;
0.151287;0.167399;0.195704;0.277336;0.26684099;0.249457;0.217062;0.21777099;0.184765;0.195715;
0.235277;0.18765099;0.19299001;0.19837099;0.24555101;0.244739;0.222418;0.22940101;0.22199699;0.16689999;
0.15736701;0.17313901;0.16035999;0.161386;0.188592;0.190837;0.146641;0.153781;0.224573;0.24989399;
0.286576;0.36770001;0.36352399;0.358955;0.367621;0.345707;0.329743;0.30409399;0.30307299;0.29841399;
0.300219;0.26310501;0.26449099;0.27231899;0.273954;0.27156499;0.27642101;0.30763;0.35160801;0.41686499;
0.36413899;0.34250399;0.31710601;0.32345599;0.339607;0.27666399;0.26840699;0.264422;0.29047;0.28259999;
0.266166;0.26956901;0.27664801;0.27524999;0.26598999;0.242441;0.212183;0.222013;0.22479799;0.198138;
0.195253;0.210704;0.21984001;0.236471;0.245377;0.270017;0.341501;0.34402001;0.35207301;0.353091;
0.34478399;0.33634901;0.31643999;0.286791;0.28636399;0.28414401;0.32161701;0.32291201;0.32149801;0.322119;
0.322119;0.301018;0.29246199;0.31470001;0.34280699;0.39821601;0.40365899;0.38389301;0.31531799;0.26719001;
0.248108;0.25233001;0.22983;0.213734;0.23693401;0.289125;0.25501999;0.22228201;0.21735901;0.225857;
0.22564501;0.20931;0.19417;0.216131;0.228542;0.21898399;0.20182499;0.20684201;0.223599;0.246692;
0.244422;0.200395;0.293405;0.31915301;0.38167;0.38688999;0.383203;0.37499499;0.33219299;0.32687101;
0.32387301;0.32226199;0.32876199;0.32645199;0.33037499;0.32923499;0.334066;0.353508;0.37846199;0.396602;
0.42409301;0.47301099;0.44410101;0.432574;0.38693801;0.36917999;0.343523;0.319399;0.31510499;0.30232;
0.31310499;0.299907;0.29527;0.33067501;0.284706;0.30535901;0.281106;0.23849601;0.29431799;0.29030201;
0.29107699;0.27224299;0.27531999;0.29315501;0.32278499;0.35080001;0.38415301;0.373238;0.37640899;0.379078;
0.38444501;0.36241299;0.33902901;0.32101801;0.24803101;0.248982;0.24168301;0.244425;0.249;0.248529;
0.24766099;0.25409499;0.26111701;0.28244701;0.29824001;0.37645799;0.41913101;0.310206;0.405673;0.383876;
0.380759;0.36116999;0.34138301;0.41087201;0.36925301;0.33879301;0.30670601;0.33379799;0.30785501;0.299546;
0.240118;0.227219;0.215657;0.207561;0.15118299;0.19906899;0.177286;0.148756;0.166168;0.14422999;
0.183864;0.204024;0.251571;0.355618;0.34748599;0.32372901;0.28852201;0.289175;0.27103001;0.27002299;
0.26426899;0.26205;0.263935;0.26523301;0.266063;0.152493;0.15369099;0.156499;0.14646;0.138485;
0.11632;0.100835;0.083523899;0.093378797;0.080095999;0.073044904;0.073406301;0.0778955;0.081017002;0.079536498;
0.082381196;0.081336603;0.0734265;0.085058197;0.084958203;0.116491;0.126644;0.121058;0.107226;0.10887;
0.115314;0.111361;0.12486;0.111737;0.13342699;0.140268;0.13125101;0.145101;0.14949501;0.14409301;
0.150754;0.161126;0.16781899;0.140295;0.13713101;0.137602;0.14503101;0.146704;0.142416;0.14732;
0.144706;0.14035399;0.143684;0.15417001;0.16146199;0.14388999;0.13618;0.113573;0.084865101;0.079320498;
0.0824209;0.088711403;0.083033197;0.0889742;0.0873276;0.083630502;0.076240398;0.079764903;0.080732398;0.080670498;
0.079882503;0.078690998;0.081138402;0.086845003;0.086627498;0.089332201;0.0892573;0.086223997;0.076722398;0.087891802;
0.109496;0.13198499;0.125274;0.135529;0.147476;0.143673;0.148535;0.147053;0.151564;0.137336;
0.13440999;0.14459699;0.13546801;0.140086;0.14079501;0.152234;0.14107201;0.1332;0.149873;0.19642401;
0.28509599;0.35515499;0.36158201;0.34938699;0.331337;0.330865;0.30201501;0.34611401;0.31361899;0.30568999;
0.30431899;0.27598801;0.259469;0.26702201;0.25694901;0.24692801;0.246105;0.221642;0.202555;0.198414;
0.22190499;0.23085301;0.239665;0.243349;0.247851;0.247678;0.28023499;0.379769;0.38426301;0.40033799;
0.394261;0.39443001;0.419449;0.403649;0.37417001;0.353264;0.34417799;0.34528801;0.343734;0.34287;
0.37554401;0.35082701;0.33513001;0.35002401;0.35612699;0.39922199;0.44285801;0.503631;0.48041999;0.49095401;
0.518547;0.573479;0.63652402;0.53391099;0.46457401;0.415564;0.53159302;0.41046101;0.462154;0.456402;
0.41095001;0.381942;0.35617799;0.33204299;0.34370199;0.371961;0.37217;0.37513;0.35591599;0.349731;
0.35037899;0.36325201;0.38236201;0.52234203;0.53085798;0.53495997;0.52852702;0.52717102;0.463269;0.444942;
0.418129;0.423062;0.41691801;0.419902;0.41437501;0.415656;0.41032001;0.413578;0.420066;0.46609199;
0.49447599;0.537916;0.61034501;0.63461697;0.60977298;0.57173401;0.57731497;0.52673;0.501378;0.48899099;
0.52896798;0.56239402;0.54455101;0.490145;0.45152101;0.453076;0.40152499;0.3883;0.36978701;0.352375;
0.35545;0.373009;0.38126999;0.355515;0.317002;0.34620401;0.342161;0.357941;0.42078501;0.47724101;
0.46545199;0.49733499;0.50801599;0.51565701;0.49508801;0.479029;0.459593;0.46329999;0.46927899;0.47217801;
0.47969401;0.45524299;0.45477101;0.370267;0.36617199;0.389386;0.410965;0.44338599;0.471194;0.49786901;
0.50158501;0.42763901;0.33552501;0.39140299;0.40053999;0.391608;0.35085601;0.44239599;0.39250401;0.39064801;
0.29503301;0.274196;0.354379;0.238383;0.219162;0.248666;0.25418401;0.237505;0.28298;0.23091;
0.25440401;0.25690901;0.26857701;0.311086;0.41699299;0.428635;0.411338;0.421307;0.41694799;0.40659299;
0.40315101;0.39247701;0.40030399;0.399266;0.400563;0.39886999;0.39488801;0.39143801;0.317536;0.32249501;
0.33791599;0.33992201;0.36320701;0.38648799;0.38285899;0.29016;0.27453101;0.26505199;0.22659899;0.202672;
0.35151699;0.45443201;0.35536399;0.30923399;0.39187101;0.33168799;0.30479699;0.27822399;0.291563;0.25009799;
0.26344299;0.25434801;0.22754499;0.24452101;0.215736;0.187975;0.171767;0.17022599;0.19795901;0.26861101;
0.36315301;0.37597299;0.33566901;0.33998799;0.33601901;0.33273599;0.32754299;0.33042899;0.287965;0.26894501;
0.28766301;0.28014699;0.28661299;0.25751901;0.217813;0.21413;0.21502399;0.214509;0.192109;0.195952;
0.20831899;0.20469899;0.19733401;0.160969;0.111472;0.112139;0.098210998;0.093604103;0.094540097;0.105863;
0.098305002;0.100502;0.099301398;0.099000201;0.098755598;0.099924996;0.103113;0.10607;0.090715103;0.084040597;
0.088693701;0.0761903;0.092930101;0.120842;0.132337;0.138577;0.185873;0.239454;0.244312;0.23682299;
0.24824899;0.226477;0.19685499;0.135022;0.143713;0.133108;0.134415;0.13047101;0.141286;0.131265;
0.133526;0.13215899;0.15403;0.155761;0.14050999;0.130867;0.11162;0.117072;0.103672;0.100772;
0.097562701;0.096434303;0.086760402;0.084802501;0.087333903;0.079637296;0.096606798;0.079871699;0.089515299;0.083244801;
0.082330696;0.0819683;0.083224103;0.085638903;0.082956798;0.0797261;0.089075901;0.085903898;0.092768602;0.114301;
0.124538;0.122048;0.136188;0.14706901;0.146725;0.14706101;0.13699099;0.12711;0.126204;0.12811001;
0.12938599;0.13024101;0.12887301;0.12794299;0.12573799;0.124008;0.125966;0.137815;0.13813899;0.14429;
0.121631;0.120695;0.114259;0.100926;0.107479;0.076995797;0.089081302;0.077012204;0.073040903;0.082138702;
0.067314602;0.0945905;0.115887;0.117568;0.0960541;0.080251798;0.082580499;0.089425102;0.081081703;0.091294602;
0.091917597;0.120338;0.085112698;0.093706504;0.111053;0.121173;0.137971;0.14115299;0.15847901;0.147542;
0.141478;0.15191799;0.15954401;0.161599;0.135447;0.14226;0.13435499;0.134481;0.141496;0.134951;
0.139025;0.13463999;0.14197101;0.16184101;0.181961;0.241906;0.28650701;0.28403801;0.269335;0.25283399;
0.25176701;0.22632;0.23351599;0.225035;0.193417;0.19510899;0.178948;0.20262299;0.204456;0.201656;
0.230305;0.27643099;0.30668801;0.23192801;0.232585;0.244462;0.246369;0.248206;0.212262;0.168437;
0.168899;0.18862499;0.22648899;0.294155;0.30829099;0.28193301;0.28507;0.29574499;0.31110099;0.29487401;
0.26648599;0.24726699;0.259031;0.237287;0.272053;0.262041;0.266873;0.26651999;0.26155999;0.27934799;
0.30695501;0.33357099;0.443591;0.44418901;0.322447;0.30566099;0.31401101;0.23633701;0.242035;0.22022399;
0.23440699;0.222619;0.276362;0.311463;0.36128601;0.373721;0.324613;0.31995401;0.30347499;0.34600899;
0.333561;0.28131199;0.35198101;0.299353;0.30575401;0.30335599;0.337551;0.35246101;0.42168;0.51456797;
0.53031301;0.52814502;0.54866999;0.57792503;0.55814201;0.53654599;0.532148;0.56514901;0.56729102;0.522578;
0.54963398;0.52183902;0.519822;0.50414503;0.52286297;0.495823;0.53431201;0.57248598;0.59285903;0.33263701;
0.355225;0.43154201;0.39608899;0.391056;0.39609501;0.373483;0.363783;0.35326901;0.43559599;0.44395399;
0.46411401;0.47330299;0.473241;0.436865;0.40177301;0.40088201;0.41082299;0.41716999;0.43878001;0.37728301;
0.40827;0.397439;0.38133699;0.46030799;0.51460397;0.52097398;0.52703601;0.52257198;0.51104498;0.495123;
0.43834299;0.43499801;0.42733499;0.42748901;0.43916401;0.43055499;0.434625;0.43413201;0.43801901;0.43619999;
0.44693699;0.48671699;0.51217401;0.56836098;0.56295198;0.57773501;0.55676001;0.46335;0.493839;0.48598;
0.47850201;0.44912699;0.41286299;0.438407;0.397365;0.386729;0.324918;0.31271601;0.29683101;0.28551501;
0.213321;0.22444101;0.20846701;0.25259599;0.19159;0.247223;0.26235199;0.306205;0.46769699;0.50283599;
0.507092;0.42472601;0.35029799;0.32374901;0.33354801;0.35780099;0.36572799;0.42376101;0.42359701;0.41548401;
0.419862;0.36433101;0.36305499;0.36436999;0.35584801;0.36553299;0.36683899;0.36967301;0.37930101;0.32044601;
0.271465;0.26719201;0.254067;0.253149;0.245309;0.249834;0.23114701;0.23962;0.218886;0.21869101;
0.213082;0.149524;0.13626499;0.137569;0.14343999;0.16046;0.12989099;0.196117;0.209545;0.23314901;
0.233595;0.236426;0.260039;0.20336699;0.21283799;0.21114799;0.204915;0.206154;0.215877;0.21542101;
0.22911;0.23297399;0.156277;0.137822;0.173196;0.18058801;0.188875;0.178911;0.181747;0.18336;
0.20073999;0.198533;0.20306499;0.235981;0.23113699;0.218666;0.203605;0.203069;0.188806;0.180742;
0.16595501;0.174041;0.172956;0.17924599;0.15737601;0.109027;      };
     };
    };
    data_flags=SAVE_ROWS|AUTO_CALC;
    auto_load=NO_AUTO_LOAD;
    auto_load_file=;
    row_height=1;
    max_col_width=50;
    keygen 4 0=0;
    row_indexes {
     name="row_indexes";
    [2826] 0;1;2;3;4;5;6;7;8;9;
10;11;12;13;14;15;16;17;18;19;
20;21;22;23;24;25;26;27;28;29;
30;31;32;33;34;35;36;37;38;39;
40;41;42;43;44;45;46;47;48;49;
50;51;52;53;54;55;56;57;58;59;
60;61;62;63;64;65;66;67;68;69;
70;71;72;73;74;75;76;77;78;79;
80;81;82;83;84;85;86;87;88;89;
90;91;92;93;94;95;96;97;98;99;
100;101;102;103;104;105;106;107;108;109;
110;111;112;113;114;115;116;117;118;119;
120;121;122;123;124;125;126;127;128;129;
130;131;132;133;134;135;136;137;138;139;
140;141;142;143;144;145;146;147;148;149;
150;151;152;153;154;155;156;157;158;159;
160;161;162;163;164;165;166;167;168;169;
170;171;172;173;174;175;176;177;178;179;
180;181;182;183;184;185;186;187;188;189;
190;191;192;193;194;195;196;197;198;199;
200;201;202;203;204;205;206;207;208;209;
210;211;212;213;214;215;216;217;218;219;
220;221;222;223;224;225;226;227;228;229;
230;231;232;233;234;235;236;237;238;239;
240;241;242;243;244;245;246;247;248;249;
250;251;252;253;254;255;256;257;258;259;
260;261;262;263;264;265;266;267;268;269;
270;271;272;273;274;275;276;277;278;279;
280;281;282;283;284;285;286;287;288;289;
290;291;292;293;294;295;296;297;298;299;
300;301;302;303;304;305;306;307;308;309;
310;311;312;313;314;315;316;317;318;319;
320;321;322;323;324;325;326;327;328;329;
330;331;332;333;334;335;336;337;338;339;
340;341;342;343;344;345;346;347;348;349;
350;351;352;353;354;355;356;357;358;359;
360;361;362;363;364;365;366;367;368;369;
370;371;372;373;374;375;376;377;378;379;
380;381;382;383;384;385;386;387;388;389;
390;391;392;393;394;395;396;397;398;399;
400;401;402;403;404;405;406;407;408;409;
410;411;412;413;414;415;416;417;418;419;
420;421;422;423;424;425;426;427;428;429;
430;431;432;433;434;435;436;437;438;439;
440;441;442;443;444;445;446;447;448;449;
450;451;452;453;454;455;456;457;458;459;
460;461;462;463;464;465;466;467;468;469;
470;471;472;473;474;475;476;477;478;479;
480;481;482;483;484;485;486;487;488;489;
490;491;492;493;494;495;496;497;498;499;
500;501;502;503;504;505;506;507;508;509;
510;511;512;513;514;515;516;517;518;519;
520;521;522;523;524;525;526;527;528;529;
530;531;532;533;534;535;536;537;538;539;
540;541;542;543;544;545;546;547;548;549;
550;551;552;553;554;555;556;557;558;559;
560;561;562;563;564;565;566;567;568;569;
570;571;572;573;574;575;576;577;578;579;
580;581;582;583;584;585;586;587;588;589;
590;591;592;593;594;595;596;597;598;599;
600;601;602;603;604;605;606;607;608;609;
610;611;612;613;614;615;616;617;618;619;
620;621;622;623;624;625;626;627;628;629;
630;631;632;633;634;635;636;637;638;639;
640;641;642;643;644;645;646;647;648;649;
650;651;652;653;654;655;656;657;658;659;
660;661;662;663;664;665;666;667;668;669;
670;671;672;673;674;675;676;677;678;679;
680;681;682;683;684;685;686;687;688;689;
690;691;692;693;694;695;696;697;698;699;
700;701;702;703;704;705;706;707;708;709;
710;711;712;713;714;715;716;717;718;719;
720;721;722;723;724;725;726;727;728;729;
730;731;732;733;734;735;736;737;738;739;
740;741;742;743;744;745;746;747;748;749;
750;751;752;753;754;755;756;757;758;759;
760;761;762;763;764;765;766;767;768;769;
770;771;772;773;774;775;776;777;778;779;
780;781;782;783;784;785;786;787;788;789;
790;791;792;793;794;795;796;797;798;799;
800;801;802;803;804;805;806;807;808;809;
810;811;812;813;814;815;816;817;818;819;
820;821;822;823;824;825;826;827;828;829;
830;831;832;833;834;835;836;837;838;839;
840;841;842;843;844;845;846;847;848;849;
850;851;852;853;854;855;856;857;858;859;
860;861;862;863;864;865;866;867;868;869;
870;871;872;873;874;875;876;877;878;879;
880;881;882;883;884;885;886;887;888;889;
890;891;892;893;894;895;896;897;898;899;
900;901;902;903;904;905;906;907;908;909;
910;911;912;913;914;915;916;917;918;919;
920;921;922;923;924;925;926;927;928;929;
930;931;932;933;934;935;936;937;938;939;
940;941;942;943;944;945;946;947;948;949;
950;951;952;953;954;955;956;957;958;959;
960;961;962;963;964;965;966;967;968;969;
970;971;972;973;974;975;976;977;978;979;
980;981;982;983;984;985;986;987;988;989;
990;991;992;993;994;995;996;997;998;999;
1000;1001;1002;1003;1004;1005;1006;1007;1008;1009;
1010;1011;1012;1013;1014;1015;1016;1017;1018;1019;
1020;1021;1022;1023;1024;1025;1026;1027;1028;1029;
1030;1031;1032;1033;1034;1035;1036;1037;1038;1039;
1040;1041;1042;1043;1044;1045;1046;1047;1048;1049;
1050;1051;1052;1053;1054;1055;1056;1057;1058;1059;
1060;1061;1062;1063;1064;1065;1066;1067;1068;1069;
1070;1071;1072;1073;1074;1075;1076;1077;1078;1079;
1080;1081;1082;1083;1084;1085;1086;1087;1088;1089;
1090;1091;1092;1093;1094;1095;1096;1097;1098;1099;
1100;1101;1102;1103;1104;1105;1106;1107;1108;1109;
1110;1111;1112;1113;1114;1115;1116;1117;1118;1119;
1120;1121;1122;1123;1124;1125;1126;1127;1128;1129;
1130;1131;1132;1133;1134;1135;1136;1137;1138;1139;
1140;1141;1142;1143;1144;1145;1146;1147;1148;1149;
1150;1151;1152;1153;1154;1155;1156;1157;1158;1159;
1160;1161;1162;1163;1164;1165;1166;1167;1168;1169;
1170;1171;1172;1173;1174;1175;1176;1177;1178;1179;
1180;1181;1182;1183;1184;1185;1186;1187;1188;1189;
1190;1191;1192;1193;1194;1195;1196;1197;1198;1199;
1200;1201;1202;1203;1204;1205;1206;1207;1208;1209;
1210;1211;1212;1213;1214;1215;1216;1217;1218;1219;
1220;1221;1222;1223;1224;1225;1226;1227;1228;1229;
1230;1231;1232;1233;1234;1235;1236;1237;1238;1239;
1240;1241;1242;1243;1244;1245;1246;1247;1248;1249;
1250;1251;1252;1253;1254;1255;1256;1257;1258;1259;
1260;1261;1262;1263;1264;1265;1266;1267;1268;1269;
1270;1271;1272;1273;1274;1275;1276;1277;1278;1279;
1280;1281;1282;1283;1284;1285;1286;1287;1288;1289;
1290;1291;1292;1293;1294;1295;1296;1297;1298;1299;
1300;1301;1302;1303;1304;1305;1306;1307;1308;1309;
1310;1311;1312;1313;1314;1315;1316;1317;1318;1319;
1320;1321;1322;1323;1324;1325;1326;1327;1328;1329;
1330;1331;1332;1333;1334;1335;1336;1337;1338;1339;
1340;1341;1342;1343;1344;1345;1346;1347;1348;1349;
1350;1351;1352;1353;1354;1355;1356;1357;1358;1359;
1360;1361;1362;1363;1364;1365;1366;1367;1368;1369;
1370;1371;1372;1373;1374;1375;1376;1377;1378;1379;
1380;1381;1382;1383;1384;1385;1386;1387;1388;1389;
1390;1391;1392;1393;1394;1395;1396;1397;1398;1399;
1400;1401;1402;1403;1404;1405;1406;1407;1408;1409;
1410;1411;1412;1413;1414;1415;1416;1417;1418;1419;
1420;1421;1422;1423;1424;1425;1426;1427;1428;1429;
1430;1431;1432;1433;1434;1435;1436;1437;1438;1439;
1440;1441;1442;1443;1444;1445;1446;1447;1448;1449;
1450;1451;1452;1453;1454;1455;1456;1457;1458;1459;
1460;1461;1462;1463;1464;1465;1466;1467;1468;1469;
1470;1471;1472;1473;1474;1475;1476;1477;1478;1479;
1480;1481;1482;1483;1484;1485;1486;1487;1488;1489;
1490;1491;1492;1493;1494;1495;1496;1497;1498;1499;
1500;1501;1502;1503;1504;1505;1506;1507;1508;1509;
1510;1511;1512;1513;1514;1515;1516;1517;1518;1519;
1520;1521;1522;1523;1524;1525;1526;1527;1528;1529;
1530;1531;1532;1533;1534;1535;1536;1537;1538;1539;
1540;1541;1542;1543;1544;1545;1546;1547;1548;1549;
1550;1551;1552;1553;1554;1555;1556;1557;1558;1559;
1560;1561;1562;1563;1564;1565;1566;1567;1568;1569;
1570;1571;1572;1573;1574;1575;1576;1577;1578;1579;
1580;1581;1582;1583;1584;1585;1586;1587;1588;1589;
1590;1591;1592;1593;1594;1595;1596;1597;1598;1599;
1600;1601;1602;1603;1604;1605;1606;1607;1608;1609;
1610;1611;1612;1613;1614;1615;1616;1617;1618;1619;
1620;1621;1622;1623;1624;1625;1626;1627;1628;1629;
1630;1631;1632;1633;1634;1635;1636;1637;1638;1639;
1640;1641;1642;1643;1644;1645;1646;1647;1648;1649;
1650;1651;1652;1653;1654;1655;1656;1657;1658;1659;
1660;1661;1662;1663;1664;1665;1666;1667;1668;1669;
1670;1671;1672;1673;1674;1675;1676;1677;1678;1679;
1680;1681;1682;1683;1684;1685;1686;1687;1688;1689;
1690;1691;1692;1693;1694;1695;1696;1697;1698;1699;
1700;1701;1702;1703;1704;1705;1706;1707;1708;1709;
1710;1711;1712;1713;1714;1715;1716;1717;1718;1719;
1720;1721;1722;1723;1724;1725;1726;1727;1728;1729;
1730;1731;1732;1733;1734;1735;1736;1737;1738;1739;
1740;1741;1742;1743;1744;1745;1746;1747;1748;1749;
1750;1751;1752;1753;1754;1755;1756;1757;1758;1759;
1760;1761;1762;1763;1764;1765;1766;1767;1768;1769;
1770;1771;1772;1773;1774;1775;1776;1777;1778;1779;
1780;1781;1782;1783;1784;1785;1786;1787;1788;1789;
1790;1791;1792;1793;1794;1795;1796;1797;1798;1799;
1800;1801;1802;1803;1804;1805;1806;1807;1808;1809;
1810;1811;1812;1813;1814;1815;1816;1817;1818;1819;
1820;1821;1822;1823;1824;1825;1826;1827;1828;1829;
1830;1831;1832;1833;1834;1835;1836;1837;1838;1839;
1840;1841;1842;1843;1844;1845;1846;1847;1848;1849;
1850;1851;1852;1853;1854;1855;1856;1857;1858;1859;
1860;1861;1862;1863;1864;1865;1866;1867;1868;1869;
1870;1871;1872;1873;1874;1875;1876;1877;1878;1879;
1880;1881;1882;1883;1884;1885;1886;1887;1888;1889;
1890;1891;1892;1893;1894;1895;1896;1897;1898;1899;
1900;1901;1902;1903;1904;1905;1906;1907;1908;1909;
1910;1911;1912;1913;1914;1915;1916;1917;1918;1919;
1920;1921;1922;1923;1924;1925;1926;1927;1928;1929;
1930;1931;1932;1933;1934;1935;1936;1937;1938;1939;
1940;1941;1942;1943;1944;1945;1946;1947;1948;1949;
1950;1951;1952;1953;1954;1955;1956;1957;1958;1959;
1960;1961;1962;1963;1964;1965;1966;1967;1968;1969;
1970;1971;1972;1973;1974;1975;1976;1977;1978;1979;
1980;1981;1982;1983;1984;1985;1986;1987;1988;1989;
1990;1991;1992;1993;1994;1995;1996;1997;1998;1999;
2000;2001;2002;2003;2004;2005;2006;2007;2008;2009;
2010;2011;2012;2013;2014;2015;2016;2017;2018;2019;
2020;2021;2022;2023;2024;2025;2026;2027;2028;2029;
2030;2031;2032;2033;2034;2035;2036;2037;2038;2039;
2040;2041;2042;2043;2044;2045;2046;2047;2048;2049;
2050;2051;2052;2053;2054;2055;2056;2057;2058;2059;
2060;2061;2062;2063;2064;2065;2066;2067;2068;2069;
2070;2071;2072;2073;2074;2075;2076;2077;2078;2079;
2080;2081;2082;2083;2084;2085;2086;2087;2088;2089;
2090;2091;2092;2093;2094;2095;2096;2097;2098;2099;
2100;2101;2102;2103;2104;2105;2106;2107;2108;2109;
2110;2111;2112;2113;2114;2115;2116;2117;2118;2119;
2120;2121;2122;2123;2124;2125;2126;2127;2128;2129;
2130;2131;2132;2133;2134;2135;2136;2137;2138;2139;
2140;2141;2142;2143;2144;2145;2146;2147;2148;2149;
2150;2151;2152;2153;2154;2155;2156;2157;2158;2159;
2160;2161;2162;2163;2164;2165;2166;2167;2168;2169;
2170;2171;2172;2173;2174;2175;2176;2177;2178;2179;
2180;2181;2182;2183;2184;2185;2186;2187;2188;2189;
2190;2191;2192;2193;2194;2195;2196;2197;2198;2199;
2200;2201;2202;2203;2204;2205;2206;2207;2208;2209;
2210;2211;2212;2213;2214;2215;2216;2217;2218;2219;
2220;2221;2222;2223;2224;2225;2226;2227;2228;2229;
2230;2231;2232;2233;2234;2235;2236;2237;2238;2239;
2240;2241;2242;2243;2244;2245;2246;2247;2248;2249;
2250;2251;2252;2253;2254;2255;2256;2257;2258;2259;
2260;2261;2262;2263;2264;2265;2266;2267;2268;2269;
2270;2271;2272;2273;2274;2275;2276;2277;2278;2279;
2280;2281;2282;2283;2284;2285;2286;2287;2288;2289;
2290;2291;2292;2293;2294;2295;2296;2297;2298;2299;
2300;2301;2302;2303;2304;2305;2306;2307;2308;2309;
2310;2311;2312;2313;2314;2315;2316;2317;2318;2319;
2320;2321;2322;2323;2324;2325;2326;2327;2328;2329;
2330;2331;2332;2333;2334;2335;2336;2337;2338;2339;
2340;2341;2342;2343;2344;2345;2346;2347;2348;2349;
2350;2351;2352;2353;2354;2355;2356;2357;2358;2359;
2360;2361;2362;2363;2364;2365;2366;2367;2368;2369;
2370;2371;2372;2373;2374;2375;2376;2377;2378;2379;
2380;2381;2382;2383;2384;2385;2386;2387;2388;2389;
2390;2391;2392;2393;2394;2395;2396;2397;2398;2399;
2400;2401;2402;2403;2404;2405;2406;2407;2408;2409;
2410;2411;2412;2413;2414;2415;2416;2417;2418;2419;
2420;2421;2422;2423;2424;2425;2426;2427;2428;2429;
2430;2431;2432;2433;2434;2435;2436;2437;2438;2439;
2440;2441;2442;2443;2444;2445;2446;2447;2448;2449;
2450;2451;2452;2453;2454;2455;2456;2457;2458;2459;
2460;2461;2462;2463;2464;2465;2466;2467;2468;2469;
2470;2471;2472;2473;2474;2475;2476;2477;2478;2479;
2480;2481;2482;2483;2484;2485;2486;2487;2488;2489;
2490;2491;2492;2493;2494;2495;2496;2497;2498;2499;
2500;2501;2502;2503;2504;2505;2506;2507;2508;2509;
2510;2511;2512;2513;2514;2515;2516;2517;2518;2519;
2520;2521;2522;2523;2524;2525;2526;2527;2528;2529;
2530;2531;2532;2533;2534;2535;2536;2537;2538;2539;
2540;2541;2542;2543;2544;2545;2546;2547;2548;2549;
2550;2551;2552;2553;2554;2555;2556;2557;2558;2559;
2560;2561;2562;2563;2564;2565;2566;2567;2568;2569;
2570;2571;2572;2573;2574;2575;2576;2577;2578;2579;
2580;2581;2582;2583;2584;2585;2586;2587;2588;2589;
2590;2591;2592;2593;2594;2595;2596;2597;2598;2599;
2600;2601;2602;2603;2604;2605;2606;2607;2608;2609;
2610;2611;2612;2613;2614;2615;2616;2617;2618;2619;
2620;2621;2622;2623;2624;2625;2626;2627;2628;2629;
2630;2631;2632;2633;2634;2635;2636;2637;2638;2639;
2640;2641;2642;2643;2644;2645;2646;2647;2648;2649;
2650;2651;2652;2653;2654;2655;2656;2657;2658;2659;
2660;2661;2662;2663;2664;2665;2666;2667;2668;2669;
2670;2671;2672;2673;2674;2675;2676;2677;2678;2679;
2680;2681;2682;2683;2684;2685;2686;2687;2688;2689;
2690;2691;2692;2693;2694;2695;2696;2697;2698;2699;
2700;2701;2702;2703;2704;2705;2706;2707;2708;2709;
2710;2711;2712;2713;2714;2715;2716;2717;2718;2719;
2720;2721;2722;2723;2724;2725;2726;2727;2728;2729;
2730;2731;2732;2733;2734;2735;2736;2737;2738;2739;
2740;2741;2742;2743;2744;2745;2746;2747;2748;2749;
2750;2751;2752;2753;2754;2755;2756;2757;2758;2759;
2760;2761;2762;2763;2764;2765;2766;2767;2768;2769;
2770;2771;2772;2773;2774;2775;2776;2777;2778;2779;
2780;2781;2782;2783;2784;2785;2786;2787;2788;2789;
2790;2791;2792;2793;2794;2795;2796;2797;2798;2799;
2800;2801;2802;2803;2804;2805;2806;2807;2808;2809;
2810;2811;2812;2813;2814;2815;2816;2817;2818;2819;
2820;2821;2822;2823;2824;2825;    };
    last_sort_spec {
     name="last_sort_spec";
     ops {
      name="ops";
      el_typ=DataSortEl;
      el_def=0;
     };
    };
    row_with_hilite=-1;
   };
  };
  DataTable_Group @.gp[1] {
   name="OutputData";
   el_typ=DataTable;
   el_def=0;
   save_tables=1;
   DataTable @[0] {
    name="TrialOutputData";
    desc=;
    data {
     name="data";
     el_typ=int_Data;
     el_def=0;
     int_Data @[0] {
      UserDataItem_List @*(.user_data_) {
       name="UserDataItem_List_15";
       el_typ=UserDataItem;
       el_def=0;
       UserDataItem @[0] {name="NARROW": value=1: val_type_fixed=0: };
      };
      name="batch";
      col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=8;
      matrix_col_width=10;
      ar {
       name="ar";
      [1206] 0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;      };
     };
     int_Data @[1] {
      UserDataItem_List @*(.user_data_) {
       name="UserDataItem_List_16";
       el_typ=UserDataItem;
       el_def=0;
       UserDataItem @[0] {name="NARROW": value=1: val_type_fixed=0: };
      };
      name="epoch";
      col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=8;
      matrix_col_width=10;
      ar {
       name="ar";
      [1206] 25;25;25;25;25;25;25;25;25;25;
25;25;25;25;25;25;25;25;25;25;
25;25;25;25;25;25;25;25;25;25;
25;25;25;25;25;25;25;25;25;25;
25;25;25;25;25;25;25;25;25;25;
25;25;25;25;25;25;25;25;25;25;
25;25;25;25;25;25;25;25;25;25;
25;25;25;25;25;25;25;25;25;25;
25;25;25;25;25;25;25;25;25;25;
25;25;25;25;25;25;25;25;25;25;
25;25;25;25;25;25;25;25;25;25;
25;25;25;25;25;25;25;25;25;25;
25;25;25;25;25;25;25;25;25;25;
25;25;25;25;25;25;25;25;25;25;
25;25;25;25;25;25;25;25;25;25;
25;25;25;25;25;25;25;25;25;25;
25;25;25;25;25;25;25;25;25;25;
25;25;25;25;25;25;25;25;25;25;
25;25;25;25;25;25;25;25;25;25;
25;25;25;25;25;25;25;25;25;25;
25;25;25;25;25;25;25;25;25;25;
25;25;25;25;25;25;25;25;25;25;
25;25;25;25;25;25;25;25;25;25;
25;25;25;25;25;25;25;25;25;25;
25;25;25;25;25;25;25;25;25;25;
25;25;25;25;25;25;25;25;25;25;
25;25;25;25;25;25;25;25;25;25;
25;25;25;25;25;25;25;25;25;25;
25;25;25;25;25;25;25;25;25;25;
25;25;25;25;25;25;25;25;25;25;
25;25;25;25;25;25;25;25;25;25;
25;25;25;25;25;25;25;25;25;25;
25;25;25;25;25;25;25;25;25;25;
25;25;25;25;25;25;25;25;25;25;
25;25;25;25;25;25;25;25;25;25;
25;25;25;25;25;25;25;25;25;25;
25;25;25;25;25;25;25;25;25;25;
25;25;25;25;25;25;25;25;25;25;
25;25;25;25;25;25;25;25;25;25;
25;25;25;25;25;25;25;25;25;25;
25;25;25;25;25;25;25;25;25;25;
25;25;25;25;25;25;25;25;25;25;
25;25;25;25;25;25;25;25;25;25;
25;25;25;25;25;25;25;25;25;25;
25;25;25;25;25;25;25;25;25;25;
25;25;25;25;25;25;25;25;25;25;
25;25;25;25;25;25;25;25;25;25;
25;25;25;25;25;25;25;25;25;25;
25;25;25;25;25;25;25;25;25;25;
25;25;25;25;25;25;25;25;25;25;
25;25;25;25;25;25;25;25;25;25;
25;25;25;25;25;25;25;25;25;25;
25;25;25;25;25;25;25;25;25;25;
25;25;25;25;25;25;25;25;25;25;
25;25;25;25;25;25;25;25;25;25;
25;25;25;25;25;25;25;25;25;25;
25;25;25;25;25;25;25;25;25;25;
25;25;25;25;25;25;25;25;25;25;
25;25;25;25;25;25;25;25;25;25;
25;25;25;25;25;25;25;25;25;25;
25;25;25;25;25;25;25;25;25;25;
25;25;25;25;25;25;25;25;25;25;
25;25;25;25;25;25;25;25;25;25;
25;25;25;25;25;25;25;25;25;25;
25;25;25;25;25;25;25;25;25;25;
25;25;25;25;25;25;25;25;25;25;
25;25;25;25;25;25;25;25;25;25;
25;25;25;25;25;25;25;25;25;25;
25;25;25;25;25;25;25;25;25;25;
25;25;25;25;25;25;25;25;25;25;
25;25;25;25;25;25;25;25;25;25;
25;25;25;25;25;25;25;25;25;25;
25;25;25;25;25;25;25;25;25;25;
25;25;25;25;25;25;25;25;25;25;
25;25;25;25;25;25;25;25;25;25;
25;25;25;25;25;25;25;25;25;25;
25;25;25;25;25;25;25;25;25;25;
25;25;25;25;25;25;25;25;25;25;
25;25;25;25;25;25;25;25;25;25;
25;25;25;25;25;25;25;25;25;25;
25;25;25;25;25;25;25;25;25;25;
25;25;25;25;25;25;25;25;25;25;
25;25;25;25;25;25;25;25;25;25;
25;25;25;25;25;25;25;25;25;25;
25;25;25;25;25;25;25;25;25;25;
25;25;25;25;25;25;25;25;25;25;
25;25;25;25;25;25;25;25;25;25;
25;25;25;25;25;25;25;25;25;25;
25;25;25;25;25;25;25;25;25;25;
25;25;25;25;25;25;25;25;25;25;
25;25;25;25;25;25;25;25;25;25;
25;25;25;25;25;25;25;25;25;25;
25;25;25;25;25;25;25;25;25;25;
25;25;25;25;25;25;25;25;25;25;
25;25;25;25;25;25;25;25;25;25;
25;25;25;25;25;25;25;25;25;25;
25;25;25;25;25;25;25;25;25;25;
25;25;25;25;25;25;25;25;25;25;
25;25;25;25;25;25;25;25;25;25;
25;25;25;25;25;25;25;25;25;25;
25;25;25;25;25;25;25;25;25;25;
25;25;25;25;25;25;25;25;25;25;
25;25;25;25;25;25;25;25;25;25;
25;25;25;25;25;25;25;25;25;25;
25;25;25;25;25;25;25;25;25;25;
25;25;25;25;25;25;25;25;25;25;
25;25;25;25;25;25;25;25;25;25;
25;25;25;25;25;25;25;25;25;25;
25;25;25;25;25;25;25;25;25;25;
25;25;25;25;25;25;25;25;25;25;
25;25;25;25;25;25;25;25;25;25;
25;25;25;25;25;25;25;25;25;25;
25;25;25;25;25;25;25;25;25;25;
25;25;25;25;25;25;25;25;25;25;
25;25;25;25;25;25;25;25;25;25;
25;25;25;25;25;25;25;25;25;25;
25;25;25;25;25;25;25;25;25;25;
25;25;25;25;25;25;25;25;25;25;
25;25;25;25;25;25;25;25;25;25;
25;25;25;25;25;25;25;25;25;25;
25;25;25;25;25;25;      };
     };
     int_Data @[2] {
      UserDataItem_List @*(.user_data_) {
       name="UserDataItem_List_17";
       el_typ=UserDataItem;
       el_def=0;
       UserDataItem @[0] {name="NARROW": value=1: val_type_fixed=0: };
      };
      name="trial";
      col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=8;
      matrix_col_width=10;
      ar {
       name="ar";
      [1206] 0;1;2;3;4;5;6;7;8;9;
10;11;12;13;14;15;16;17;18;19;
20;21;22;23;24;25;26;27;28;29;
30;31;32;33;34;35;36;37;38;39;
40;41;42;43;44;45;46;47;48;49;
50;51;52;53;54;55;56;57;58;59;
60;61;62;63;64;65;66;67;68;69;
70;71;72;73;74;75;76;77;78;79;
80;81;82;83;84;85;86;87;88;89;
90;91;92;93;94;95;96;97;98;99;
100;101;102;103;104;105;106;107;108;109;
110;111;112;113;114;115;116;117;118;119;
120;121;122;123;124;125;126;127;128;129;
130;131;132;133;134;135;136;137;138;139;
140;141;142;143;144;145;146;147;148;149;
150;151;152;153;154;155;156;157;158;159;
160;161;162;163;164;165;166;167;168;169;
170;171;172;173;174;175;176;177;178;179;
180;181;182;183;184;185;186;187;188;189;
190;191;192;193;194;195;196;197;198;199;
200;201;202;203;204;205;206;207;208;209;
210;211;212;213;214;215;216;217;218;219;
220;221;222;223;224;225;226;227;228;229;
230;231;232;233;234;235;236;237;238;239;
240;241;242;243;244;245;246;247;248;249;
250;251;252;253;254;255;256;257;258;259;
260;261;262;263;264;265;266;267;268;269;
270;271;272;273;274;275;276;277;278;279;
280;281;282;283;284;285;286;287;288;289;
290;291;292;293;294;295;296;297;298;299;
300;301;302;303;304;305;306;307;308;309;
310;311;312;313;314;315;316;317;318;319;
320;321;322;323;324;325;326;327;328;329;
330;331;332;333;334;335;336;337;338;339;
340;341;342;343;344;345;346;347;348;349;
350;351;352;353;354;355;356;357;358;359;
360;361;362;363;364;365;366;367;368;369;
370;371;372;373;374;375;376;377;378;379;
380;381;382;383;384;385;386;387;388;389;
390;391;392;393;394;395;396;397;398;399;
400;401;402;403;404;405;406;407;408;409;
410;411;412;413;414;415;416;417;418;419;
420;421;422;423;424;425;426;427;428;429;
430;431;432;433;434;435;436;437;438;439;
440;441;442;443;444;445;446;447;448;449;
450;451;452;453;454;455;456;457;458;459;
460;461;462;463;464;465;466;467;468;469;
470;471;472;473;474;475;476;477;478;479;
480;481;482;483;484;485;486;487;488;489;
490;491;492;493;494;495;496;497;498;499;
500;501;502;503;504;505;506;507;508;509;
510;511;512;513;514;515;516;517;518;519;
520;521;522;523;524;525;526;527;528;529;
530;531;532;533;534;535;536;537;538;539;
540;541;542;543;544;545;546;547;548;549;
550;551;552;553;554;555;556;557;558;559;
560;561;562;563;564;565;566;567;568;569;
570;571;572;573;574;575;576;577;578;579;
580;581;582;583;584;585;586;587;588;589;
590;591;592;593;594;595;596;597;598;599;
600;601;602;603;604;605;606;607;608;609;
610;611;612;613;614;615;616;617;618;619;
620;621;622;623;624;625;626;627;628;629;
630;631;632;633;634;635;636;637;638;639;
640;641;642;643;644;645;646;647;648;649;
650;651;652;653;654;655;656;657;658;659;
660;661;662;663;664;665;666;667;668;669;
670;671;672;673;674;675;676;677;678;679;
680;681;682;683;684;685;686;687;688;689;
690;691;692;693;694;695;696;697;698;699;
700;701;702;703;704;705;706;707;708;709;
710;711;712;713;714;715;716;717;718;719;
720;721;722;723;724;725;726;727;728;729;
730;731;732;733;734;735;736;737;738;739;
740;741;742;743;744;745;746;747;748;749;
750;751;752;753;754;755;756;757;758;759;
760;761;762;763;764;765;766;767;768;769;
770;771;772;773;774;775;776;777;778;779;
780;781;782;783;784;785;786;787;788;789;
790;791;792;793;794;795;796;797;798;799;
800;801;802;803;804;805;806;807;808;809;
810;811;812;813;814;815;816;817;818;819;
820;821;822;823;824;825;826;827;828;829;
830;831;832;833;834;835;836;837;838;839;
840;841;842;843;844;845;846;847;848;849;
850;851;852;853;854;855;856;857;858;859;
860;861;862;863;864;865;866;867;868;869;
870;871;872;873;874;875;876;877;878;879;
880;881;882;883;884;885;886;887;888;889;
890;891;892;893;894;895;896;897;898;899;
900;901;902;903;904;905;906;907;908;909;
910;911;912;913;914;915;916;917;918;919;
920;921;922;923;924;925;926;927;928;929;
930;931;932;933;934;935;936;937;938;939;
940;941;942;943;944;945;946;947;948;949;
950;951;952;953;954;955;956;957;958;959;
960;961;962;963;964;965;966;967;968;969;
970;971;972;973;974;975;976;977;978;979;
980;981;982;983;984;985;986;987;988;989;
990;991;992;993;994;995;996;997;998;999;
1000;1001;1002;1003;1004;1005;1006;1007;1008;1009;
1010;1011;1012;1013;1014;1015;1016;1017;1018;1019;
1020;1021;1022;1023;1024;1025;1026;1027;1028;1029;
1030;1031;1032;1033;1034;1035;1036;1037;1038;1039;
1040;1041;1042;1043;1044;1045;1046;1047;1048;1049;
1050;1051;1052;1053;1054;1055;1056;1057;1058;1059;
1060;1061;1062;1063;1064;1065;1066;1067;1068;1069;
1070;1071;1072;1073;1074;1075;1076;1077;1078;1079;
1080;1081;1082;1083;1084;1085;1086;1087;1088;1089;
1090;1091;1092;1093;1094;1095;1096;1097;1098;1099;
1100;1101;1102;1103;1104;1105;1106;1107;1108;1109;
1110;1111;1112;1113;1114;1115;1116;1117;1118;1119;
1120;1121;1122;1123;1124;1125;1126;1127;1128;1129;
1130;1131;1132;1133;1134;1135;1136;1137;1138;1139;
1140;1141;1142;1143;1144;1145;1146;1147;1148;1149;
1150;1151;1152;1153;1154;1155;1156;1157;1158;1159;
1160;1161;1162;1163;1164;1165;1166;1167;1168;1169;
1170;1171;1172;1173;1174;1175;1176;1177;1178;1179;
1180;1181;1182;1183;1184;1185;1186;1187;1188;1189;
1190;1191;1192;1193;1194;1195;1196;1197;1198;1199;
1200;1201;1202;1203;1204;1205;      };
     };
     String_Data @[3] {
      name="trial_name";
      col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
      ar {
       name="ar";
      [1206] "N126_20150120_233000_20150120_235000";"N126_20150118_153000_20150118_155000";"N126_20150120_130000_20150120_132000";"N126_20150104_043000_20150104_045000";"N126_20150129_020000_20150129_022000";"N126_20150107_173000_20150107_175000";"N126_20150128_000000_20150128_002000";"N126_20150118_053000_20150118_055000";"N126_20150122_190000_20150122_192000";"N126_20150113_223000_20150113_225000";
"N126_20150126_070000_20150126_072000";"N126_20150104_193000_20150104_195000";"N126_20150104_070000_20150104_072000";"N126_20150127_160000_20150127_162000";"N126_20150106_103000_20150106_105000";"N126_20150112_003000_20150112_005000";"N126_20150106_190000_20150106_192000";"N126_20150116_000000_20150116_002000";"N126_20150120_203000_20150120_205000";"N126_20150107_193000_20150107_195000";
"N126_20150126_063000_20150126_065000";"N126_20150124_023000_20150124_025000";"N126_20150129_043000_20150129_045000";"N126_20150108_120000_20150108_122000";"N126_20150121_190000_20150121_192000";"N126_20150121_140000_20150121_142000";"N126_20150119_093000_20150119_095000";"N126_20150101_073000_20150101_075000";"N126_20150111_120000_20150111_122000";"N126_20150107_040000_20150107_042000";
"N126_20150127_133000_20150127_135000";"N126_20150102_233000_20150102_235000";"N126_20150122_080000_20150122_082000";"N126_20150108_133000_20150108_135000";"N126_20150114_190000_20150114_192000";"N126_20150125_180000_20150125_182000";"N126_20150112_000000_20150112_002000";"N126_20150118_070000_20150118_072000";"N126_20150129_053000_20150129_055000";"N126_20150115_040000_20150115_042000";
"N126_20150113_060000_20150113_062000";"N126_20150115_100000_20150115_102000";"N126_20150125_200000_20150125_202000";"N126_20150104_100000_20150104_102000";"N126_20150110_043000_20150110_045000";"N126_20150116_060000_20150116_062000";"N126_20150124_113000_20150124_115000";"N126_20150126_053000_20150126_055000";"N126_20150111_190000_20150111_192000";"N126_20150130_093000_20150130_095000";
"N126_20150123_023000_20150123_025000";"N126_20150113_000000_20150113_002000";"N126_20150127_130000_20150127_132000";"N126_20150122_223000_20150122_225000";"N126_20150117_153000_20150117_155000";"N126_20150104_123000_20150104_125000";"N126_20150111_080000_20150111_082000";"N126_20150106_070000_20150106_072000";"N126_20150116_220000_20150116_222000";"N126_20150110_003000_20150110_005000";
"N126_20150122_133000_20150122_135000";"N126_20150101_163000_20150101_165000";"N126_20150114_133000_20150114_135000";"N126_20150108_090000_20150108_092000";"N126_20150126_170000_20150126_172000";"N126_20150115_190000_20150115_192000";"N126_20150111_163000_20150111_165000";"N126_20150110_220000_20150110_222000";"N126_20150126_090000_20150126_092000";"N126_20150127_170000_20150127_172000";
"N126_20150129_140000_20150129_142000";"N126_20150111_020000_20150111_022000";"N126_20150119_050000_20150119_052000";"N126_20150126_020000_20150126_022000";"N126_20150104_050000_20150104_052000";"N126_20150116_123000_20150116_125000";"N126_20150103_060000_20150103_062000";"N126_20150111_123000_20150111_125000";"N126_20150117_210000_20150117_212000";"N126_20150108_103000_20150108_105000";
"N126_20150116_210000_20150116_212000";"N126_20150112_160000_20150112_162000";"N126_20150118_040000_20150118_042000";"N126_20150110_170000_20150110_172000";"N126_20150124_170000_20150124_172000";"N126_20150129_033000_20150129_035000";"N126_20150107_143000_20150107_145000";"N126_20150104_120000_20150104_122000";"N126_20150126_210000_20150126_212000";"N126_20150108_060000_20150108_062000";
"N126_20150121_040000_20150121_042000";"N126_20150122_053000_20150122_055000";"N126_20150115_183000_20150115_185000";"N126_20150128_123000_20150128_125000";"N126_20150131_113000_20150131_115000";"N126_20150120_103000_20150120_105000";"N126_20150109_020000_20150109_022000";"N126_20150116_210000_20150116_212000";"N126_20150127_190000_20150127_192000";"N126_20150110_113000_20150110_115000";
"N126_20150108_223000_20150108_225000";"N126_20150128_153000_20150128_155000";"N126_20150121_070000_20150121_072000";"N126_20150101_060000_20150101_062000";"N126_20150102_173000_20150102_175000";"N126_20150114_093000_20150114_095000";"N126_20150116_043000_20150116_045000";"N126_20150120_150000_20150120_152000";"N126_20150120_083000_20150120_085000";"N126_20150105_180000_20150105_182000";
"N126_20150104_140000_20150104_142000";"N126_20150115_093000_20150115_095000";"N126_20150126_170000_20150126_172000";"N126_20150116_030000_20150116_032000";"N126_20150123_030000_20150123_032000";"N126_20150105_023000_20150105_025000";"N126_20150120_180000_20150120_182000";"N126_20150124_033000_20150124_035000";"N126_20150125_073000_20150125_075000";"N126_20150118_113000_20150118_115000";
"N126_20150106_020000_20150106_022000";"N126_20150127_120000_20150127_122000";"N126_20150106_053000_20150106_055000";"N126_20150107_200000_20150107_202000";"N126_20150103_103000_20150103_105000";"N126_20150111_083000_20150111_085000";"N126_20150124_003000_20150124_005000";"N126_20150102_130000_20150102_132000";"N126_20150101_100000_20150101_102000";"N126_20150112_140000_20150112_142000";
"N126_20150128_130000_20150128_132000";"N126_20150105_030000_20150105_032000";"N126_20150120_053000_20150120_055000";"N126_20150129_123000_20150129_125000";"N126_20150125_163000_20150125_165000";"N126_20150121_133000_20150121_135000";"N126_20150129_200000_20150129_202000";"N126_20150105_120000_20150105_122000";"N126_20150101_083000_20150101_085000";"N126_20150126_113000_20150126_115000";
"N126_20150127_080000_20150127_082000";"N126_20150118_003000_20150118_005000";"N126_20150127_023000_20150127_025000";"N126_20150102_223000_20150102_225000";"N126_20150114_163000_20150114_165000";"N126_20150120_063000_20150120_065000";"N126_20150108_063000_20150108_065000";"N126_20150131_030000_20150131_032000";"N126_20150102_033000_20150102_035000";"N126_20150115_153000_20150115_155000";
"N126_20150131_200000_20150131_202000";"N126_20150111_203000_20150111_205000";"N126_20150131_170000_20150131_172000";"N126_20150104_223000_20150104_225000";"N126_20150129_103000_20150129_105000";"N126_20150129_120000_20150129_122000";"N126_20150115_143000_20150115_145000";"N126_20150109_000000_20150109_002000";"N126_20150120_043000_20150120_045000";"N126_20150112_090000_20150112_092000";
"N126_20150114_113000_20150114_115000";"N126_20150106_120000_20150106_122000";"N126_20150120_183000_20150120_185000";"N126_20150121_213000_20150121_215000";"N126_20150116_073000_20150116_075000";"N126_20150106_193000_20150106_195000";"N126_20150105_050000_20150105_052000";"N126_20150111_213000_20150111_215000";"N126_20150130_093000_20150130_095000";"N126_20150116_130000_20150116_132000";
"N126_20150122_213000_20150122_215000";"N126_20150105_143000_20150105_145000";"N126_20150112_183000_20150112_185000";"N126_20150121_093000_20150121_095000";"N126_20150123_153000_20150123_155000";"N126_20150127_040000_20150127_042000";"N126_20150115_023000_20150115_025000";"N126_20150102_130000_20150102_132000";"N126_20150110_063000_20150110_065000";"N126_20150102_090000_20150102_092000";
"N126_20150126_023000_20150126_025000";"N126_20150126_190000_20150126_192000";"N126_20150104_210000_20150104_212000";"N126_20150109_010000_20150109_012000";"N126_20150111_060000_20150111_062000";"N126_20150131_043000_20150131_045000";"N126_20150114_203000_20150114_205000";"N126_20150126_213000_20150126_215000";"N126_20150105_000000_20150105_002000";"N126_20150118_040000_20150118_042000";
"N126_20150130_073000_20150130_075000";"N126_20150101_073000_20150101_075000";"N126_20150119_030000_20150119_032000";"N126_20150115_003000_20150115_005000";"N126_20150114_043000_20150114_045000";"N126_20150106_210000_20150106_212000";"N126_20150108_180000_20150108_182000";"N126_20150113_233000_20150113_235000";"N126_20150125_090000_20150125_092000";"N126_20150110_120000_20150110_122000";
"N126_20150126_080000_20150126_082000";"N126_20150122_143000_20150122_145000";"N126_20150106_180000_20150106_182000";"N126_20150119_210000_20150119_212000";"N126_20150125_063000_20150125_065000";"N126_20150118_210000_20150118_212000";"N126_20150109_163000_20150109_165000";"N126_20150101_010000_20150101_012000";"N126_20150108_053000_20150108_055000";"N126_20150125_010000_20150125_012000";
"N126_20150118_020000_20150118_022000";"N126_20150131_100000_20150131_102000";"N126_20150130_123000_20150130_125000";"N126_20150122_103000_20150122_105000";"N126_20150131_080000_20150131_082000";"N126_20150130_170000_20150130_172000";"N126_20150129_190000_20150129_192000";"N126_20150112_010000_20150112_012000";"N126_20150126_133000_20150126_135000";"N126_20150106_030000_20150106_032000";
"N126_20150126_140000_20150126_142000";"N126_20150104_033000_20150104_035000";"N126_20150116_120000_20150116_122000";"N126_20150115_030000_20150115_032000";"N126_20150104_033000_20150104_035000";"N126_20150104_183000_20150104_185000";"N126_20150123_210000_20150123_212000";"N126_20150108_003000_20150108_005000";"N126_20150118_090000_20150118_092000";"N126_20150130_193000_20150130_195000";
"N126_20150114_130000_20150114_132000";"N126_20150121_140000_20150121_142000";"N126_20150118_073000_20150118_075000";"N126_20150118_050000_20150118_052000";"N126_20150105_133000_20150105_135000";"N126_20150129_090000_20150129_092000";"N126_20150107_033000_20150107_035000";"N126_20150120_070000_20150120_072000";"N126_20150117_130000_20150117_132000";"N126_20150125_000000_20150125_002000";
"N126_20150114_043000_20150114_045000";"N126_20150116_193000_20150116_195000";"N126_20150106_000000_20150106_002000";"N126_20150116_080000_20150116_082000";"N126_20150107_150000_20150107_152000";"N126_20150102_000000_20150102_002000";"N126_20150116_013000_20150116_015000";"N126_20150116_080000_20150116_082000";"N126_20150101_213000_20150101_215000";"N126_20150107_193000_20150107_195000";
"N126_20150119_030000_20150119_032000";"N126_20150121_210000_20150121_212000";"N126_20150106_133000_20150106_135000";"N126_20150131_040000_20150131_042000";"N126_20150102_053000_20150102_055000";"N126_20150118_233000_20150118_235000";"N126_20150112_143000_20150112_145000";"N126_20150130_143000_20150130_145000";"N126_20150130_043000_20150130_045000";"N126_20150115_193000_20150115_195000";
"N126_20150108_050000_20150108_052000";"N126_20150128_133000_20150128_135000";"N126_20150127_060000_20150127_062000";"N126_20150127_210000_20150127_212000";"N126_20150115_173000_20150115_175000";"N126_20150121_150000_20150121_152000";"N126_20150106_043000_20150106_045000";"N126_20150131_223000_20150131_225000";"N126_20150113_030000_20150113_032000";"N126_20150129_163000_20150129_165000";
"N126_20150112_220000_20150112_222000";"N126_20150102_050000_20150102_052000";"N126_20150114_090000_20150114_092000";"N126_20150123_023000_20150123_025000";"N126_20150104_180000_20150104_182000";"N126_20150131_083000_20150131_085000";"N126_20150115_130000_20150115_132000";"N126_20150130_173000_20150130_175000";"N126_20150117_200000_20150117_202000";"N126_20150125_213000_20150125_215000";
"N126_20150124_023000_20150124_025000";"N126_20150127_073000_20150127_075000";"N126_20150104_220000_20150104_222000";"N126_20150115_063000_20150115_065000";"N126_20150127_140000_20150127_142000";"N126_20150128_170000_20150128_172000";"N126_20150106_130000_20150106_132000";"N126_20150105_130000_20150105_132000";"N126_20150103_220000_20150103_222000";"N126_20150118_233000_20150118_235000";
"N126_20150104_063000_20150104_065000";"N126_20150123_123000_20150123_125000";"N126_20150130_050000_20150130_052000";"N126_20150103_050000_20150103_052000";"N126_20150125_023000_20150125_025000";"N126_20150112_030000_20150112_032000";"N126_20150116_000000_20150116_002000";"N126_20150109_220000_20150109_222000";"N126_20150119_130000_20150119_132000";"N126_20150117_063000_20150117_065000";
"N126_20150121_073000_20150121_075000";"N126_20150114_063000_20150114_065000";"N126_20150105_170000_20150105_172000";"N126_20150122_103000_20150122_105000";"N126_20150102_043000_20150102_045000";"N126_20150102_190000_20150102_192000";"N126_20150110_133000_20150110_135000";"N126_20150119_183000_20150119_185000";"N126_20150106_020000_20150106_022000";"N126_20150130_123000_20150130_125000";
"N126_20150113_160000_20150113_162000";"N126_20150126_153000_20150126_155000";"N126_20150127_040000_20150127_042000";"N126_20150119_190000_20150119_192000";"N126_20150117_160000_20150117_162000";"N126_20150118_010000_20150118_012000";"N126_20150130_080000_20150130_082000";"N126_20150118_093000_20150118_095000";"N126_20150116_183000_20150116_185000";"N126_20150104_150000_20150104_152000";
"N126_20150115_050000_20150115_052000";"N126_20150120_140000_20150120_142000";"N126_20150112_030000_20150112_032000";"N126_20150112_123000_20150112_125000";"N126_20150102_113000_20150102_115000";"N126_20150121_223000_20150121_225000";"N126_20150110_100000_20150110_102000";"N126_20150113_210000_20150113_212000";"N126_20150113_043000_20150113_045000";"N126_20150115_003000_20150115_005000";
"N126_20150119_083000_20150119_085000";"N126_20150129_223000_20150129_225000";"N126_20150106_053000_20150106_055000";"N126_20150110_033000_20150110_035000";"N126_20150126_053000_20150126_055000";"N126_20150124_043000_20150124_045000";"N126_20150124_103000_20150124_105000";"N126_20150116_223000_20150116_225000";"N126_20150102_170000_20150102_172000";"N126_20150124_193000_20150124_195000";
"N126_20150101_033000_20150101_035000";"N126_20150115_190000_20150115_192000";"N126_20150109_093000_20150109_095000";"N126_20150126_103000_20150126_105000";"N126_20150111_140000_20150111_142000";"N126_20150107_233000_20150107_235000";"N126_20150104_133000_20150104_135000";"N126_20150112_203000_20150112_205000";"N126_20150124_180000_20150124_182000";"N126_20150128_233000_20150128_235000";
"N126_20150102_003000_20150102_005000";"N126_20150125_233000_20150125_235000";"N126_20150104_083000_20150104_085000";"N126_20150122_123000_20150122_125000";"N126_20150110_173000_20150110_175000";"N126_20150130_050000_20150130_052000";"N126_20150104_210000_20150104_212000";"N126_20150115_220000_20150115_222000";"N126_20150108_140000_20150108_142000";"N126_20150118_193000_20150118_195000";
"N126_20150120_020000_20150120_022000";"N126_20150117_223000_20150117_225000";"N126_20150101_153000_20150101_155000";"N126_20150126_020000_20150126_022000";"N126_20150123_143000_20150123_145000";"N126_20150131_103000_20150131_105000";"N126_20150131_183000_20150131_185000";"N126_20150101_023000_20150101_025000";"N126_20150116_173000_20150116_175000";"N126_20150106_213000_20150106_215000";
"N126_20150129_003000_20150129_005000";"N126_20150118_103000_20150118_105000";"N126_20150127_220000_20150127_222000";"N126_20150129_050000_20150129_052000";"N126_20150123_130000_20150123_132000";"N126_20150108_203000_20150108_205000";"N126_20150125_143000_20150125_145000";"N126_20150128_043000_20150128_045000";"N126_20150121_063000_20150121_065000";"N126_20150129_030000_20150129_032000";
"N126_20150112_103000_20150112_105000";"N126_20150108_003000_20150108_005000";"N126_20150121_080000_20150121_082000";"N126_20150109_203000_20150109_205000";"N126_20150114_103000_20150114_105000";"N126_20150117_143000_20150117_145000";"N126_20150113_150000_20150113_152000";"N126_20150106_160000_20150106_162000";"N126_20150123_170000_20150123_172000";"N126_20150129_160000_20150129_162000";
"N126_20150118_030000_20150118_032000";"N126_20150117_123000_20150117_125000";"N126_20150128_190000_20150128_192000";"N126_20150120_123000_20150120_125000";"N126_20150128_040000_20150128_042000";"N126_20150112_090000_20150112_092000";"N126_20150120_223000_20150120_225000";"N126_20150131_150000_20150131_152000";"N126_20150105_063000_20150105_065000";"N126_20150112_020000_20150112_022000";
"N126_20150111_033000_20150111_035000";"N126_20150111_200000_20150111_202000";"N126_20150105_013000_20150105_015000";"N126_20150131_073000_20150131_075000";"N126_20150108_073000_20150108_075000";"N126_20150122_223000_20150122_225000";"N126_20150109_143000_20150109_145000";"N126_20150110_033000_20150110_035000";"N126_20150119_170000_20150119_172000";"N126_20150107_223000_20150107_225000";
"N126_20150110_190000_20150110_192000";"N126_20150124_223000_20150124_225000";"N126_20150119_160000_20150119_162000";"N126_20150127_113000_20150127_115000";"N126_20150108_190000_20150108_192000";"N126_20150107_003000_20150107_005000";"N126_20150115_223000_20150115_225000";"N126_20150104_043000_20150104_045000";"N126_20150103_093000_20150103_095000";"N126_20150124_083000_20150124_085000";
"N126_20150101_043000_20150101_045000";"N126_20150123_013000_20150123_015000";"N126_20150128_023000_20150128_025000";"N126_20150124_040000_20150124_042000";"N126_20150110_210000_20150110_212000";"N126_20150114_030000_20150114_032000";"N126_20150120_033000_20150120_035000";"N126_20150119_173000_20150119_175000";"N126_20150112_140000_20150112_142000";"N126_20150112_213000_20150112_215000";
"N126_20150117_120000_20150117_122000";"N126_20150112_000000_20150112_002000";"N126_20150131_070000_20150131_072000";"N126_20150128_000000_20150128_002000";"N126_20150105_140000_20150105_142000";"N126_20150103_023000_20150103_025000";"N126_20150130_203000_20150130_205000";"N126_20150104_173000_20150104_175000";"N126_20150120_123000_20150120_125000";"N126_20150120_200000_20150120_202000";
"N126_20150131_023000_20150131_025000";"N126_20150121_170000_20150121_172000";"N126_20150116_100000_20150116_102000";"N126_20150131_163000_20150131_165000";"N126_20150130_100000_20150130_102000";"N126_20150101_203000_20150101_205000";"N126_20150126_180000_20150126_182000";"N126_20150111_193000_20150111_195000";"N126_20150101_070000_20150101_072000";"N126_20150103_053000_20150103_055000";
"N126_20150125_140000_20150125_142000";"N126_20150110_160000_20150110_162000";"N126_20150119_140000_20150119_142000";"N126_20150105_083000_20150105_085000";"N126_20150113_180000_20150113_182000";"N126_20150131_213000_20150131_215000";"N126_20150110_060000_20150110_062000";"N126_20150105_073000_20150105_075000";"N126_20150119_113000_20150119_115000";"N126_20150106_050000_20150106_052000";
"N126_20150109_090000_20150109_092000";"N126_20150101_173000_20150101_175000";"N126_20150109_203000_20150109_205000";"N126_20150118_073000_20150118_075000";"N126_20150122_183000_20150122_185000";"N126_20150116_200000_20150116_202000";"N126_20150117_213000_20150117_215000";"N126_20150105_213000_20150105_215000";"N126_20150117_060000_20150117_062000";"N126_20150121_150000_20150121_152000";
"N126_20150130_183000_20150130_185000";"N126_20150115_113000_20150115_115000";"N126_20150124_200000_20150124_202000";"N126_20150115_200000_20150115_202000";"N126_20150109_153000_20150109_155000";"N126_20150117_203000_20150117_205000";"N126_20150101_150000_20150101_152000";"N126_20150125_040000_20150125_042000";"N126_20150125_020000_20150125_022000";"N126_20150130_180000_20150130_182000";
"N126_20150121_083000_20150121_085000";"N126_20150115_013000_20150115_015000";"N126_20150116_120000_20150116_122000";"N126_20150112_013000_20150112_015000";"N126_20150122_080000_20150122_082000";"N126_20150108_053000_20150108_055000";"N126_20150129_040000_20150129_042000";"N126_20150119_023000_20150119_025000";"N126_20150117_133000_20150117_135000";"N126_20150116_163000_20150116_165000";
"N126_20150109_093000_20150109_095000";"N126_20150118_173000_20150118_175000";"N126_20150105_173000_20150105_175000";"N126_20150109_043000_20150109_045000";"N126_20150124_103000_20150124_105000";"N126_20150105_233000_20150105_235000";"N126_20150129_213000_20150129_215000";"N126_20150129_190000_20150129_192000";"N126_20150115_090000_20150115_092000";"N126_20150121_000000_20150121_002000";
"N126_20150122_140000_20150122_142000";"N126_20150108_220000_20150108_222000";"N126_20150103_120000_20150103_122000";"N126_20150113_013000_20150113_015000";"N126_20150108_150000_20150108_152000";"N126_20150126_070000_20150126_072000";"N126_20150112_073000_20150112_075000";"N126_20150101_090000_20150101_092000";"N126_20150119_063000_20150119_065000";"N126_20150114_153000_20150114_155000";
"N126_20150117_013000_20150117_015000";"N126_20150119_080000_20150119_082000";"N126_20150118_010000_20150118_012000";"N126_20150102_063000_20150102_065000";"N126_20150106_200000_20150106_202000";"N126_20150126_200000_20150126_202000";"N126_20150111_003000_20150111_005000";"N126_20150102_203000_20150102_205000";"N126_20150103_153000_20150103_155000";"N126_20150111_080000_20150111_082000";
"N126_20150115_203000_20150115_205000";"N126_20150125_213000_20150125_215000";"N126_20150131_003000_20150131_005000";"N126_20150118_193000_20150118_195000";"N126_20150118_120000_20150118_122000";"N126_20150124_193000_20150124_195000";"N126_20150119_123000_20150119_125000";"N126_20150123_030000_20150123_032000";"N126_20150117_090000_20150117_092000";"N126_20150125_040000_20150125_042000";
"N126_20150124_033000_20150124_035000";"N126_20150113_033000_20150113_035000";"N126_20150102_093000_20150102_095000";"N126_20150123_113000_20150123_115000";"N126_20150119_143000_20150119_145000";"N126_20150111_170000_20150111_172000";"N126_20150107_013000_20150107_015000";"N126_20150115_030000_20150115_032000";"N126_20150104_170000_20150104_172000";"N126_20150108_153000_20150108_155000";
"N126_20150120_113000_20150120_115000";"N126_20150106_140000_20150106_142000";"N126_20150107_043000_20150107_045000";"N126_20150124_050000_20150124_052000";"N126_20150103_020000_20150103_022000";"N126_20150103_013000_20150103_015000";"N126_20150121_030000_20150121_032000";"N126_20150116_213000_20150116_215000";"N126_20150112_173000_20150112_175000";"N126_20150123_140000_20150123_142000";
"N126_20150106_013000_20150106_015000";"N126_20150105_033000_20150105_035000";"N126_20150111_120000_20150111_122000";"N126_20150126_150000_20150126_152000";"N126_20150117_173000_20150117_175000";"N126_20150120_143000_20150120_145000";"N126_20150107_023000_20150107_025000";"N126_20150113_183000_20150113_185000";"N126_20150129_093000_20150129_095000";"N126_20150105_073000_20150105_075000";
"N126_20150104_003000_20150104_005000";"N126_20150127_153000_20150127_155000";"N126_20150109_213000_20150109_215000";"N126_20150120_040000_20150120_042000";"N126_20150109_183000_20150109_185000";"N126_20150107_070000_20150107_072000";"N126_20150106_033000_20150106_035000";"N126_20150102_220000_20150102_222000";"N126_20150116_043000_20150116_045000";"N126_20150110_170000_20150110_172000";
"N126_20150116_113000_20150116_115000";"N126_20150121_013000_20150121_015000";"N126_20150109_193000_20150109_195000";"N126_20150123_220000_20150123_222000";"N126_20150116_223000_20150116_225000";"N126_20150107_030000_20150107_032000";"N126_20150101_133000_20150101_135000";"N126_20150125_083000_20150125_085000";"N126_20150108_093000_20150108_095000";"N126_20150128_140000_20150128_142000";
"N126_20150107_163000_20150107_165000";"N126_20150125_183000_20150125_185000";"N126_20150129_183000_20150129_185000";"N126_20150117_223000_20150117_225000";"N126_20150114_010000_20150114_012000";"N126_20150115_100000_20150115_102000";"N126_20150129_023000_20150129_025000";"N126_20150125_090000_20150125_092000";"N126_20150106_070000_20150106_072000";"N126_20150107_183000_20150107_185000";
"N126_20150106_203000_20150106_205000";"N126_20150102_180000_20150102_182000";"N126_20150101_143000_20150101_145000";"N126_20150112_130000_20150112_132000";"N126_20150116_190000_20150116_192000";"N126_20150119_010000_20150119_012000";"N126_20150104_093000_20150104_095000";"N126_20150115_210000_20150115_212000";"N126_20150127_050000_20150127_052000";"N126_20150129_213000_20150129_215000";
"N126_20150112_073000_20150112_075000";"N126_20150129_173000_20150129_175000";"N126_20150105_233000_20150105_235000";"N126_20150121_013000_20150121_015000";"N126_20150117_053000_20150117_055000";"N126_20150122_013000_20150122_015000";"N126_20150123_173000_20150123_175000";"N126_20150119_183000_20150119_185000";"N126_20150111_203000_20150111_205000";"N126_20150130_060000_20150130_062000";
"N126_20150128_170000_20150128_172000";"N126_20150131_183000_20150131_185000";"N126_20150106_213000_20150106_215000";"N126_20150121_033000_20150121_035000";"N126_20150102_190000_20150102_192000";"N126_20150110_083000_20150110_085000";"N126_20150106_030000_20150106_032000";"N126_20150114_193000_20150114_195000";"N126_20150128_163000_20150128_165000";"N126_20150117_030000_20150117_032000";
"N126_20150118_033000_20150118_035000";"N126_20150116_140000_20150116_142000";"N126_20150116_183000_20150116_185000";"N126_20150111_063000_20150111_065000";"N126_20150126_033000_20150126_035000";"N126_20150117_123000_20150117_125000";"N126_20150106_143000_20150106_145000";"N126_20150108_020000_20150108_022000";"N126_20150120_120000_20150120_122000";"N126_20150127_100000_20150127_102000";
"N126_20150117_140000_20150117_142000";"N126_20150109_173000_20150109_175000";"N126_20150104_003000_20150104_005000";"N126_20150108_203000_20150108_205000";"N126_20150119_180000_20150119_182000";"N126_20150119_063000_20150119_065000";"N126_20150107_030000_20150107_032000";"N126_20150111_000000_20150111_002000";"N126_20150131_033000_20150131_035000";"N126_20150122_050000_20150122_052000";
"N126_20150121_130000_20150121_132000";"N126_20150103_040000_20150103_042000";"N126_20150125_193000_20150125_195000";"N126_20150107_080000_20150107_082000";"N126_20150125_013000_20150125_015000";"N126_20150107_083000_20150107_085000";"N126_20150111_213000_20150111_215000";"N126_20150124_003000_20150124_005000";"N126_20150127_173000_20150127_175000";"N126_20150129_020000_20150129_022000";
"N126_20150107_130000_20150107_132000";"N126_20150108_033000_20150108_035000";"N126_20150107_170000_20150107_172000";"N126_20150101_083000_20150101_085000";"N126_20150105_100000_20150105_102000";"N126_20150111_013000_20150111_015000";"N126_20150128_233000_20150128_235000";"N126_20150105_080000_20150105_082000";"N126_20150119_000000_20150119_002000";"N126_20150102_200000_20150102_202000";
"N126_20150117_180000_20150117_182000";"N126_20150114_113000_20150114_115000";"N126_20150130_053000_20150130_055000";"N126_20150131_133000_20150131_135000";"N126_20150107_220000_20150107_222000";"N126_20150114_173000_20150114_175000";"N126_20150112_093000_20150112_095000";"N126_20150115_133000_20150115_135000";"N126_20150114_083000_20150114_085000";"N126_20150111_210000_20150111_212000";
"N126_20150125_003000_20150125_005000";"N126_20150130_233000_20150130_235000";"N126_20150108_220000_20150108_222000";"N126_20150102_103000_20150102_105000";"N126_20150101_113000_20150101_115000";"N126_20150127_143000_20150127_145000";"N126_20150106_190000_20150106_192000";"N126_20150120_090000_20150120_092000";"N126_20150123_020000_20150123_022000";"N126_20150131_123000_20150131_125000";
"N126_20150126_173000_20150126_175000";"N126_20150115_103000_20150115_105000";"N126_20150125_163000_20150125_165000";"N126_20150129_130000_20150129_132000";"N126_20150124_143000_20150124_145000";"N126_20150110_010000_20150110_012000";"N126_20150124_180000_20150124_182000";"N126_20150103_203000_20150103_205000";"N126_20150118_140000_20150118_142000";"N126_20150117_133000_20150117_135000";
"N126_20150113_003000_20150113_005000";"N126_20150126_050000_20150126_052000";"N126_20150120_063000_20150120_065000";"N126_20150105_160000_20150105_162000";"N126_20150113_193000_20150113_195000";"N126_20150131_180000_20150131_182000";"N126_20150101_140000_20150101_142000";"N126_20150113_120000_20150113_122000";"N126_20150114_123000_20150114_125000";"N126_20150111_003000_20150111_005000";
"N126_20150109_050000_20150109_052000";"N126_20150116_220000_20150116_222000";"N126_20150129_193000_20150129_195000";"N126_20150104_150000_20150104_152000";"N126_20150115_180000_20150115_182000";"N126_20150122_073000_20150122_075000";"N126_20150107_133000_20150107_135000";"N126_20150131_073000_20150131_075000";"N126_20150103_003000_20150103_005000";"N126_20150115_083000_20150115_085000";
"N126_20150124_183000_20150124_185000";"N126_20150103_193000_20150103_195000";"N126_20150110_150000_20150110_152000";"N126_20150120_053000_20150120_055000";"N126_20150129_080000_20150129_082000";"N126_20150123_010000_20150123_012000";"N126_20150118_170000_20150118_172000";"N126_20150110_090000_20150110_092000";"N126_20150113_050000_20150113_052000";"N126_20150129_153000_20150129_155000";
"N126_20150113_150000_20150113_152000";"N126_20150104_123000_20150104_125000";"N126_20150125_070000_20150125_072000";"N126_20150102_160000_20150102_162000";"N126_20150110_050000_20150110_052000";"N126_20150124_233000_20150124_235000";"N126_20150112_170000_20150112_172000";"N126_20150103_133000_20150103_135000";"N126_20150127_020000_20150127_022000";"N126_20150116_040000_20150116_042000";
"N126_20150131_180000_20150131_182000";"N126_20150123_050000_20150123_052000";"N126_20150127_000000_20150127_002000";"N126_20150123_203000_20150123_205000";"N126_20150117_050000_20150117_052000";"N126_20150105_173000_20150105_175000";"N126_20150129_233000_20150129_235000";"N126_20150115_020000_20150115_022000";"N126_20150113_203000_20150113_205000";"N126_20150119_180000_20150119_182000";
"N126_20150113_030000_20150113_032000";"N126_20150122_043000_20150122_045000";"N126_20150120_203000_20150120_205000";"N126_20150108_070000_20150108_072000";"N126_20150107_073000_20150107_075000";"N126_20150101_193000_20150101_195000";"N126_20150110_143000_20150110_145000";"N126_20150118_033000_20150118_035000";"N126_20150113_023000_20150113_025000";"N126_20150115_150000_20150115_152000";
"N126_20150124_093000_20150124_095000";"N126_20150103_163000_20150103_165000";"N126_20150104_013000_20150104_015000";"N126_20150105_040000_20150105_042000";"N126_20150122_210000_20150122_212000";"N126_20150109_113000_20150109_115000";"N126_20150111_000000_20150111_002000";"N126_20150105_220000_20150105_222000";"N126_20150128_070000_20150128_072000";"N126_20150124_130000_20150124_132000";
"N126_20150126_113000_20150126_115000";"N126_20150104_103000_20150104_105000";"N126_20150124_133000_20150124_135000";"N126_20150104_013000_20150104_015000";"N126_20150101_063000_20150101_065000";"N126_20150117_070000_20150117_072000";"N126_20150107_060000_20150107_062000";"N126_20150107_010000_20150107_012000";"N126_20150106_123000_20150106_125000";"N126_20150130_103000_20150130_105000";
"N126_20150121_200000_20150121_202000";"N126_20150127_193000_20150127_195000";"N126_20150120_220000_20150120_222000";"N126_20150107_143000_20150107_145000";"N126_20150125_133000_20150125_135000";"N126_20150130_193000_20150130_195000";"N126_20150118_130000_20150118_132000";"N126_20150104_170000_20150104_172000";"N126_20150101_170000_20150101_172000";"N126_20150129_050000_20150129_052000";
"N126_20150119_060000_20150119_062000";"N126_20150127_070000_20150127_072000";"N126_20150117_023000_20150117_025000";"N126_20150114_053000_20150114_055000";"N126_20150121_120000_20150121_122000";"N126_20150105_010000_20150105_012000";"N126_20150124_130000_20150124_132000";"N126_20150127_223000_20150127_225000";"N126_20150130_023000_20150130_025000";"N126_20150110_093000_20150110_095000";
"N126_20150130_163000_20150130_165000";"N126_20150128_133000_20150128_135000";"N126_20150125_203000_20150125_205000";"N126_20150102_113000_20150102_115000";"N126_20150120_070000_20150120_072000";"N126_20150113_010000_20150113_012000";"N126_20150131_103000_20150131_105000";"N126_20150109_140000_20150109_142000";"N126_20150126_160000_20150126_162000";"N126_20150118_180000_20150118_182000";
"N126_20150108_123000_20150108_125000";"N126_20150109_003000_20150109_005000";"N126_20150105_080000_20150105_082000";"N126_20150123_100000_20150123_102000";"N126_20150115_233000_20150115_235000";"N126_20150118_213000_20150118_215000";"N126_20150125_140000_20150125_142000";"N126_20150116_033000_20150116_035000";"N126_20150101_233000_20150101_235000";"N126_20150115_053000_20150115_055000";
"N126_20150107_013000_20150107_015000";"N126_20150124_203000_20150124_205000";"N126_20150109_120000_20150109_122000";"N126_20150102_020000_20150102_022000";"N126_20150112_220000_20150112_222000";"N126_20150120_153000_20150120_155000";"N126_20150112_040000_20150112_042000";"N126_20150129_133000_20150129_135000";"N126_20150123_093000_20150123_095000";"N126_20150104_070000_20150104_072000";
"N126_20150109_063000_20150109_065000";"N126_20150118_163000_20150118_165000";"N126_20150123_130000_20150123_132000";"N126_20150130_013000_20150130_015000";"N126_20150102_083000_20150102_085000";"N126_20150103_023000_20150103_025000";"N126_20150116_050000_20150116_052000";"N126_20150101_203000_20150101_205000";"N126_20150101_123000_20150101_125000";"N126_20150128_020000_20150128_022000";
"N126_20150127_073000_20150127_075000";"N126_20150114_200000_20150114_202000";"N126_20150115_073000_20150115_075000";"N126_20150112_200000_20150112_202000";"N126_20150114_183000_20150114_185000";"N126_20150122_200000_20150122_202000";"N126_20150122_193000_20150122_195000";"N126_20150108_210000_20150108_212000";"N126_20150117_190000_20150117_192000";"N126_20150105_223000_20150105_225000";
"N126_20150105_213000_20150105_215000";"N126_20150112_083000_20150112_085000";"N126_20150125_100000_20150125_102000";"N126_20150118_083000_20150118_085000";"N126_20150112_210000_20150112_212000";"N126_20150118_190000_20150118_192000";"N126_20150105_190000_20150105_192000";"N126_20150110_073000_20150110_075000";"N126_20150127_010000_20150127_012000";"N126_20150123_043000_20150123_045000";
"N126_20150120_220000_20150120_222000";"N126_20150131_060000_20150131_062000";"N126_20150113_173000_20150113_175000";"N126_20150124_010000_20150124_012000";"N126_20150117_203000_20150117_205000";"N126_20150129_133000_20150129_135000";"N126_20150129_083000_20150129_085000";"N126_20150103_213000_20150103_215000";"N126_20150109_213000_20150109_215000";"N126_20150107_123000_20150107_125000";
"N126_20150128_093000_20150128_095000";"N126_20150121_163000_20150121_165000";"N126_20150117_030000_20150117_032000";"N126_20150130_153000_20150130_155000";"N126_20150116_020000_20150116_022000";"N126_20150115_140000_20150115_142000";"N126_20150112_113000_20150112_115000";"N126_20150127_153000_20150127_155000";"N126_20150105_113000_20150105_115000";"N126_20150110_023000_20150110_025000";
"N126_20150131_153000_20150131_155000";"N126_20150122_060000_20150122_062000";"N126_20150123_013000_20150123_015000";"N126_20150107_173000_20150107_175000";"N126_20150111_193000_20150111_195000";"N126_20150113_183000_20150113_185000";"N126_20150117_193000_20150117_195000";"N126_20150114_040000_20150114_042000";"N126_20150108_223000_20150108_225000";"N126_20150122_100000_20150122_102000";
"N126_20150106_173000_20150106_175000";"N126_20150127_063000_20150127_065000";"N126_20150120_180000_20150120_182000";"N126_20150127_060000_20150127_062000";"N126_20150120_013000_20150120_015000";"N126_20150103_160000_20150103_162000";"N126_20150109_233000_20150109_235000";"N126_20150119_023000_20150119_025000";"N126_20150128_223000_20150128_225000";"N126_20150105_193000_20150105_195000";
"N126_20150106_130000_20150106_132000";"N126_20150106_090000_20150106_092000";"N126_20150105_013000_20150105_015000";"N126_20150120_120000_20150120_122000";"N126_20150105_090000_20150105_092000";"N126_20150117_040000_20150117_042000";"N126_20150103_070000_20150103_072000";"N126_20150117_183000_20150117_185000";"N126_20150103_140000_20150103_142000";"N126_20150124_083000_20150124_085000";
"N126_20150101_160000_20150101_162000";"N126_20150126_150000_20150126_152000";"N126_20150108_070000_20150108_072000";"N126_20150102_200000_20150102_202000";"N126_20150118_103000_20150118_105000";"N126_20150125_050000_20150125_052000";"N126_20150128_173000_20150128_175000";"N126_20150112_210000_20150112_212000";"N126_20150131_070000_20150131_072000";"N126_20150115_063000_20150115_065000";
"N126_20150109_033000_20150109_035000";"N126_20150104_103000_20150104_105000";"N126_20150124_173000_20150124_175000";"N126_20150126_190000_20150126_192000";"N126_20150111_153000_20150111_155000";"N126_20150131_013000_20150131_015000";"N126_20150113_123000_20150113_125000";"N126_20150127_030000_20150127_032000";"N126_20150130_100000_20150130_102000";"N126_20150108_043000_20150108_045000";
"N126_20150128_030000_20150128_032000";"N126_20150104_023000_20150104_025000";"N126_20150122_120000_20150122_122000";"N126_20150101_103000_20150101_105000";"N126_20150109_020000_20150109_022000";"N126_20150108_173000_20150108_175000";"N126_20150121_063000_20150121_065000";"N126_20150121_233000_20150121_235000";"N126_20150129_203000_20150129_205000";"N126_20150125_043000_20150125_045000";
"N126_20150114_183000_20150114_185000";"N126_20150124_113000_20150124_115000";"N126_20150103_113000_20150103_115000";"N126_20150120_040000_20150120_042000";"N126_20150105_220000_20150105_222000";"N126_20150101_060000_20150101_062000";"N126_20150129_180000_20150129_182000";"N126_20150122_003000_20150122_005000";"N126_20150121_070000_20150121_072000";"N126_20150122_053000_20150122_055000";
"N126_20150109_000000_20150109_002000";"N126_20150110_223000_20150110_225000";"N126_20150129_113000_20150129_115000";"N126_20150126_050000_20150126_052000";"N126_20150111_010000_20150111_012000";"N126_20150130_043000_20150130_045000";"N126_20150130_113000_20150130_115000";"N126_20150107_123000_20150107_125000";"N126_20150102_023000_20150102_025000";"N126_20150110_010000_20150110_012000";
"N126_20150131_190000_20150131_192000";"N126_20150128_160000_20150128_162000";"N126_20150114_140000_20150114_142000";"N126_20150105_050000_20150105_052000";"N126_20150101_143000_20150101_145000";"N126_20150120_030000_20150120_032000";"N126_20150109_200000_20150109_202000";"N126_20150101_180000_20150101_182000";"N126_20150129_223000_20150129_225000";"N126_20150112_113000_20150112_115000";
"N126_20150110_140000_20150110_142000";"N126_20150114_170000_20150114_172000";"N126_20150101_220000_20150101_222000";"N126_20150110_020000_20150110_022000";"N126_20150109_040000_20150109_042000";"N126_20150128_090000_20150128_092000";"N126_20150121_073000_20150121_075000";"N126_20150109_160000_20150109_162000";"N126_20150126_093000_20150126_095000";"N126_20150108_180000_20150108_182000";
"N126_20150114_000000_20150114_002000";"N126_20150121_220000_20150121_222000";"N126_20150115_170000_20150115_172000";"N126_20150111_143000_20150111_145000";"N126_20150104_133000_20150104_135000";"N126_20150129_063000_20150129_065000";"N126_20150123_010000_20150123_012000";"N126_20150122_123000_20150122_125000";"N126_20150128_060000_20150128_062000";"N126_20150128_120000_20150128_122000";
"N126_20150124_143000_20150124_145000";"N126_20150102_043000_20150102_045000";"N126_20150102_013000_20150102_015000";"N126_20150125_120000_20150125_122000";"N126_20150106_050000_20150106_052000";"N126_20150112_050000_20150112_052000";"N126_20150116_040000_20150116_042000";"N126_20150128_070000_20150128_072000";"N126_20150121_180000_20150121_182000";"N126_20150114_093000_20150114_095000";
"N126_20150124_233000_20150124_235000";"N126_20150115_113000_20150115_115000";"N126_20150110_183000_20150110_185000";"N126_20150107_190000_20150107_192000";"N126_20150105_053000_20150105_055000";"N126_20150113_200000_20150113_202000";"N126_20150126_073000_20150126_075000";"N126_20150108_193000_20150108_195000";"N126_20150102_063000_20150102_065000";"N126_20150119_010000_20150119_012000";
"N126_20150129_073000_20150129_075000";"N126_20150128_163000_20150128_165000";"N126_20150129_010000_20150129_012000";"N126_20150128_020000_20150128_022000";"N126_20150102_000000_20150102_002000";"N126_20150126_223000_20150126_225000";"N126_20150105_130000_20150105_132000";"N126_20150129_053000_20150129_055000";"N126_20150112_100000_20150112_102000";"N126_20150113_053000_20150113_055000";
"N126_20150101_050000_20150101_052000";"N126_20150118_123000_20150118_125000";"N126_20150120_213000_20150120_215000";"N126_20150130_040000_20150130_042000";"N126_20150131_000000_20150131_002000";"N126_20150113_070000_20150113_072000";"N126_20150102_070000_20150102_072000";"N126_20150123_103000_20150123_105000";"N126_20150119_140000_20150119_142000";"N126_20150122_170000_20150122_172000";
"N126_20150119_000000_20150119_002000";"N126_20150102_080000_20150102_082000";"N126_20150127_180000_20150127_182000";"N126_20150112_040000_20150112_042000";"N126_20150103_033000_20150103_035000";"N126_20150107_060000_20150107_062000";"N126_20150101_170000_20150101_172000";"N126_20150108_040000_20150108_042000";"N126_20150101_053000_20150101_055000";"N126_20150102_010000_20150102_012000";
"N126_20150128_080000_20150128_082000";"N126_20150103_013000_20150103_015000";"N126_20150124_140000_20150124_142000";"N126_20150104_203000_20150104_205000";"N126_20150103_140000_20150103_142000";"N126_20150130_220000_20150130_222000";"N126_20150110_163000_20150110_165000";"N126_20150114_210000_20150114_212000";"N126_20150118_113000_20150118_115000";"N126_20150101_163000_20150101_165000";
"N126_20150123_120000_20150123_122000";"N126_20150111_063000_20150111_065000";"N126_20150107_083000_20150107_085000";"N126_20150101_160000_20150101_162000";"N126_20150122_233000_20150122_235000";"N126_20150108_103000_20150108_105000";"N126_20150109_160000_20150109_162000";"N126_20150124_100000_20150124_102000";"N126_20150123_133000_20150123_135000";"N126_20150116_140000_20150116_142000";
"N126_20150103_210000_20150103_212000";"N126_20150124_150000_20150124_152000";"N126_20150124_213000_20150124_215000";"N126_20150128_053000_20150128_055000";"N126_20150108_000000_20150108_002000";"N126_20150104_140000_20150104_142000";"N126_20150127_103000_20150127_105000";"N126_20150110_200000_20150110_202000";"N126_20150117_020000_20150117_022000";"N126_20150112_180000_20150112_182000";
"N126_20150102_040000_20150102_042000";"N126_20150131_090000_20150131_092000";"N126_20150103_000000_20150103_002000";"N126_20150110_130000_20150110_132000";"N126_20150111_183000_20150111_185000";"N126_20150125_083000_20150125_085000";"N126_20150120_200000_20150120_202000";"N126_20150118_223000_20150118_225000";"N126_20150112_033000_20150112_035000";"N126_20150128_093000_20150128_095000";
"N126_20150106_123000_20150106_125000";"N126_20150129_063000_20150129_065000";"N126_20150102_103000_20150102_105000";"N126_20150129_043000_20150129_045000";"N126_20150125_200000_20150125_202000";"N126_20150118_020000_20150118_022000";"N126_20150120_193000_20150120_195000";"N126_20150105_043000_20150105_045000";"N126_20150125_233000_20150125_235000";"N126_20150106_103000_20150106_105000";
"N126_20150130_033000_20150130_035000";"N126_20150103_063000_20150103_065000";"N126_20150122_213000_20150122_215000";"N126_20150116_103000_20150116_105000";"N126_20150127_233000_20150127_235000";"N126_20150108_113000_20150108_115000";"N126_20150112_170000_20150112_172000";"N126_20150102_053000_20150102_055000";"N126_20150125_060000_20150125_062000";"N126_20150108_183000_20150108_185000";
"N126_20150107_023000_20150107_025000";"N126_20150131_233000_20150131_235000";"N126_20150113_220000_20150113_222000";"N126_20150102_170000_20150102_172000";"N126_20150113_223000_20150113_225000";"N126_20150101_063000_20150101_065000";"N126_20150121_173000_20150121_175000";"N126_20150121_193000_20150121_195000";"N126_20150115_173000_20150115_175000";"N126_20150107_090000_20150107_092000";
"N126_20150121_160000_20150121_162000";"N126_20150113_170000_20150113_172000";"N126_20150109_180000_20150109_182000";"N126_20150117_003000_20150117_005000";"N126_20150102_060000_20150102_062000";"N126_20150108_153000_20150108_155000";"N126_20150125_093000_20150125_095000";"N126_20150118_030000_20150118_032000";"N126_20150122_063000_20150122_065000";"N126_20150130_113000_20150130_115000";
"N126_20150120_000000_20150120_002000";"N126_20150124_220000_20150124_222000";"N126_20150121_160000_20150121_162000";"N126_20150106_113000_20150106_115000";"N126_20150109_083000_20150109_085000";"N126_20150103_183000_20150103_185000";"N126_20150104_053000_20150104_055000";"N126_20150128_213000_20150128_215000";"N126_20150111_210000_20150111_212000";"N126_20150112_193000_20150112_195000";
"N126_20150103_153000_20150103_155000";"N126_20150115_090000_20150115_092000";"N126_20150117_170000_20150117_172000";"N126_20150128_213000_20150128_215000";"N126_20150111_163000_20150111_165000";"N126_20150105_083000_20150105_085000";"N126_20150111_153000_20150111_155000";"N126_20150102_143000_20150102_145000";"N126_20150113_070000_20150113_072000";"N126_20150128_220000_20150128_222000";
"N126_20150122_070000_20150122_072000";"N126_20150103_063000_20150103_065000";"N126_20150123_143000_20150123_145000";"N126_20150129_210000_20150129_212000";"N126_20150120_190000_20150120_192000";"N126_20150104_100000_20150104_102000";"N126_20150118_143000_20150118_145000";"N126_20150114_143000_20150114_145000";"N126_20150106_073000_20150106_075000";"N126_20150108_120000_20150108_122000";
"N126_20150127_200000_20150127_202000";"N126_20150123_043000_20150123_045000";"N126_20150131_080000_20150131_082000";"N126_20150107_000000_20150107_002000";"N126_20150128_113000_20150128_115000";"N126_20150130_010000_20150130_012000";"N126_20150104_063000_20150104_065000";"N126_20150114_060000_20150114_062000";"N126_20150113_093000_20150113_095000";"N126_20150123_133000_20150123_135000";
"N126_20150104_080000_20150104_082000";"N126_20150118_133000_20150118_135000";"N126_20150118_200000_20150118_202000";"N126_20150108_213000_20150108_215000";"N126_20150129_170000_20150129_172000";"N126_20150106_023000_20150106_025000";"N126_20150120_060000_20150120_062000";"N126_20150121_180000_20150121_182000";"N126_20150130_210000_20150130_212000";"N126_20150117_193000_20150117_195000";
"N126_20150121_090000_20150121_092000";"N126_20150124_090000_20150124_092000";"N126_20150121_133000_20150121_135000";"N126_20150117_100000_20150117_102000";"N126_20150131_160000_20150131_162000";"N126_20150124_200000_20150124_202000";"N126_20150126_220000_20150126_222000";"N126_20150109_053000_20150109_055000";"N126_20150105_170000_20150105_172000";"N126_20150115_080000_20150115_082000";
"N126_20150130_010000_20150130_012000";"N126_20150108_030000_20150108_032000";"N126_20150118_100000_20150118_102000";"N126_20150126_160000_20150126_162000";"N126_20150105_010000_20150105_012000";"N126_20150126_143000_20150126_145000";"N126_20150128_033000_20150128_035000";"N126_20150122_010000_20150122_012000";"N126_20150112_213000_20150112_215000";"N126_20150128_130000_20150128_132000";
"N126_20150104_000000_20150104_002000";"N126_20150108_170000_20150108_172000";"N126_20150108_013000_20150108_015000";"N126_20150110_050000_20150110_052000";"N126_20150114_213000_20150114_215000";"N126_20150128_030000_20150128_032000";"N126_20150124_060000_20150124_062000";"N126_20150131_173000_20150131_175000";"N126_20150118_100000_20150118_102000";"N126_20150107_210000_20150107_212000";
"N126_20150121_123000_20150121_125000";"N126_20150107_200000_20150107_202000";"N126_20150111_090000_20150111_092000";"N126_20150117_233000_20150117_235000";"N126_20150128_100000_20150128_102000";"N126_20150104_233000_20150104_235000";"N126_20150126_040000_20150126_042000";"N126_20150106_013000_20150106_015000";"N126_20150116_090000_20150116_092000";"N126_20150113_073000_20150113_075000";
"N126_20150122_073000_20150122_075000";"N126_20150114_050000_20150114_052000";"N126_20150115_153000_20150115_155000";"N126_20150114_090000_20150114_092000";"N126_20150115_130000_20150115_132000";"N126_20150109_150000_20150109_152000";      };
     };
     String_Data @[4] {
      name="group_name";
      col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
      ar {
       name="ar";
      [1206] ;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;      };
     };
     float_Data @[5] {
      name="sse";
      col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=8;
      matrix_col_width=10;
      ar {
       name="ar";
      [1206] 0.0043280805;0.0075305663;0.0010325841;0.00039952344;0.0044094301;0.0074791135;0.0021541724;0.00074868457;0.00065231108;0.02875731;
0.012262926;0.038671058;0.00039450717;0.007169636;0.0019087662;0.0054283426;0.01646363;0.020656724;0.0013240352;0.0025349855;
0.011453618;4.0967396e-05;0.0067669745;6.8376066e-05;0.00010606321;7.4180211e-06;0.010276404;0.0016993926;0.002942164;0.0042122281;
0.013237117;1.7165434e-05;0.0084084449;0.0020544783;0.0012182748;0.0023356436;0.0081174849;0.00013912587;0.00037649416;0.00071470649;
0.0083217556;0.00032970065;0.0095967986;0.006631576;0.00025031119;0.0067054429;0.0014639791;0.0089113638;0.0042836573;0.0048683239;
0.001376104;0.00050110498;0.01904436;0.0010111359;0.0002598768;0.00023054209;0.0025018828;0.019882085;4.0328501e-05;0.0001712847;
0.0065701571;0.0019160621;0.0050437185;0.017435197;0.0078006387;0.0017461084;0.0069935797;8.2866783e-05;0.025342567;0.00011010139;
0.00065120333;2.5825171e-05;0.0027053005;0.0036859147;0.00044851619;0.00020109789;8.4119434e-05;0.0012859259;5.8822516e-06;0.0010807069;
0.00011965312;0.00028807324;3.3688259e-05;0.00016382799;0.00065294222;0.00028973981;0.00086945412;0.002778339;0.0053455252;0.015761018;
0.010909358;0.0046572937;0.0027792926;0.010135164;0.00098206778;0.012079195;0.0010520795;2.6769541e-05;2.4010959e-07;1.2050648e-05;
0.0018687141;0.0013983727;0.013771759;0.0033476918;1.2908562e-05;0.003351107;0.00058578461;0.0013807556;0.035607338;0.00026421601;
0.00050582062;0.0025217712;0.0045562997;9.1111549e-05;0.0037786344;0.00011738155;0.028115632;5.1626967e-07;9.1810689e-05;0.00026625406;
0.022186061;0.017701996;0.010959256;0.0018725785;0.00028788764;0.0010826178;1.2098129e-05;0.00036022387;0.002110935;0.0008545618;
0.0037258724;4.9515998e-05;0.00020830966;0.0001504338;0.00022935309;6.9547168e-05;0.0021624633;6.4194959e-05;0.0015595648;0.027831186;
0.00068156992;9.7692275e-05;0.0014682229;9.6608499e-05;0.0028892942;3.5743674e-06;0.0011093534;6.2094201e-05;0.010619157;0.007069834;
8.1265818e-05;0.0033647968;0.0019484708;0.00099645718;0.0019120723;0.00012908931;0.0093959412;3.5699832e-05;0.00085472909;0.0093541145;
0.0028595875;0.0021246735;0.019808311;0.00017780367;0.0061319075;0.016825818;0.0015504264;0.0026109223;0.0013342419;0.0010727291;
0.062066291;0.0035005184;0.0046963925;0.025618188;0.0016611464;0.00056317984;0.00016696162;0.00031789133;4.2131895e-05;0.0031171504;
0.004521945;0.004535296;0.0034073798;0.0038261116;0.00026883447;0.0070388559;0.019213989;0.0076105101;0.0065979762;0.00058327825;
0.015070544;0.0051168604;0.0003581944;0.0083959447;0.02766607;7.1652052e-05;0.0084192427;0.047088809;0.00034481965;0.00064601254;
0.014342266;0.00065504655;0.00058021431;0.025760189;7.4520294e-06;0.0018750271;0.0044442094;0.0088213319;0.025987089;6.5005894e-05;
0.00019120169;0.00049739721;0.00037677758;0.0022299641;0.00020909152;3.0632007e-05;0.0089693842;0.0057626385;0.028367089;0.016858298;
0.032122839;0.00044598628;0.0010340058;0.0011119616;0.00041044067;0.0048735696;0.0049362462;0.0016707816;0.00091242057;0.00058626581;
0.0045174351;0.00099389988;0.00042370637;0.00010160404;3.9386223e-06;0.0096201794;8.2455466e-05;2.3356861e-05;3.5181416e-05;0.00010145615;
0.010428485;0.0026424662;0.011093679;0.017634027;0.004360409;0.0086382264;0.0021242311;0.016852153;0.012518326;0.0027902764;
0.0023021;0.00020027546;0.0056124525;0.0045687058;0.011970904;0.011643946;3.6503287e-05;0.0007909764;0.024534542;5.7284808e-08;
0.026066409;0.0010495232;0.023100071;0.004748831;0.0020118186;2.5147392e-05;0.014475473;0.00023724836;0.0028314395;0.004171107;
0.0016015447;0.0093777664;0.0082728639;0.0042672493;0.0027623971;0.00050372555;0.007474965;3.262527e-05;1.7393251e-06;0.0032931867;
4.719436e-05;0.0001480201;0.00082511356;0.0042464673;0.011921269;0.0050239232;0.0025912421;0.0014497283;0.0002391118;0.012887818;
0.0002640177;0.0089788903;0.0013934077;0.00055155525;0.00022591357;8.3326795e-06;0.022675917;0.00044391115;0.0060006594;0.0040614335;
0.021368697;0.0067847823;0.0061085061;0.0060613067;0.013105864;0.0025523438;0.00052841008;0.03546438;0.020447724;0.0019165004;
0.00060158025;0.030093528;0.00058486674;0.041297499;1.4581659e-06;0.00019182838;0.0012901197;0.00023084809;0.0066877799;0.0025209005;
0.0022422161;0.0022361691;0.00057546818;0.0003738688;0.0016151004;0.00076350098;0.0012212548;8.1311437e-06;0.013209464;0.014017489;
0.014380496;0.00029169006;0.0085630221;0.00013061345;0.0079040946;0.0012488648;0.0041895625;3.3144813e-06;0.0014671965;0.0023745112;
0.012100239;0.00048598144;0.019234205;0.030951399;0.0053477939;8.2221821e-05;0.0018744515;2.7450867e-06;0.00041980247;0.010942977;
0.010393239;0.0023048448;0.0096906917;0.0023375503;0.00047955118;0.0037456343;0.0033498167;6.3837761e-05;0.0014711306;0.0012469266;
1.6238411e-05;8.1972175e-05;0.0053962441;0.0028015049;0.0088617383;0.00063299108;0.00018390788;0.0057148458;0.0021001073;0.0025776578;
0.0066441;0.00076990045;0.00066746376;3.5696805e-05;0.004863929;0.011511486;8.5751439e-05;0.0024214815;0.0013929884;0.000970522;
0.0020522445;0.0014672467;0.0160571;0.0022204991;0.0018559379;3.2887776e-05;1.9558961e-06;0.00061519828;0.00051524118;0.00010114269;
0.00011605984;0.00094716088;0.013222329;0.00093749736;0.017904991;0.0065926518;0.013751238;0.00098214718;2.7733067e-05;6.3073394e-06;
6.459398e-05;0.0064798072;0.0009165451;0.0010678347;0.033403199;0.00014038294;0.0011822593;1.6085114e-05;0.017049637;0.00034917425;
5.7795256e-05;9.571058e-05;0.0013420695;0.015079853;0.0022216826;0.00013135292;0.002034486;0.00076909066;0.00049066648;0.010910235;
0.0068798801;0.0019285654;0.0030989989;0.00067482278;3.6315549e-05;0.011719874;0.0001595858;0.025676187;0.0028600306;0.0011109997;
0.0015294247;0.0083727352;0.0018243254;0.0018992031;0.00053003425;0.00074821129;0.00026957699;6.9477919e-06;0.0014460246;0.0029025991;
0.00043953289;3.2342967e-05;8.0797263e-06;0.00033478081;0.0048455438;0.032042969;0.0046705515;0.0040507438;0.0043354635;0.00078330655;
3.9008427e-07;0.00040112896;0.0026119945;0.037643269;0.0058342661;0.0010456012;2.2766935e-05;0.0075848368;0.0016546992;0.00010786198;
0.016235843;2.3753755e-05;0.0018499233;0.00032664841;0.00079638849;0.0015605165;4.5380359e-05;0.0023771857;0.0072597913;0.0007025763;
0.00011323804;0.0019692942;0.00094357028;0.00235382;0.0088579478;0.00040139849;0.0051124208;0.00042059421;0.00022367695;6.8511676e-05;
0.027361784;0.0022907676;7.1263079e-05;0.00050413096;0.0081054736;0.023220915;0.0018068292;0.00071421976;0.00061524712;0.0039433315;
0.012976694;0.013971928;0.00044149949;0.0051811226;0.0039687497;8.5411222e-05;0.00012676686;0.008867681;1.1135541e-05;0.017161222;
0.0024773672;0.00093971787;1.9347675e-05;0.0020380525;0.00091781316;0.021273479;0.00041326211;0.0065124291;0.00052305072;0.010886068;
0.0055827159;0.010200539;0.00054400472;0.014778786;0.0041736015;0.015198088;1.4649279e-07;0.00054800889;0.00039113415;0.0013018467;
5.1014227e-05;0.0062522725;7.013046e-05;0.00052664068;0.0024601088;0.00086444448;0.00090742897;0.0020911521;0.0057323379;0.00078003696;
7.5970769e-05;0.0075143413;7.0089038e-05;0.0097886929;0.00090350647;0.0032205945;0.00031170482;0.00063121453;3.9446135e-05;3.7243187e-06;
0.00047212711;0.0038745899;0.0028592146;0.00039942755;0.00023372097;0.00025843654;0.0031708293;0.00016671796;0.013036297;0.010537103;
0.018952852;0.0022731016;0.0013248845;0.041914247;0.0017612783;0.0022693903;0.00083001924;0.0030502861;0.010393302;0.0063568805;
0.00017920644;0.011871081;0.0035732824;0.00025103666;0.0015140902;0.020352341;0.018527955;4.5798304e-05;0.0031047834;4.2077263e-05;
1.0389855e-05;0.0072668954;0.002296638;0.0023300161;3.0147845e-07;1.5460149e-05;0.0076445546;0.00088778324;0.005969686;0.0049843225;
0.0003293544;0.0012700318;0.025651485;0.00033716171;0.0061567235;0.00029548618;0.00082782778;0.00072889274;0.013686709;5.2869924e-05;
0.0032702633;0.00043570527;0.0084688719;8.7104047e-05;0.0044686543;0.0088117616;0.0053800452;4.7451553e-07;0.015237639;0.00011218822;
1.7142808e-06;0.020133387;7.7263336e-05;0.0050093373;0.0025977879;0.00061965926;6.4538064e-05;0.021926342;0.0044202912;0.00088049634;
0.0017952591;0.00023539517;0.0018044193;0.0016536423;0.00090119091;0.00077064731;0.011531912;0.0011946404;2.4880253e-06;0.00034239888;
0.00068652647;5.9060199e-06;0.0069033094;1.6794388e-06;0.0087400135;0.00097211677;0.0052826419;0.010258581;0.0017677542;0.0069144182;
1.9466886e-05;0.026601024;0.00044274743;0.011084217;0.016560758;0.0030416066;0.00016492844;9.2129507e-05;0.003700207;0.010489283;
0.0031394283;0.000919046;0.0023066243;4.3017542e-05;0.00031563177;1.1174759e-05;0.0032714938;1.8536125e-06;0.010870769;0.0027538515;
0.00057171594;0.0078323623;3.6372967e-06;1.4674956e-07;0.0053917114;8.9692621e-06;0.010596544;0.012827183;0.017156638;6.4463864e-05;
0.0016521447;0.0028633275;0.0028810052;0.00038323546;0.0014882141;0.0057881065;0.0017087413;0.014385685;0.00060390402;0.00019240627;
0.00044456063;0.006096784;0.00046104452;0.00035684931;0.0037382727;0.013693243;0.012630383;0.022652986;0.0035294674;0.0022852323;
0.0049862755;0.00022950476;0.00013997857;3.7742353e-05;0.00075340492;1.8017859e-07;0.00027230053;0.0011614448;0.0034121585;0.00032502512;
1.9877575e-07;0.013940957;0.00042337057;4.0227689e-05;0.0036286244;0.00031064864;0.0034834973;0.0056638052;0.0058650058;6.7020315e-05;
7.3325937e-05;4.990909e-06;0.0010589501;3.7439946e-05;0.017231232;0.02499401;0.0023614403;0.0018114446;0.00040551607;0.0054390128;
0.00059681392;0.00028326511;0.00011450918;0.00066264108;0.014419334;0.0053974441;0.0050944625;0.0012244303;0.01540604;0.0022523743;
0.00092229329;4.6336459e-05;2.554463e-06;0.0017718013;0.00091262587;0.0005771885;0.00042108758;0.00028870106;0.00016110967;0.0035354756;
7.0984599e-05;0.0012375865;0.005204482;0.0048437505;0.0043872199;0.00053583132;0.0014083649;7.5387172e-05;0.00078428024;0.015767885;
0.0060557025;0.0035879083;0.00086053653;4.959635e-05;0.0004119146;0.010601016;5.9274048e-06;0.00016129017;0.0042048269;0.013714755;
0.013829178;0.0030574107;3.4340395e-05;0.00026675468;0.015501635;0.013340113;0.00030748986;6.1862156e-05;3.9477025e-05;1.4992093e-05;
0.035975218;0.0097225755;2.0561803e-08;3.3730823e-05;0.0015339875;0.00059740274;0.0039181574;0.0054603708;0.0040185135;1.4042249e-06;
0.0011773488;0.00035623985;0.019622199;0.00093611085;2.3916204e-05;0.00055620755;0.00026878633;0.00070550846;7.6392294e-05;0.00072819128;
0.0027247595;0.0064680623;0.00013582711;0.0095670847;0.0049853618;0.0020716167;0.0002872746;0.00051492528;0.0019666157;0.0019451808;
0.0013071765;0.0020633764;0.0034512724;0.00026319729;0.00062756741;0.0004947441;0.0022836837;0.0021575296;0.034340892;0.01066804;
0.00060655078;0.0019776218;0.011296572;0.0078651682;0.0052216011;0.0032712962;0.00011390723;0.0094214668;0.010465929;0.0056209131;
0.00061278942;0.0021529237;0.0042975368;0.012905547;0.00022154485;0.0043847985;0.0038973032;0.00081371103;0.0083557898;0.00022939732;
0.00057350309;0.0002872847;0.0017145498;0.00028754945;0.0046514361;0.00063461548;0.0067077833;0.015810898;0.0065915775;7.0279282e-05;
0.0010570249;0.0031567316;0.0096474532;0.001479143;0.0012455042;0.00043821803;0.00064335426;0.0081261387;4.4329299e-05;1.4071416e-05;
0.00078085542;0.0065003568;0.00078107527;0.0015810283;0.00037066368;0.0044089789;0.0023664031;0.0017744763;9.69596e-05;0.0014070576;
0.017741181;0.013769504;0.0044046817;4.9074703e-07;3.7890986e-05;0.0012899848;0.023822445;0.0001638442;0.0027413003;0.0024621151;
0.016381731;1.1431255e-05;1.0086243e-05;1.9812256e-05;0.00027260452;0.0093213962;1.2897215e-05;0.016072361;5.1232355e-06;0.00015483526;
0.00010107917;0.0031870848;0.0021671124;0.0069063911;0.0026932727;0.0015666604;0.00027525157;0.015046615;0.00016597458;0.0064973775;
0.0045668529;0.017195912;0.021002322;0.027308341;0.00072555745;0.00077403191;4.1846993e-06;0.0005718834;0.0018889798;0.0022774332;
0.0050778058;0.00033432839;7.7748198e-05;0.0012614366;0.01331713;0.0024032576;0.00015340879;7.157721e-06;0.00060923863;0.012393045;
0.0013255094;0.039988618;0.0013700081;0.00028342314;0.00035225172;0.00082066888;0.0099018691;0.00037613919;0.0025512425;0.00022793807;
0.0010248169;0.0067411033;6.7727269e-05;0.0058641294;0.0078556454;0.00025397801;0.0027865183;0.0010248445;0.0016873606;0.005033019;
0.00079375651;0.0008795358;0.0067733061;0.00085332518;4.4243519e-05;0.027204299;6.464513e-05;0.0011550018;0.0045866882;0.0014217511;
8.3481042e-05;0.00088511949;0.00011820279;0.00045253872;0.00095642603;0.0095475642;0.015272968;6.98816e-05;0.0024051457;0.0031022946;
0.00052789843;0.00016381274;0.0037995367;0.012695774;6.0620727e-07;0.014774636;0.0010101316;0.006463109;0.01676592;0.00030651179;
1.9513331e-05;0.0011238731;0.008333466;0.0036794627;0.0048635593;2.4580324e-05;0.0058403262;0.00075099734;2.075388e-05;0.0020641156;
1.5656578e-05;0.0016583066;0.0070369695;0.00063300796;0.0020110407;0.019365177;0.031478889;0.014748873;0.020427477;0.014146772;
0.0021475202;0.0047302544;0.0016173625;0.0015532275;1.8476532e-05;0.0024950355;0.011384967;0.0051734392;0.0048505487;0.0030762353;
0.00060742453;0.010111754;0.0076638022;4.4478838e-05;0.0010403693;0.00038299922;0.00048595647;0.0017766694;0.0008620164;0.00017906963;
0.00096482283;0.00057648163;1.9503985e-05;0.0037363979;1.6631992e-06;0.00026793001;0.0092421742;2.2221338e-06;0.00609551;0.013663627;
0.017366581;4.0635874e-05;0.011079451;0.00016976906;0.007739157;0.0049700611;0.00061312295;0.00071972032;0.0052645491;0.0054616812;
0.0081734313;0.00017605982;0.0062943031;6.3973559e-05;0.0011699899;0.0021845214;0.0023173238;0.013546692;0.0068447897;0.00037754735;
0.022323066;0.0011531722;0.005611287;0.00084173732;0.00072402338;0.0089980047;0.0018572259;0.007915291;0.0091899605;0.0057479469;
0.0083553158;0.00014902253;0.00071898493;0.019291636;0.00058448664;0.00093532226;5.4957647e-05;0.010399969;0.0001391533;0.001084174;
0.013343597;0.00059876236;0.00011994948;0.0036234092;0.019581517;0.00013548919;0.0083213346;0.014234507;0.0086114593;0.00027573854;
0.0017755214;0.0014984836;0.0024302211;0.0066083511;0.0021783384;0.0004022698;0.0050162962;0.00041419049;6.8254012e-05;0.0057157069;
0.0091684954;0.00065851095;3.1870393e-05;0.00044243678;5.3686315e-05;0.0014595507;0.0015693085;0.014889267;0.00055881328;0.012153945;
0.0064743552;1.764749e-06;0.0015269362;0.011483336;0.0077097043;3.177028e-05;0.0067077712;0.00055877242;0.002997464;0.0018218542;
0.0039353836;8.5876973e-06;0.0092938719;0.0017270176;0.0019777862;0.0048904284;0.0028718656;0.013999444;0.00012406881;2.1598086e-07;
2.6158676e-05;0.0037483105;6.0023773e-05;0.003698668;0.03905721;0.0069476678;2.1344269e-05;0.013642242;0.0017821306;0.00049472821;
0.0026132893;0.00063518167;0.0061298213;0.00012346887;0.0027585586;0.0023102248;0.002551862;0.00016551033;0.00046884324;0.0054758592;
0.024170777;1.9713354e-05;0.00019000088;0.00098041084;0.021263601;3.2533198e-06;2.1006426e-05;0.00051432219;0.00019248978;0.0017038835;
0.0024131529;0.0075110295;0.0050330264;0.00085892342;0.0019786146;0.044951499;0.0033269182;0.001682053;0.0021470466;0.0025841077;
8.6702312e-05;0.00021196689;0.0083083604;9.9878846e-05;0.0088672154;0.010291155;0.0028018749;0.0043913606;0.058228977;0.00069919939;
0.010302898;0.0013326443;0.00028714328;4.0196886e-05;0.0042021065;0.0034876585;0.00022391324;0.0034625989;0.00011085946;0.0042007659;
0.001941642;0.0021768112;0.00046171027;0.017420258;0.00049597787;0.022086712;0.00096935994;0.0034781503;0.0012767812;0.0012888055;
0.025015511;0.011429109;0.00080676336;0.0034020343;0.0011350125;0.0037603835;0.0093731629;0.0029887867;0.014928018;0.00011914463;
0.00032689597;0.016050035;0.00030972486;0.033389553;0.001365987;0.035934754;0.0036685085;0.011665238;0.000142986;0.0053109904;
0.00017311887;0.001283201;0.00085498177;0.00056163449;0.021253154;0.00049375027;0.00040824979;0.0015080002;0.00050503877;0.0026812996;
0.00087209063;0.00065460423;0.0022124504;4.9464736e-05;0.024964478;5.1983476e-05;0.0054285214;0.026175989;0.0043185139;0.00049218867;
0.015340192;0.01623999;0.0097929658;0.00052438339;0.012917012;0.011039012;      };
     };
    };
    data_flags=SAVE_ROWS|AUTO_CALC;
    auto_load=NO_AUTO_LOAD;
    auto_load_file=;
    row_height=1;
    max_col_width=50;
    keygen 4 0=0;
    row_indexes {
     name="row_indexes";
    [1206] 0;1;2;3;4;5;6;7;8;9;
10;11;12;13;14;15;16;17;18;19;
20;21;22;23;24;25;26;27;28;29;
30;31;32;33;34;35;36;37;38;39;
40;41;42;43;44;45;46;47;48;49;
50;51;52;53;54;55;56;57;58;59;
60;61;62;63;64;65;66;67;68;69;
70;71;72;73;74;75;76;77;78;79;
80;81;82;83;84;85;86;87;88;89;
90;91;92;93;94;95;96;97;98;99;
100;101;102;103;104;105;106;107;108;109;
110;111;112;113;114;115;116;117;118;119;
120;121;122;123;124;125;126;127;128;129;
130;131;132;133;134;135;136;137;138;139;
140;141;142;143;144;145;146;147;148;149;
150;151;152;153;154;155;156;157;158;159;
160;161;162;163;164;165;166;167;168;169;
170;171;172;173;174;175;176;177;178;179;
180;181;182;183;184;185;186;187;188;189;
190;191;192;193;194;195;196;197;198;199;
200;201;202;203;204;205;206;207;208;209;
210;211;212;213;214;215;216;217;218;219;
220;221;222;223;224;225;226;227;228;229;
230;231;232;233;234;235;236;237;238;239;
240;241;242;243;244;245;246;247;248;249;
250;251;252;253;254;255;256;257;258;259;
260;261;262;263;264;265;266;267;268;269;
270;271;272;273;274;275;276;277;278;279;
280;281;282;283;284;285;286;287;288;289;
290;291;292;293;294;295;296;297;298;299;
300;301;302;303;304;305;306;307;308;309;
310;311;312;313;314;315;316;317;318;319;
320;321;322;323;324;325;326;327;328;329;
330;331;332;333;334;335;336;337;338;339;
340;341;342;343;344;345;346;347;348;349;
350;351;352;353;354;355;356;357;358;359;
360;361;362;363;364;365;366;367;368;369;
370;371;372;373;374;375;376;377;378;379;
380;381;382;383;384;385;386;387;388;389;
390;391;392;393;394;395;396;397;398;399;
400;401;402;403;404;405;406;407;408;409;
410;411;412;413;414;415;416;417;418;419;
420;421;422;423;424;425;426;427;428;429;
430;431;432;433;434;435;436;437;438;439;
440;441;442;443;444;445;446;447;448;449;
450;451;452;453;454;455;456;457;458;459;
460;461;462;463;464;465;466;467;468;469;
470;471;472;473;474;475;476;477;478;479;
480;481;482;483;484;485;486;487;488;489;
490;491;492;493;494;495;496;497;498;499;
500;501;502;503;504;505;506;507;508;509;
510;511;512;513;514;515;516;517;518;519;
520;521;522;523;524;525;526;527;528;529;
530;531;532;533;534;535;536;537;538;539;
540;541;542;543;544;545;546;547;548;549;
550;551;552;553;554;555;556;557;558;559;
560;561;562;563;564;565;566;567;568;569;
570;571;572;573;574;575;576;577;578;579;
580;581;582;583;584;585;586;587;588;589;
590;591;592;593;594;595;596;597;598;599;
600;601;602;603;604;605;606;607;608;609;
610;611;612;613;614;615;616;617;618;619;
620;621;622;623;624;625;626;627;628;629;
630;631;632;633;634;635;636;637;638;639;
640;641;642;643;644;645;646;647;648;649;
650;651;652;653;654;655;656;657;658;659;
660;661;662;663;664;665;666;667;668;669;
670;671;672;673;674;675;676;677;678;679;
680;681;682;683;684;685;686;687;688;689;
690;691;692;693;694;695;696;697;698;699;
700;701;702;703;704;705;706;707;708;709;
710;711;712;713;714;715;716;717;718;719;
720;721;722;723;724;725;726;727;728;729;
730;731;732;733;734;735;736;737;738;739;
740;741;742;743;744;745;746;747;748;749;
750;751;752;753;754;755;756;757;758;759;
760;761;762;763;764;765;766;767;768;769;
770;771;772;773;774;775;776;777;778;779;
780;781;782;783;784;785;786;787;788;789;
790;791;792;793;794;795;796;797;798;799;
800;801;802;803;804;805;806;807;808;809;
810;811;812;813;814;815;816;817;818;819;
820;821;822;823;824;825;826;827;828;829;
830;831;832;833;834;835;836;837;838;839;
840;841;842;843;844;845;846;847;848;849;
850;851;852;853;854;855;856;857;858;859;
860;861;862;863;864;865;866;867;868;869;
870;871;872;873;874;875;876;877;878;879;
880;881;882;883;884;885;886;887;888;889;
890;891;892;893;894;895;896;897;898;899;
900;901;902;903;904;905;906;907;908;909;
910;911;912;913;914;915;916;917;918;919;
920;921;922;923;924;925;926;927;928;929;
930;931;932;933;934;935;936;937;938;939;
940;941;942;943;944;945;946;947;948;949;
950;951;952;953;954;955;956;957;958;959;
960;961;962;963;964;965;966;967;968;969;
970;971;972;973;974;975;976;977;978;979;
980;981;982;983;984;985;986;987;988;989;
990;991;992;993;994;995;996;997;998;999;
1000;1001;1002;1003;1004;1005;1006;1007;1008;1009;
1010;1011;1012;1013;1014;1015;1016;1017;1018;1019;
1020;1021;1022;1023;1024;1025;1026;1027;1028;1029;
1030;1031;1032;1033;1034;1035;1036;1037;1038;1039;
1040;1041;1042;1043;1044;1045;1046;1047;1048;1049;
1050;1051;1052;1053;1054;1055;1056;1057;1058;1059;
1060;1061;1062;1063;1064;1065;1066;1067;1068;1069;
1070;1071;1072;1073;1074;1075;1076;1077;1078;1079;
1080;1081;1082;1083;1084;1085;1086;1087;1088;1089;
1090;1091;1092;1093;1094;1095;1096;1097;1098;1099;
1100;1101;1102;1103;1104;1105;1106;1107;1108;1109;
1110;1111;1112;1113;1114;1115;1116;1117;1118;1119;
1120;1121;1122;1123;1124;1125;1126;1127;1128;1129;
1130;1131;1132;1133;1134;1135;1136;1137;1138;1139;
1140;1141;1142;1143;1144;1145;1146;1147;1148;1149;
1150;1151;1152;1153;1154;1155;1156;1157;1158;1159;
1160;1161;1162;1163;1164;1165;1166;1167;1168;1169;
1170;1171;1172;1173;1174;1175;1176;1177;1178;1179;
1180;1181;1182;1183;1184;1185;1186;1187;1188;1189;
1190;1191;1192;1193;1194;1195;1196;1197;1198;1199;
1200;1201;1202;1203;1204;1205;    };
    last_sort_spec {
     name="last_sort_spec";
     ops {
      name="ops";
      el_typ=DataSortEl;
      el_def=0;
     };
    };
    row_with_hilite=-1;
   };
   DataTable @[1] {
    name="EpochOutputData";
    desc=;
    data {
     name="data";
     el_typ=int_Data;
     el_def=0;
     int_Data @[0] {
      UserDataItem_List @*(.user_data_) {
       name="UserDataItem_List_16";
       el_typ=UserDataItem;
       el_def=0;
       UserDataItem @[0] {name="NARROW": value=1: val_type_fixed=0: };
      };
      name="batch";
      col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=8;
      matrix_col_width=10;
      ar {
       name="ar";
      [25] 0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;      };
     };
     int_Data @[1] {
      UserDataItem_List @*(.user_data_) {
       name="UserDataItem_List_17";
       el_typ=UserDataItem;
       el_def=0;
       UserDataItem @[0] {name="NARROW": value=1: val_type_fixed=0: };
      };
      name="epoch";
      col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=8;
      matrix_col_width=10;
      ar {
       name="ar";
      [25] 0;1;2;3;4;5;6;7;8;9;
10;11;12;13;14;15;16;17;18;19;
20;21;22;23;24;      };
     };
     float_Data @[2] {
      name="avg_sse";
      col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=8;
      matrix_col_width=10;
      ar {
       name="ar";
      [25] 0.011966179;0.0092383912;0.0084492844;0.0078696627;0.0074604638;0.007120607;0.0068055494;0.006633963;0.0064161555;0.006261467;
0.0061349086;0.0060654809;0.0058799237;0.0057510319;0.0056607802;0.0056050387;0.0055113547;0.0053742998;0.0052696834;0.0052817222;
0.0051166345;0.0051472336;0.0050761346;0.0049697771;0.0049464717;      };
     };
     float_Data @[3] {
      name="cnt_err";
      col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=8;
      matrix_col_width=10;
      ar {
       name="ar";
      [25] 2826;2826;2826;2826;2826;2826;2826;2826;2826;2826;
2826;2826;2826;2826;2826;2826;2826;2826;2826;2826;
2826;2826;2826;2826;2826;      };
     };
     float_Data @[4] {
      name="epoch_time_tot";
      col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=14;
      matrix_col_width=10;
      ar {
       name="ar";
      [25] 1.26;1.1799999;1.2;1.1900001;1.35;1.17;1.17;1.17;1.17;1.17;
1.16;1.17;1.1799999;1.16;1.17;1.17;1.1799999;1.21;1.17;1.23;
1.2;1.24;1.1799999;1.48;1.21;      };
     };
     float_Data @[5] {
      name="epoch_time_usr";
      col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=14;
      matrix_col_width=10;
      ar {
       name="ar";
      [25] 1.1799999;1.04;1.11;1.1;1.2;1.0700001;1.0700001;1.1;1.09;1.0599999;
1.05;1.01;1.0599999;1.09;1.05;1.0599999;1.05;1.08;1.09;1.12;
1.0700001;1.14;1.0599999;1.1799999;0.95999998;      };
     };
    };
    data_flags=SAVE_ROWS|AUTO_CALC;
    auto_load=NO_AUTO_LOAD;
    auto_load_file=;
    row_height=1;
    max_col_width=50;
    keygen 4 0=0;
    row_indexes {
     name="row_indexes";
    [25] 0;1;2;3;4;5;6;7;8;9;
10;11;12;13;14;15;16;17;18;19;
20;21;22;23;24;    };
    last_sort_spec {
     name="last_sort_spec";
     ops {
      name="ops";
      el_typ=DataSortEl;
      el_def=0;
     };
    };
    row_with_hilite=-1;
   };
   DataTable @[2] {
    name="TrialTestOutputData";
    desc=;
    data {
     name="data";
     el_typ=int_Data;
     el_def=0;
     int_Data @[0] {
      UserDataItem_List @*(.user_data_) {
       name="UserDataItem_List_15";
       el_typ=UserDataItem;
       el_def=0;
       UserDataItem @[0] {name="NARROW": value=1: val_type_fixed=0: };
      };
      name="batch";
      col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=8;
      matrix_col_width=10;
      ar {
       name="ar";
      [0]       };
     };
     int_Data @[1] {
      UserDataItem_List @*(.user_data_) {
       name="UserDataItem_List_16";
       el_typ=UserDataItem;
       el_def=0;
       UserDataItem @[0] {name="NARROW": value=1: val_type_fixed=0: };
      };
      name="epoch";
      col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=8;
      matrix_col_width=10;
      ar {
       name="ar";
      [0]       };
     };
     int_Data @[2] {
      UserDataItem_List @*(.user_data_) {
       name="UserDataItem_List_17";
       el_typ=UserDataItem;
       el_def=0;
       UserDataItem @[0] {name="NARROW": value=1: val_type_fixed=0: };
      };
      name="trial";
      col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=8;
      matrix_col_width=10;
      ar {
       name="ar";
      [0]       };
     };
     String_Data @[3] {
      name="trial_name";
      col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
      ar {
       name="ar";
      [0]       };
     };
     String_Data @[4] {
      name="group_name";
      col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
      ar {
       name="ar";
      [0]       };
     };
     float_Data @[5] {
      name="sse";
      col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=8;
      matrix_col_width=10;
      ar {
       name="ar";
      [0]       };
     };
     float_Data @[6] {
      name="Output_act";
      col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
      is_matrix=1;
      cell_geom{ 1;1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [2] ;;      };
      width=10;
      matrix_col_width=10;
      ar {
       name="ar";
      [1 1 0]       };
     };
     float_Data @[7] {
      name="Output_targ";
      col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
      is_matrix=1;
      cell_geom{ 1;1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [2] ;;      };
      width=11;
      matrix_col_width=10;
      ar {
       name="ar";
      [1 1 0]       };
     };
     float_Data @[8] {
      name="Output_Output";
      col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
      is_matrix=1;
      cell_geom{ 1;1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [2] ;;      };
      width=13;
      matrix_col_width=10;
      ar {
       name="ar";
      [1 1 0]       };
     };
    };
    data_flags=SAVE_ROWS|AUTO_CALC;
    auto_load=NO_AUTO_LOAD;
    auto_load_file=;
    row_height=1;
    max_col_width=50;
    keygen 4 0=0;
    row_indexes {
     name="row_indexes";
    [0]     };
    last_sort_spec {
     name="last_sort_spec";
     ops {
      name="ops";
      el_typ=DataSortEl;
      el_def=0;
     };
    };
    row_with_hilite=-1;
   };
   DataTable @[3] {
    name="EpochTestOutputData";
    desc=;
    data {
     name="data";
     el_typ=int_Data;
     el_def=0;
     int_Data @[0] {
      UserDataItem_List @*(.user_data_) {
       name="UserDataItem_List_16";
       el_typ=UserDataItem;
       el_def=0;
       UserDataItem @[0] {name="NARROW": value=1: val_type_fixed=0: };
      };
      name="batch";
      col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=8;
      matrix_col_width=10;
      ar {
       name="ar";
      [0]       };
     };
     int_Data @[1] {
      UserDataItem_List @*(.user_data_) {
       name="UserDataItem_List_17";
       el_typ=UserDataItem;
       el_def=0;
       UserDataItem @[0] {name="NARROW": value=1: val_type_fixed=0: };
      };
      name="epoch";
      col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=8;
      matrix_col_width=10;
      ar {
       name="ar";
      [0]       };
     };
     float_Data @[2] {
      name="avg_sse";
      col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=8;
      matrix_col_width=10;
      ar {
       name="ar";
      [0]       };
     };
     float_Data @[3] {
      name="cnt_err";
      col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=8;
      matrix_col_width=10;
      ar {
       name="ar";
      [0]       };
     };
     float_Data @[4] {
      name="epoch_time_tot";
      col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=14;
      matrix_col_width=10;
      ar {
       name="ar";
      [0]       };
     };
     float_Data @[5] {
      name="epoch_time_usr";
      col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=14;
      matrix_col_width=10;
      ar {
       name="ar";
      [0]       };
     };
    };
    data_flags=SAVE_ROWS|AUTO_CALC;
    auto_load=NO_AUTO_LOAD;
    auto_load_file=;
    row_height=1;
    max_col_width=50;
    keygen 4 0=0;
    row_indexes {
     name="row_indexes";
    [0]     };
    last_sort_spec {
     name="last_sort_spec";
     ops {
      name="ops";
      el_typ=DataSortEl;
      el_def=0;
     };
    };
    row_with_hilite=-1;
   };
  };
  DataTable_Group @.gp[2] {
   name="AnalysisData";
   el_typ=DataTable;
   el_def=0;
   save_tables=1;
  };
 };
 programs {
  name="programs";
  el_typ=Program;
  el_def=0;
  tags=;
  desc=;
  debug_mode=0;
  Program @[0] {
   UserDataItem_List @*(.user_data_) {
    name=;
    el_typ=UserData_DocLink;
    el_def=0;
    UserData_DocLink @[0] {name="DocLink": doc=.programs[0].doc$$: };
   };
   name="BpStartup";
   short_nm="Startup";
   tags="Bp, Startup, Parallel Batch";
   desc="run project in the background command line is: emergent -nogui -ni -p <project name>.proj [epochs=xxx] [batches=xxx] [tag=xxx] | [b_start=xxx] [b_end=xxx] for parallel-batch mode";
   version {
    major=0;
    minor=0;
    step=0;
   };
   author=;
   email=;
   flags=NO_STOP_STEP|STARTUP_RUN;
   stop_step_cond {
    expr=;
   };
   objs {
    name="objs";
    el_typ=taNBase;
    el_def=0;
   };
   objs_vars {
    name="objs_vars";
    el_typ=ProgVar;
    el_def=0;
   };
   types {
    name="types";
    el_typ=DynEnumType;
    el_def=0;
   };
   args {
    name="args";
    el_typ=ProgVar;
    el_def=0;
    ProgVar @[0] {
     name="network";
     var_type=T_Object;
     object_type=BpNetwork;
     object_val=.networks[0]$$;
     object_scope=NULL;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL|PGRM_ARG;
     reference=0;
     desc="network to operate on -- updates batch counter on network and passes it to train program";
     init_from=NULL;
    };
    ProgVar @[1] {
     name="input_data";
     var_type=T_Object;
     object_type=DataTable;
     object_val=.data.gp[0][1]$$;
     object_scope=NULL;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL|PGRM_ARG;
     reference=0;
     desc="datatable with training patterns -- not used by this program, but passed to train program";
     init_from=NULL;
    };
   };
   vars {
    name="vars";
    el_typ=ProgVar;
    el_def=0;
    ProgVar @[0] {
     name="train";
     var_type=T_Object;
     object_type=Program;
     object_val=.programs.gp[0][1]$$;
     object_scope=NULL;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|EDIT_VAL;
     reference=0;
     desc="set this to point to your train process";
     init_from=NULL;
    };
    ProgVar @[1] {
     name="batch";
     var_type=T_Object;
     object_type=Program;
     object_val=.programs.gp[0][0]$$;
     object_scope=NULL;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
     reference=0;
     desc="set this to point to your batch process";
     init_from=NULL;
    };
    ProgVar @[2] {
     name="tag";
     var_type=T_String;
     string_val="_gui";
     object_scope=NULL;
     flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[3] {
     name="mode";
     var_type=T_String;
     string_val="mode";
     object_scope=NULL;
     flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[4] {
     name="batch_str";
     var_type=T_String;
     string_val="00";
     object_scope=NULL;
     flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|EDIT_VAL;
     reference=0;
     desc="batch number as a string (leading zeros)";
     init_from=NULL;
    };
    ProgVar @[5] {
     name="log_dir";
     var_type=T_String;
     string_val=;
     object_scope=NULL;
     flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
     reference=0;
     desc="log file directory";
     init_from=NULL;
    };
    ProgVar @[6] {
     name="output_file";
     var_type=T_String;
     object_scope=NULL;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="output file of export data";
     init_from=NULL;
    };
    ProgVar @[7] {
     name="input_file";
     var_type=T_String;
     object_scope=NULL;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="ipout file of new import data content";
     init_from=NULL;
    };
    ProgVar @[8] {
     name="input_weights_file";
     var_type=T_String;
     object_scope=NULL;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="weights file to load";
     init_from=NULL;
    };
    ProgVar @[9] {
     name="output_weights_file";
     var_type=T_String;
     object_scope=NULL;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="weights file to load";
     init_from=NULL;
    };
    ProgVar @[10] {
     name="log_file_nm";
     var_type=T_String;
     string_val=;
     object_scope=NULL;
     flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
     reference=0;
     desc="name of log file";
     init_from=NULL;
    };
    ProgVar @[11] {
     name="batch_start";
     var_type=T_Int;
     int_val=0;
     object_scope=NULL;
     flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|EDIT_VAL;
     reference=0;
     desc="batch starting number";
     init_from=NULL;
    };
    ProgVar @[12] {
     name="EpochOutputData";
     var_type=T_Object;
     object_type=DataTable;
     object_val=.data.gp[1][1]$$;
     object_scope=NULL;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[13] {
     name="TrialOutputData";
     var_type=T_Object;
     object_type=DataTable;
     object_val=.data.gp[1][0]$$;
     object_scope=NULL;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
   };
   functions {
    name="functions";
    el_typ=Function;
    el_def=0;
   };
   init_code {
    name="init_code";
    el_typ=ProgCode;
    el_def=0;
   };
   prog_code {
    name="prog_code";
    el_typ=ProgCode;
    el_def=0;
    LocalVars @[0] {
     name="LocalVars_LocalVars0vars";
     desc=;
     flags=CAN_REVERT_TO_CODE;
     code_string="LocalVars (0 vars)";
     local_vars {
      name="local_vars";
      el_typ=ProgVar;
      el_def=0;
     };
    };
    ReturnExpr @[1] {
     name="ReturnExpr_return";
     desc=;
     flags=OFF;
     code_string=;
     expr {
      expr=;
     };
    };
    RegisterArgs @[2] {
     name="RegisterArgs_RegisterArgs";
     desc="This is KEY!!! actually processes all args, including those from ProgVarFmArg guys below";
     flags=CAN_REVERT_TO_CODE;
     code_string="Register Args";
    };
    PrintExpr @[3] {
     name="PrintExpr_PrintLoadedproje_ojects0filename";
     desc=;
     flags=CAN_REVERT_TO_CODE;
     code_string="Print \"Loaded project: \" << .projects[0].file_name";
     expr {
      expr="\"Loaded project: \" << .projects[0].file_name";
     };
     debug=0;
    };
    PrintExpr @[4] {
     name="PrintExpr_Printlogdirlogdir";
     desc=;
     flags=CAN_REVERT_TO_CODE;
     code_string="Print \"log_dir: \" << log_dir";
     expr {
      expr="\"log_dir: \" << log_dir";
     };
     debug=0;
    };
    PrintExpr @[5] {
     name="PrintExpr_Printtagtag";
     desc=;
     flags=CAN_REVERT_TO_CODE;
     code_string="Print \"tag: \" << tag";
     expr {
      expr="\"tag: \" << tag";
     };
     debug=0;
    };
    PrintExpr @[6] {
     name="PrintExpr_Printinputfileinputfile";
     desc=;
     flags=CAN_REVERT_TO_CODE;
     code_string="Print \"input_file: \" << input_file";
     expr {
      expr="\"input_file: \" << input_file";
     };
     debug=0;
    };
    PrintExpr @[7] {
     name="PrintExpr_Printoutputfileoutputfile";
     desc=;
     flags=CAN_REVERT_TO_CODE;
     code_string="Print \"output_file: \" << output_file";
     expr {
      expr="\"output_file: \" << output_file";
     };
     debug=0;
    };
    PrintExpr @[8] {
     name="PrintExpr_Printinputweight_nputweightsfile";
     desc=;
     flags=CAN_REVERT_TO_CODE;
     code_string="Print \"input weights_file: \" << input_weights_file";
     expr {
      expr="\"input weights_file: \" << input_weights_file";
     };
     debug=0;
    };
    PrintExpr @[9] {
     name="PrintExpr_Printoutputweigh_tputweightsfile";
     desc=;
     flags=CAN_REVERT_TO_CODE;
     code_string="Print \"output weights_file: \" << output_weights_file";
     expr {
      expr="\"output weights_file: \" << output_weights_file";
     };
     debug=0;
    };
    Comment @[10] {
     name="Comment_Stdvariablesinst_upprogramitself";
     desc="= Std variables in startup program itself =";
     flags=CAN_REVERT_TO_CODE;
     code_string="// = Std variables in startup program itself =";
    };
    ProgVarFmArg @[11] {
     name="ProgVarFmArg_SetVartaginProgr_artupfromArgtag";
     desc=;
     flags=CAN_REVERT_TO_CODE;
     code_string="Set Var:tag in Program:BpStartup from Arg:tag";
     prog=.programs[0]$$;
     var_name="tag";
     arg_name="tag";
    };
    ProgVarFmArg @[12] {
     name="ProgVarFmArg_SetVarlogdirinPr_upfromArglogdir";
     desc=;
     flags=CAN_REVERT_TO_CODE;
     code_string="Set Var:log_dir in Program:BpStartup from Arg:log_dir";
     prog=$.programs[0]$;
     var_name="log_dir";
     arg_name="log_dir";
    };
    ProgVarFmArg @[13] {
     name="ProgVarFmArg_SetVarlogfilenmi_romArglogfilenm";
     desc=;
     flags=CAN_REVERT_TO_CODE;
     code_string="Set Var:log_file_nm in Program:BpStartup from Arg:log_file_nm";
     prog=$.programs[0]$;
     var_name="log_file_nm";
     arg_name="log_file_nm";
    };
    ProgVarFmArg @[14] {
     name="ProgVarFmArg_SetVarmaxepochin_infromArgepochs";
     desc=;
     flags=CAN_REVERT_TO_CODE;
     code_string="Set Var:max_epoch in Program:BpTrain from Arg:epochs";
     prog=$.programs.gp[0][1]$;
     var_name="max_epoch";
     arg_name="epochs";
    };
    ProgVarFmArg @[15] {
     name="ProgVarFmArg_SetVarrndinitinP_nfromArgrndinit";
     desc=;
     flags=CAN_REVERT_TO_CODE;
     code_string="Set Var:rnd_init in Program:BpTrain from Arg:rnd_init";
     prog=$.programs.gp[0][1]$;
     var_name="rnd_init";
     arg_name="rnd_init";
    };
    ProgVarFmArg @[16] {
     name="ProgVarFmArg_SetVarmaxbatchin_hfromArgbatches";
     desc=;
     flags=CAN_REVERT_TO_CODE;
     code_string="Set Var:max_batch in Program:BpBatch from Arg:batches";
     prog=$.programs.gp[0][0]$;
     var_name="max_batch";
     arg_name="batches";
    };
    ProgVarFmArg @[17] {
     name="ProgVarFmArg_SetVarmaxbatchin_atchfromArgbend";
     desc="b_end is parallel-batch mode of operation (see b_start)";
     flags=CAN_REVERT_TO_CODE;
     code_string="Set Var:max_batch in Program:BpBatch from Arg:b_end";
     prog=$.programs.gp[0][0]$;
     var_name="max_batch";
     arg_name="b_end";
    };
    ProgVarFmArg @[18] {
     name="ProgVarFmArg_SetVarbatchinPro_chfromArgbstart";
     desc="b_start is parallel-batch mode of operation (see also b_end)";
     flags=CAN_REVERT_TO_CODE;
     code_string="Set Var:batch in Program:BpBatch from Arg:b_start";
     prog=$.programs.gp[0][0]$;
     var_name="batch";
     arg_name="b_start";
    };
    ProgVarFmArg @[19] {
     name="ProgVarFmArg_SetVaroutputfile_omArgoutputfile";
     desc=;
     flags=VERBOSE|CAN_REVERT_TO_CODE;
     code_string="Set Var:output_file in Program:BpStartup from Arg:output_file";
     prog=$.programs[0]$;
     var_name="output_file";
     arg_name="output_file";
    };
    ProgVarFmArg @[20] {
     name="ProgVarFmArg_SetVarinputfilei_romArginputfile";
     desc=;
     flags=VERBOSE|CAN_REVERT_TO_CODE;
     code_string="Set Var:input_file in Program:BpStartup from Arg:input_file";
     prog=$.programs[0]$;
     var_name="input_file";
     arg_name="input_file";
    };
    ProgVarFmArg @[21] {
     name="ProgVarFmArg_SetVarinputweigh_nputweightsfile";
     desc=;
     flags=VERBOSE|CAN_REVERT_TO_CODE;
     code_string="Set Var:input_weights_file in Program:BpStartup from Arg:input_weights_file";
     prog=$.programs[0]$;
     var_name="input_weights_file";
     arg_name="input_weights_file";
    };
    ProgVarFmArg @[22] {
     name="ProgVarFmArg_SetVaroutputweig_tputweightsfile";
     desc=;
     flags=VERBOSE|CAN_REVERT_TO_CODE;
     code_string="Set Var:output_weights_file in Program:BpStartup from Arg:output_weights_file";
     prog=$.programs[0]$;
     var_name="output_weights_file";
     arg_name="output_weights_file";
    };
    ProgVarFmArg @[23] {
     name="ProgVarFmArg_SetVarmodeinProg_rtupfromArgmode";
     desc=;
     flags=VERBOSE|CAN_REVERT_TO_CODE;
     code_string="Set Var:mode in Program:BpStartup from Arg:mode";
     prog=$.programs[0]$;
     var_name="mode";
     arg_name="mode";
    };
    PrintExpr @[24] {
     name="PrintExpr_Printlogfilenmsentlogfilenm";
     desc=;
     flags=CAN_REVERT_TO_CODE;
     code_string="Print \"log_file_nm sent: \" << log_file_nm";
     expr {
      expr="\"log_file_nm sent: \" << log_file_nm";
     };
     debug=0;
    };
    PrintExpr @[25] {
     name="PrintExpr_Printmodesentmode";
     desc=;
     flags=CAN_REVERT_TO_CODE;
     code_string="Print \"mode sent: \" << mode";
     expr {
      expr="\"mode sent: \" << mode";
     };
     debug=0;
    };
    AssignExpr @[26] {
     name="AssignExpr_logfilenmlogfilenm";
     desc="last arg is to include dmem proc number";
     flags=CAN_REVERT_TO_CODE;
     code_string="log_file_nm = log_file_nm";
     result_var=.programs[0].vars[10]$$;
     expr {
      expr="log_file_nm";
     };
    };
    PrintExpr @[27] {
     name="PrintExpr_Printlogfilenmjustsetlogfilenm";
     desc=;
     flags=CAN_REVERT_TO_CODE;
     code_string="Print \"log_file_nm just set: \" << log_file_nm";
     expr {
      expr="\"log_file_nm just set: \" << log_file_nm";
     };
     debug=0;
    };
    If @[28] {
     name="If_ifmodequestion";
     desc=;
     flags=CAN_REVERT_TO_CODE;
     code_string="if (mode == \"question\")";
     cond {
      expr="mode == \"question\"";
     };
     true_code {
      name="true_code";
      el_typ=ProgCode;
      el_def=0;
      PrintExpr @[0] {
       name="PrintExpr_Printinmodequestionmode";
       desc=;
       flags=OFF;
       code_string=;
       expr {
	expr="\"in mode question: \" << mode";
       };
       debug=0;
      };
      PrintExpr @[1] {
       name="PrintExpr_Printbeforeloadi_nputweightsfile";
       desc=;
       flags=CAN_REVERT_TO_CODE;
       code_string="Print \"before loadiing weights_file:\" << input_weights_file";
       expr {
	expr="\"before loadiing weights_file:\" << input_weights_file";
       };
       debug=0;
      };
      MethodCall @[2] {
       name="MethodCall_networkLoadWeigh_nputweightsfile";
       desc="load weights from that file name";
       flags=VERBOSE|CAN_REVERT_TO_CODE;
       code_string="network->LoadWeights(input_weights_file, )";
       result_var=NULL;
       obj=.programs[0].args[0]$$;
       method=Network::LoadWeights;
       meth_args {
	name="meth_args";
	el_typ=ProgArg;
	el_def=0;
	ProgArg @[0] {
	 arg_type=const_taString_ref;
	 type="taString&";
	 name="fname";
	 required=0;
	 def_val="\"\"";
	 prev_expr=;
	 expr {
	  expr="input_weights_file";
	 };
	};
	ProgArg @[1] {
	 arg_type=bool;
	 type="bool";
	 name="quiet";
	 required=0;
	 def_val="false";
	 prev_expr=;
	 expr {
	  expr=;
	 };
	};
       };
       meth_sig="bool LoadWeights(taString& fname, bool quiet = false)";
       meth_desc=" read weight values in from a simple ordered list of weights (fmt is read from file) (leave fname empty to pull up file chooser)";
      };
      PrintExpr @[3] {
       name="PrintExpr_Printafterloadii_nputweightsfile";
       desc=;
       flags=CAN_REVERT_TO_CODE;
       code_string="Print \"after loadiing weights_file:\" << input_weights_file";
       expr {
	expr="\"after loadiing weights_file:\" << input_weights_file";
       };
       debug=0;
      };
      ProgramCall @[4] {
       name="ProgramCall_ImportDatainputdatainputfile";
       desc=;
       flags=CAN_REVERT_TO_CODE;
       code_string="ImportData(input_data, input_file)";
       prog_args {
	name="prog_args";
	el_typ=ProgArg;
	el_def=0;
	ProgArg @[0] {
	 arg_type=DataTable;
	 type="DataTable*";
	 name="NewData";
	 required=1;
	 def_val=;
	 prev_expr=;
	 expr {
	  expr="input_data";
	 };
	};
	ProgArg @[1] {
	 arg_type=taString;
	 type="String";
	 name="inputFile";
	 required=1;
	 def_val=;
	 prev_expr=;
	 expr {
	  expr="input_file";
	 };
	};
       };
       target=.programs.gp[0][9]$$;
       targ_ld_init="*ImportData*";
      };
      ProgramCall @[5] {
       name="ProgramCall_BpEpochTestnetwork";
       desc=;
       flags=VERBOSE|CAN_REVERT_TO_CODE;
       code_string="BpEpochTest(network)";
       prog_args {
	name="prog_args";
	el_typ=ProgArg;
	el_def=0;
	ProgArg @[0] {
	 arg_type=BpNetwork;
	 type="BpNetwork*";
	 name="network";
	 required=1;
	 def_val=;
	 prev_expr=;
	 expr {
	  expr="network";
	 };
	};
       };
       target=.programs.gp[1][0]$$;
       targ_ld_init="*BpEpochTest*";
      };
      ProgramCall @[6] {
       name="ProgramCall_ExportDataTrialO_tDataoutputfile";
       desc=;
       flags=CAN_REVERT_TO_CODE;
       code_string="ExportData(TrialOutputData, output_file)";
       prog_args {
	name="prog_args";
	el_typ=ProgArg;
	el_def=0;
	ProgArg @[0] {
	 arg_type=DataTable;
	 type="DataTable*";
	 name="FinalData";
	 required=1;
	 def_val=;
	 prev_expr="TrialOutputData";
	 expr {
	  expr="TrialOutputData";
	 };
	};
	ProgArg @[1] {
	 arg_type=taString;
	 type="String";
	 name="output_file";
	 required=1;
	 def_val=;
	 prev_expr=;
	 expr {
	  expr="output_file";
	 };
	};
       };
       target=.programs.gp[0][8]$$;
       targ_ld_init="*ExportData*";
      };
     };
    };
    Else @[29] {
     name="Else_If_ifmodequestion";
     desc=;
     flags=CAN_REVERT_TO_CODE;
     code_string="else";
     cond {
      expr=;
     };
     true_code {
      name="true_code";
      el_typ=ProgCode;
      el_def=0;
      PrintExpr @[0] {
       name="PrintExpr_Printinmodetrainmode";
       desc=;
       flags=CAN_REVERT_TO_CODE;
       code_string="Print \"in mode train: \" << mode";
       expr {
	expr="\"in mode train: \" << mode";
       };
       debug=0;
      };
      PrintExpr @[1] {
       name="PrintExpr_Printoutputfilesentoutputfile";
       desc=;
       flags=CAN_REVERT_TO_CODE;
       code_string="Print \"output_file sent: \" << output_file";
       expr {
	expr="\"output_file sent: \" << output_file";
       };
       debug=0;
      };
      PrintExpr @[2] {
       name="PrintExpr_Printinputfilesentinputfile";
       desc=;
       flags=CAN_REVERT_TO_CODE;
       code_string="Print \"input_file sent: \" << input_file";
       expr {
	expr="\"input_file sent: \" << input_file";
       };
       debug=0;
      };
      PrintExpr @[3] {
       name="PrintExpr_Printweightsfile_nputweightsfile";
       desc=;
       flags=CAN_REVERT_TO_CODE;
       code_string="Print \"weights_file sent: \" << input_weights_file";
       expr {
	expr="\"weights_file sent: \" << input_weights_file";
       };
       debug=0;
      };
      ProgramCall @[4] {
       name="ProgramCall_ImportDatainputdatainputfile";
       desc=;
       flags=CAN_REVERT_TO_CODE;
       code_string="ImportData(input_data, input_file)";
       prog_args {
	name="prog_args";
	el_typ=ProgArg;
	el_def=0;
	ProgArg @[0] {
	 arg_type=DataTable;
	 type="DataTable*";
	 name="NewData";
	 required=1;
	 def_val=;
	 prev_expr=;
	 expr {
	  expr="input_data";
	 };
	};
	ProgArg @[1] {
	 arg_type=taString;
	 type="String";
	 name="inputFile";
	 required=1;
	 def_val=;
	 prev_expr=;
	 expr {
	  expr="input_file";
	 };
	};
       };
       target=$.programs.gp[0][9]$;
       targ_ld_init="*ImportData*";
      };
      MiscCall @[5] {
       name="MiscCall_taMiscFullArgStr_ToFilelogfilenm";
       desc=;
       flags=CAN_REVERT_TO_CODE;
       code_string="taMisc::FullArgStringToFile(log_file_nm)";
       result_var=NULL;
       object_type=taMisc;
       method=taMisc::FullArgStringToFile;
       meth_args {
	name="meth_args";
	el_typ=ProgArg;
	el_def=0;
	ProgArg @[0] {
	 arg_type=const_taString_ref;
	 type="taString&";
	 name="fname";
	 required=1;
	 def_val="\"\"";
	 prev_expr=;
	 expr {
	  expr="log_file_nm";
	 };
	};
       };
      };
     };
    };
    Comment @[30] {
     name="Comment_Addyourownvariableshere";
     desc="= Add your own variables here =";
     flags=CAN_REVERT_TO_CODE;
     code_string="// = Add your own variables here =";
    };
    Comment @[31] {
     name="Comment_Belowsaveslogfil_ndarddatatables";
     desc="= Below saves log files of standard data tables =";
     flags=CAN_REVERT_TO_CODE;
     code_string="// = Below saves log files of standard data tables =";
    };
    MethodCall @[32] {
     name="MethodCall_EpochOutputDataS_filenmfalsetrue";
     desc="last arg is to restrict log to dmem_proc = 0";
     flags=CAN_REVERT_TO_CODE;
     code_string="EpochOutputData->SaveDataLog(log_file_nm, false, true)";
     result_var=NULL;
     obj=.programs[0].vars[12]$$;
     method=DataTable::SaveDataLog;
     meth_args {
      name="meth_args";
      el_typ=ProgArg;
      el_def=0;
      ProgArg @[0] {
       arg_type=const_taString_ref;
       type="taString&";
       name="fname";
       required=0;
       def_val="\"\"";
       prev_expr=;
       expr {
	expr="log_file_nm";
       };
      };
      ProgArg @[1] {
       arg_type=bool;
       type="bool";
       name="append";
       required=0;
       def_val="false";
       prev_expr=;
       expr {
	expr="false";
       };
      };
      ProgArg @[2] {
       arg_type=bool;
       type="bool";
       name="dmem_proc_0";
       required=0;
       def_val="true";
       prev_expr=;
       expr {
	expr="true";
       };
      };
     };
     meth_sig="void SaveDataLog(taString& fname, bool append = false, bool dmem_proc_0 = true)";
     meth_desc=" incrementally save each new row of data that is written to the datatable (at WriteClose()) to given file. writes the header first if not appending to existing file. if running under demem, dmem_proc_0 determines if only the first processor writes to the log file, or if all processors write";
    };
    PrintVar @[33] {
     name="PrintVar_PrintSavingepoch_datatologfilenm";
     desc=;
     flags=CAN_REVERT_TO_CODE;
     code_string="Print  \"Saving epoch log data to:\" log_file_nm";
     message="Saving epoch log data to:";
     print_var=$.programs[0].vars[10]$;
     print_var2=NULL;
     print_var3=NULL;
     print_var4=NULL;
     print_var5=NULL;
     print_var6=NULL;
     debug=0;
    };
    Comment @[34] {
     name="Comment_SavetriallogOFFbydefault";
     desc="== Save trial log -- OFF by default ==";
     flags=CAN_REVERT_TO_CODE;
     code_string="// == Save trial log -- OFF by default ==";
    };
    MethodCall @[35] {
     name="MethodCall_TrialOutputDataS_ilenmfalsefalse";
     desc="last arg is to restrict log to dmem_proc = 0";
     flags=OFF;
     code_string=;
     result_var=NULL;
     obj=.programs[0].vars[13]$$;
     method=DataTable::SaveDataLog;
     meth_args {
      name="meth_args";
      el_typ=ProgArg;
      el_def=0;
      ProgArg @[0] {
       arg_type=const_taString_ref;
       type="taString&";
       name="fname";
       required=0;
       def_val="\"\"";
       prev_expr=;
       expr {
	expr="log_file_nm";
       };
      };
      ProgArg @[1] {
       arg_type=bool;
       type="bool";
       name="append";
       required=0;
       def_val="false";
       prev_expr=;
       expr {
	expr="false";
       };
      };
      ProgArg @[2] {
       arg_type=bool;
       type="bool";
       name="dmem_proc_0";
       required=0;
       def_val="true";
       prev_expr=;
       expr {
	expr="false";
       };
      };
     };
     meth_sig="void SaveDataLog(taString& fname, bool append = false, bool dmem_proc_0 = true)";
     meth_desc=" incrementally save each new row of data that is written to the datatable (at WriteClose()) to given file. writes the header first if not appending to existing file. if running under demem, dmem_proc_0 determines if only the first processor writes to the log file, or if all processors write";
    };
    PrintVar @[36] {
     name="PrintVar_PrintSavedtriall_datatologfilenm";
     desc=;
     flags=OFF;
     code_string=;
     message="Saved trial log data to:";
     print_var=$.programs[0].vars[10]$;
     print_var2=NULL;
     print_var3=NULL;
     print_var4=NULL;
     print_var5=NULL;
     print_var6=NULL;
     debug=0;
    };
    OtherProgramVar @[37] {
     name="OtherProgramVar_VarsToprogramSav_ilevar2var3var4";
     desc="propagate the tag";
     flags=CAN_REVERT_TO_CODE;
     code_string="Vars To:  program=SaveWeights set=to  var_1=output_weights_file  var_2=?  var_3=?  var_4=? ";
     other_prog=.programs.gp[0][7]$$;
     set_other=1;
     var_1=.programs[0].vars[9]$$;
     var_2=NULL;
     var_3=NULL;
     var_4=NULL;
    };
    PrintExpr @[38] {
     name="PrintExpr_PrintRunningbatchname";
     desc=;
     flags=CAN_REVERT_TO_CODE;
     code_string="Print \"Running: \" << batch.name";
     expr {
      expr="\"Running: \" << batch.name";
     };
     debug=0;
    };
    ProgramCall @[39] {
     name="ProgramCall_BpBatchnetworkinputdata3";
     desc=;
     flags=VERBOSE|CAN_REVERT_TO_CODE;
     code_string="BpBatch(network, input_data, 3)";
     prog_args {
      name="prog_args";
      el_typ=ProgArg;
      el_def=0;
      ProgArg @[0] {
       arg_type=BpNetwork;
       type="BpNetwork*";
       name="network";
       required=1;
       def_val=;
       prev_expr=;
       expr {
	expr="network";
       };
      };
      ProgArg @[1] {
       arg_type=DataTable;
       type="DataTable*";
       name="input_data";
       required=1;
       def_val=;
       prev_expr=;
       expr {
	expr="input_data";
       };
      };
      ProgArg @[2] {
       arg_type=int;
       type="int";
       name="max_batch";
       required=1;
       def_val=;
       prev_expr=;
       expr {
	expr="3";
       };
      };
     };
     target=$.programs.gp[0][0]$;
     targ_ld_init="*BpBatch*";
    };
    PrintVar @[40] {
     name="PrintVar_PrintSavingtrial_datatologfilenm";
     desc=;
     flags=OFF;
     code_string=;
     message="Saving trial log data to:";
     print_var=$.programs[0].vars[10]$;
     print_var2=NULL;
     print_var3=NULL;
     print_var4=NULL;
     print_var5=NULL;
     print_var6=NULL;
     debug=0;
    };
    PrintExpr @[41] {
     name="PrintExpr_PrintbeforeSaveWeights";
     desc=;
     flags=CAN_REVERT_TO_CODE;
     code_string="Print \"before SaveWeights\"";
     expr {
      expr="\"before SaveWeights\"";
     };
     debug=0;
    };
    ProgramCall @[42] {
     name="ProgramCall_SaveWeightsnetwork";
     desc=;
     flags=CAN_REVERT_TO_CODE;
     code_string="SaveWeights(output_weights_file, network)";
     prog_args {
      name="prog_args";
      el_typ=ProgArg;
      el_def=0;
      ProgArg @[0] {
       arg_type=Network;
       type="BpNetwork*";
       name="network";
       required=1;
       def_val=;
       prev_expr="output_weights_file";
       expr {
	expr="network";
       };
      };
     };
     target=$.programs.gp[0][7]$;
     targ_ld_init="*SaveWeights*";
    };
    PrintExpr @[43] {
     name="PrintExpr_PrintafterSaveWeights";
     desc=;
     flags=CAN_REVERT_TO_CODE;
     code_string="Print \"after SaveWeights\"";
     expr {
      expr="\"after SaveWeights\"";
     };
     debug=0;
    };
    PrintExpr @[44] {
     name="PrintExpr_Printoutputfilet_tDataoutputfile";
     desc=;
     flags=CAN_REVERT_TO_CODE;
     code_string="Print \"output_file to sent to ExportData: \" << output_file";
     expr {
      expr="\"output_file to sent to ExportData: \" << output_file";
     };
     debug=0;
    };
    ProgramCall @[45] {
     name="ProgramCall_ExportDataTrialO_tDataoutputfile";
     desc=;
     flags=CAN_REVERT_TO_CODE;
     code_string="ExportData(TrialOutputData, output_file)";
     prog_args {
      name="prog_args";
      el_typ=ProgArg;
      el_def=0;
      ProgArg @[0] {
       arg_type=DataTable;
       type="DataTable*";
       name="FinalData";
       required=1;
       def_val=;
       prev_expr="TrialOutputData";
       expr {
	expr="TrialOutputData";
       };
      };
      ProgArg @[1] {
       arg_type=taString;
       type="String";
       name="output_file";
       required=1;
       def_val=;
       prev_expr=;
       expr {
	expr="output_file";
       };
      };
     };
     target=$.programs.gp[0][8]$;
     targ_ld_init="*ExportData*";
    };
   };
   step_prog=.programs.gp[0][3]$$;
   step_n=1;
   doc {
    name="doc";
    desc=;
    web_doc=0;
    wiki=;
    url="local";
    full_url="local";
    text_size=1;
    text=;
    html_text=;
   };
  };
  Program_Group @.gp[0] {
   name="BpAll_Std";
   el_typ=Program;
   el_def=0;
   tags="Bp, Std, All";
   desc="The full set of programs for training a standard Backpropagation network";
   debug_mode=0;
   Program @[0] {
    UserDataItem_List @*(.user_data_) {
     name=;
     el_typ=UserData_DocLink;
     el_def=0;
     UserData_DocLink @[0] {name="DocLink": doc=.programs.gp[0][0].doc$$: };
    };
    name="BpBatch";
    short_nm="Batch";
    tags="Bp, Std";
    desc="Iterate over training runs (a batch of training runs) -- just a simple loop that calls training program";
    version {
     major=0;
     minor=0;
     step=0;
    };
    author=;
    email=;
    flags=0;
    stop_step_cond {
     expr=;
    };
    objs {
     name="objs";
     el_typ=taNBase;
     el_def=0;
    };
    objs_vars {
     name="objs_vars";
     el_typ=ProgVar;
     el_def=0;
    };
    types {
     name="types";
     el_typ=DynEnumType;
     el_def=0;
    };
    args {
     name="args";
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="network";
      var_type=T_Object;
      object_type=BpNetwork;
      object_val=$.networks[0]$;
      object_scope=NULL;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL|PGRM_ARG;
      reference=0;
      desc="network to operate on -- updates batch counter on network and passes it to train program";
      init_from=NULL;
     };
     ProgVar @[1] {
      name="input_data";
      var_type=T_Object;
      object_type=DataTable;
      object_val=$.data.gp[0][1]$;
      object_scope=NULL;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL|PGRM_ARG;
      reference=0;
      desc="datatable with training patterns -- not used by this program, but passed to train program";
      init_from=NULL;
     };
     ProgVar @[2] {
      name="max_batch";
      var_type=T_Int;
      int_val=3;
      object_scope=NULL;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL|PGRM_ARG;
      reference=0;
      desc="maximum number of batch runs to perform";
      init_from=NULL;
     };
    };
    vars {
     name="vars";
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="batch";
      var_type=T_Int;
      int_val=0;
      object_scope=NULL;
      flags=CTRL_PANEL|CTRL_READ_ONLY|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc="batch counter";
      init_from=NULL;
     };
    };
    functions {
     name="functions";
     el_typ=Function;
     el_def=0;
    };
    init_code {
     name="init_code";
     el_typ=ProgCode;
     el_def=0;
     NetCounterInit @[0] {
      name="NetCounterInit_NetCounterInitbatch";
      desc="initializes local batch counter and batch field on network";
      flags=CAN_REVERT_TO_CODE;
      code_string="Net Counter Init: batch";
      network_var=.programs.gp[0][0].args[0]$$;
      local_ctr_var=.programs.gp[0][0].vars[0]$$;
      counter=Network::batch;
      update_after=0;
     };
    };
    prog_code {
     name="prog_code";
     el_typ=ProgCode;
     el_def=0;
     NetCounterInit @[0] {
      name="NetCounterInit_NetCounterInitbatch";
      desc="initializes local batch counter and batch field on network";
      flags=CAN_REVERT_TO_CODE;
      code_string="Net Counter Init: batch";
      network_var=$.programs.gp[0][0].args[0]$;
      local_ctr_var=$.programs.gp[0][0].vars[0]$;
      counter=Network::batch;
      update_after=0;
     };
     WhileLoop @[1] {
      name="WhileLoop_whilebatchmaxbatch";
      desc="the main loop over training runs";
      flags=CAN_REVERT_TO_CODE;
      code_string="while (batch < max_batch)";
      loop_code {
       name="loop_code";
       el_typ=ProgCode;
       el_def=0;
       ProgramCall @[0] {
	name="ProgramCall_BpTrainnetworkinputdatatrue";
	desc="run the training program -- sets the network and input_data args";
	flags=CAN_REVERT_TO_CODE;
	code_string="BpTrain(network, input_data, true)";
	prog_args {
	 name="prog_args";
	 el_typ=ProgArg;
	 el_def=0;
	 ProgArg @[0] {
	  arg_type=BpNetwork;
	  type="BpNetwork*";
	  name="network";
	  required=1;
	  def_val=;
	  prev_expr="network";
	  expr {
	   expr="network";
	  };
	 };
	 ProgArg @[1] {
	  arg_type=DataTable;
	  type="DataTable*";
	  name="input_data";
	  required=1;
	  def_val=;
	  prev_expr="input_data";
	  expr {
	   expr="input_data";
	  };
	 };
	 ProgArg @[2] {
	  arg_type=bool;
	  type="bool";
	  name="no_prompts";
	  required=1;
	  def_val=;
	  prev_expr="true";
	  expr {
	   expr="true";
	  };
	 };
	};
	target=$.programs.gp[0][1]$;
	targ_ld_init="*BpTrain*";
       };
       NetCounterIncr @[1] {
	name="NetCounterIncr_NetCounterIncrbatch";
	desc="increment the local batch counter and copy to network";
	flags=CAN_REVERT_TO_CODE;
	code_string="Net Counter Incr: batch";
	network_var=$.programs.gp[0][0].args[0]$;
	local_ctr_var=$.programs.gp[0][0].vars[0]$;
	counter=Network::batch;
	update_after=0;
       };
      };
      test {
       expr="batch < max_batch";
      };
     };
    };
    step_prog=$.programs.gp[0][3]$;
    step_n=1;
    doc {
     name="doc";
     desc=;
     web_doc=0;
     wiki=;
     url="local";
     full_url="local";
     text_size=1;
     text=;
     html_text=;
    };
   };
   Program @[1] {
    UserDataItem_List @*(.user_data_) {
     name=;
     el_typ=UserData_DocLink;
     el_def=0;
     UserData_DocLink @[0] {name="DocLink": doc=.programs.gp[0][1].doc$$: };
    };
    name="BpTrain";
    short_nm="Train";
    tags="Bp, Train, RndSeedList";
    desc="A complete training run of a Backpropagation network: iterating over epochs until the network has learned the task.  Also has a list of random seeds that are tied to the network batch counter, providing consistent runs regardless of what happens in the training of each network, or where it is run (e.g., on different processors)";
    version {
     major=8;
     minor=0;
     step=0;
    };
    author="Randall C. O'Reilly";
    email="emergent-users@grey.colorado.edu";
    flags=OBJS_UPDT_GUI;
    stop_step_cond {
     expr=;
    };
    objs {
     name="objs";
     el_typ=RndSeed;
     el_def=0;
     RndSeed_List @[0] {
      name="rnd_seeds";
      seeds {
       name="seeds";
       el_typ=RndSeed;
       el_def=0;
       RndSeed @[0] {
	name="RndSeed_1";
	rnd_seed=2883105751;
       };
       RndSeed @[1] {
	name="RndSeed_2";
	rnd_seed=2883105752;
       };
       RndSeed @[2] {
	name="RndSeed_3";
	rnd_seed=2883105753;
       };
       RndSeed @[3] {
	name="RndSeed_4";
	rnd_seed=2883105754;
       };
       RndSeed @[4] {
	name="RndSeed_5";
	rnd_seed=2883105755;
       };
       RndSeed @[5] {
	name="RndSeed_6";
	rnd_seed=2883105756;
       };
       RndSeed @[6] {
	name="RndSeed_7";
	rnd_seed=2883105757;
       };
       RndSeed @[7] {
	name="RndSeed_8";
	rnd_seed=2883105758;
       };
       RndSeed @[8] {
	name="RndSeed_9";
	rnd_seed=2883105759;
       };
       RndSeed @[9] {
	name="RndSeed_10";
	rnd_seed=2883105760;
       };
       RndSeed @[10] {
	name="RndSeed_11";
	rnd_seed=2883105761;
       };
       RndSeed @[11] {
	name="RndSeed_12";
	rnd_seed=2883105762;
       };
       RndSeed @[12] {
	name="RndSeed_13";
	rnd_seed=2883105763;
       };
       RndSeed @[13] {
	name="RndSeed_14";
	rnd_seed=2883105764;
       };
       RndSeed @[14] {
	name="RndSeed_15";
	rnd_seed=2883105765;
       };
       RndSeed @[15] {
	name="RndSeed_16";
	rnd_seed=2883105766;
       };
       RndSeed @[16] {
	name="RndSeed_17";
	rnd_seed=2883105767;
       };
       RndSeed @[17] {
	name="RndSeed_18";
	rnd_seed=2883105768;
       };
       RndSeed @[18] {
	name="RndSeed_19";
	rnd_seed=2883105769;
       };
       RndSeed @[19] {
	name="RndSeed_20";
	rnd_seed=2883105770;
       };
       RndSeed @[20] {
	name="RndSeed_21";
	rnd_seed=2883105771;
       };
       RndSeed @[21] {
	name="RndSeed_22";
	rnd_seed=2883105772;
       };
       RndSeed @[22] {
	name="RndSeed_23";
	rnd_seed=2883105773;
       };
       RndSeed @[23] {
	name="RndSeed_24";
	rnd_seed=2883105774;
       };
       RndSeed @[24] {
	name="RndSeed_25";
	rnd_seed=2883105775;
       };
      };
     };
     RndSeed @[1] {
      name="rnd_seed";
      rnd_seed=2947437512;
     };
    };
    objs_vars {
     name="objs_vars";
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="rnd_seeds";
      var_type=T_Object;
      object_type=RndSeed_List;
      object_val=.programs.gp[0][1].objs[0]$$;
      object_scope=NULL;
      objs_ptr=1;
      flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
     ProgVar @[1] {
      name="rnd_seed";
      var_type=T_Object;
      object_type=RndSeed;
      object_val=.programs.gp[0][1].objs[1]$$;
      object_scope=NULL;
      objs_ptr=1;
      flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
    };
    types {
     name="types";
     el_typ=DynEnumType;
     el_def=0;
     DynEnumType @[0] {
      name="RndInitType";
      desc=;
      enums {
       name="enums";
       el_typ=DynEnumItem;
       el_def=0;
       DynEnumItem @[0] {
	name="OLD_SEED";
	value=0;
	desc="use stored random seed value (recreates same sequence every time)";
       };
       DynEnumItem @[1] {
	name="NEW_SEED";
	value=1;
	desc="generate new random seed (new sequence of random numbers)";
       };
       DynEnumItem @[2] {
	name="BATCH_SEEDS";
	value=2;
	desc="use a fixed list of random seeds with the current batch number selecting the seed to use -- provides a consistent set of initial conditions for each batch regardless..";
       };
      };
      bits=0;
     };
    };
    args {
     name="args";
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="network";
      var_type=T_Object;
      object_type=BpNetwork;
      object_val=$.networks[0]$;
      object_scope=NULL;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL|PGRM_ARG;
      reference=0;
      desc=;
      init_from=NULL;
     };
     ProgVar @[1] {
      name="input_data";
      var_type=T_Object;
      object_type=DataTable;
      object_val=$.data.gp[0][1]$;
      object_scope=NULL;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL|PGRM_ARG;
      reference=0;
      desc=;
      init_from=NULL;
     };
     ProgVar @[2] {
      name="no_prompts";
      var_type=T_Bool;
      bool_val=1;
      object_scope=NULL;
      flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL|PGRM_ARG;
      reference=0;
      desc="If train is called by other programs (e.g., Batch), they should set this to true -- otherwise it is reset to false in Init";
      init_from=NULL;
     };
    };
    vars {
     name="vars";
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="max_epoch";
      var_type=T_Int;
      int_val=2000;
      object_scope=NULL;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
     ProgVar @[1] {
      name="epoch";
      var_type=T_Int;
      int_val=25;
      object_scope=NULL;
      flags=CTRL_PANEL|CTRL_READ_ONLY|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
     ProgVar @[2] {
      name="train_mode";
      var_type=T_HardEnum;
      int_val=1;
      object_scope=NULL;
      hard_enum_type=Network::TrainMode;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
     ProgVar @[3] {
      name="rnd_init";
      var_type=T_DynEnum;
      object_scope=NULL;
      dyn_enum_val {
       user_data_=NULL;
       enum_type=.programs.gp[0][1].types[0]$$;
       value=2;
      };
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc="how to initialize the random numbers when the Init button is pressed";
      init_from=NULL;
     };
     ProgVar @[4] {
      name="err_stopcrit";
      var_type=T_Real;
      real_val=0;
      object_scope=NULL;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc="stopping criterion -- network avg_sse must be <= this number to stop training -- see n_under_thr too";
      init_from=NULL;
     };
     ProgVar @[5] {
      name="n_under_thr";
      var_type=T_Int;
      int_val=1;
      object_scope=NULL;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc="number of times network needs to be under stopcrit threshold to actually stop";
      init_from=NULL;
     };
     ProgVar @[6] {
      name="save_final_wts";
      var_type=T_Bool;
      bool_val=0;
      object_scope=NULL;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc="save the network's weights at the end of training?  ";
      init_from=NULL;
     };
     ProgVar @[7] {
      name="save_wts_interval";
      var_type=T_Int;
      int_val=-1;
      object_scope=NULL;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc="save the weights every this many epochs, if number is >= 1 (otherwise do not save weights)";
      init_from=NULL;
     };
     ProgVar @[8] {
      name="n_under_cnt";
      var_type=T_Int;
      int_val=0;
      object_scope=NULL;
      flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc="current under threshold counter";
      init_from=NULL;
     };
     ProgVar @[9] {
      name="train_timer";
      var_type=T_Object;
      object_type=TimeUsed;
      object_val=.networks[0].train_time$$;
      object_scope=NULL;
      objs_ptr=0;
      flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
    };
    functions {
     name="functions";
     el_typ=Function;
     el_def=0;
     Function @[0] {
      name="GetRandomSeed";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="GetRandomSeed() returns: int";
      return_type=T_Int;
      object_type=taOBase;
      args {
       name="args";
       el_typ=ProgVar;
       el_def=0;
      };
      fun_code {
       name="fun_code";
       el_typ=ProgCode;
       el_def=0;
       LocalVars @[0] {
	name="LocalVars_LocalVars0vars";
	desc=;
	flags=CAN_REVERT_TO_CODE;
	code_string="LocalVars (0 vars)";
	local_vars {
	 name="local_vars";
	 el_typ=ProgVar;
	 el_def=0;
	};
       };
       Switch @[1] {
	name="Switch_switchrndinit";
	desc=;
	flags=CAN_REVERT_TO_CODE;
	code_string="switch(rnd_init)";
	switch_var=.programs.gp[0][1].vars[3]$$;
	cases {
	 name="cases";
	 el_typ=CaseBlock;
	 el_def=0;
	 CaseBlock @[0] {
	  name="CaseBlock_caseOLDSEED";
	  desc=;
	  flags=CAN_REVERT_TO_CODE;
	  code_string="case: OLD_SEED";
	  prog_code {
	   name="prog_code";
	   el_typ=ProgCode;
	   el_def=0;
	   MethodCall @[0] {
	    name="MethodCall_rndseedOldSeed";
	    desc="restore previous random seed (all runs produce same results) -- click on rnd_seed object to generate a new seed to use for this if you want";
	    flags=CAN_REVERT_TO_CODE;
	    code_string="rnd_seed->OldSeed()";
	    result_var=NULL;
	    obj=.programs.gp[0][1].objs_vars[1]$$;
	    method=RndSeed::OldSeed;
	    meth_args {
	     name="meth_args";
	     el_typ=ProgArg;
	     el_def=0;
	    };
	    meth_sig="void OldSeed()";
	    meth_desc=" restore current seed to random num generator";
	   };
	  };
	  case_val {
	   expr="OLD_SEED";
	  };
	  is_default=0;
	 };
	 CaseBlock @[1] {
	  name="CaseBlock_caseNEWSEED";
	  desc=;
	  flags=CAN_REVERT_TO_CODE;
	  code_string="case: NEW_SEED";
	  prog_code {
	   name="prog_code";
	   el_typ=ProgCode;
	   el_def=0;
	   MethodCall @[0] {
	    name="MethodCall_rndseedNewSeed";
	    desc="new random numbers each time";
	    flags=CAN_REVERT_TO_CODE;
	    code_string="rnd_seed->NewSeed()";
	    result_var=NULL;
	    obj=$.programs.gp[0][1].objs_vars[1]$;
	    method=RndSeed::NewSeed;
	    meth_args {
	     name="meth_args";
	     el_typ=ProgArg;
	     el_def=0;
	    };
	    meth_sig="void NewSeed()";
	    meth_desc=" set the seed to a new random value (based on time and process id)";
	   };
	  };
	  case_val {
	   expr="NEW_SEED";
	  };
	  is_default=0;
	 };
	 CaseBlock @[2] {
	  name="CaseBlock_caseBATCHSEEDS";
	  desc=;
	  flags=CAN_REVERT_TO_CODE;
	  code_string="case: BATCH_SEEDS";
	  prog_code {
	   name="prog_code";
	   el_typ=ProgCode;
	   el_def=0;
	   MethodCall @[0] {
	    name="MethodCall_rndseedsUseSeedn_dseedsseedssize";
	    desc="restore previous random seed (all runs produce same results); change to NewSeed to have new random numbers each time";
	    flags=CAN_REVERT_TO_CODE;
	    code_string="rnd_seeds->UseSeed(network.batch % rnd_seeds.seeds.size)";
	    result_var=NULL;
	    obj=.programs.gp[0][1].objs_vars[0]$$;
	    method=RndSeed_List::UseSeed;
	    meth_args {
	     name="meth_args";
	     el_typ=ProgArg;
	     el_def=0;
	     ProgArg @[0] {
	      arg_type=int;
	      type="int";
	      name="idx";
	      required=1;
	      def_val=;
	      prev_expr=;
	      expr {
	       expr="network.batch % rnd_seeds.seeds.size";
	      };
	     };
	    };
	    meth_sig="void UseSeed(int idx)";
	    meth_desc=" use seed at given index in the list (does OldSeed on it); wraps around (modulus) if idx is > list size (issues warning)";
	   };
	  };
	  case_val {
	   expr="BATCH_SEEDS";
	  };
	  is_default=0;
	 };
	};
       };
      };
     };
    };
    init_code {
     name="init_code";
     el_typ=ProgCode;
     el_def=0;
     AssignExpr @[0] {
      name="AssignExpr_nopromptsfalse";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="no_prompts = false";
      result_var=.programs.gp[0][1].args[2]$$;
      expr {
       expr="false";
      };
     };
     MethodCall @[1] {
      name="MethodCall_networkCheckConfigfalse";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="network->CheckConfig(false)";
      result_var=NULL;
      obj=.programs.gp[0][1].args[0]$$;
      method=taBase::CheckConfig;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=bool;
	type="bool";
	name="quiet";
	required=0;
	def_val="false";
	prev_expr=;
	expr {
	 expr="false";
	};
       };
      };
      meth_sig="bool CheckConfig(bool quiet = false)";
      meth_desc=" check the configuration of this object and all its children (defaults to no confirm of success)";
     };
     AssignExpr @[2] {
      name="AssignExpr_traintimernetworktraintime";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="train_timer = network.train_time";
      result_var=.programs.gp[0][1].vars[9]$$;
      expr {
       expr="network.train_time";
      };
     };
     AssignExpr @[3] {
      name="AssignExpr_nundercnt0";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="n_under_cnt = 0";
      result_var=.programs.gp[0][1].vars[8]$$;
      expr {
       expr="0";
      };
     };
     FunctionCall @[4] {
      name="FunctionCall_GetRandomSeed";
      desc="initialize random seed";
      flags=CAN_REVERT_TO_CODE;
      code_string="GetRandomSeed()";
      result_var=NULL;
      fun=.programs.gp[0][1].functions[0]$$;
      fun_args {
       name="fun_args";
       el_typ=ProgArg;
       el_def=0;
      };
     };
     WtInitPrompt @[5] {
      name="WtInitPrompt_ifguiDoyouwantto_eNetworkWeights";
      desc="don't initialize weights without checking";
      flags=CAN_REVERT_TO_CODE;
      code_string="if (gui && \"Do you want to Initialize Network Weights\")";
      prompt="Do you want to Initialize Network Weights";
      yes_label="Yes";
      no_label="No";
      yes_code {
       name="yes_code";
       el_typ=ProgCode;
       el_def=0;
       MethodCall @[0] {
	name="MethodCall_networkInitWeights";
	desc="initialize network weights: could also load pre-set weights or something else here";
	flags=CAN_REVERT_TO_CODE;
	code_string="network->Init_Weights()";
	result_var=NULL;
	obj=$.programs.gp[0][1].args[0]$;
	method=Network::Init_Weights;
	meth_args {
	 name="meth_args";
	 el_typ=ProgArg;
	 el_def=0;
	};
	meth_sig="void Init_Weights()";
	meth_desc=" Initialize the weights -- also inits acts, counters and stats -- does unit level threaded and then does Layers after";
       };
       PrintExpr @[1] {
	name="PrintExpr_Printnetworkname_ghtsInitialized";
	desc=;
	flags=CAN_REVERT_TO_CODE;
	code_string="Print network.name << \" Weights Initialized\"";
	expr {
	 expr="network.name << \" Weights Initialized\"";
	};
	debug=0;
       };
      };
     };
     AssignExpr @[6] {
      name="AssignExpr_epochnetworkepoch";
      desc="grab the official network epoch counter: will be initialized if needed by now";
      flags=CAN_REVERT_TO_CODE;
      code_string="epoch = network.epoch";
      result_var=.programs.gp[0][1].vars[1]$$;
      expr {
       expr="network.epoch";
      };
     };
    };
    prog_code {
     name="prog_code";
     el_typ=ProgCode;
     el_def=0;
     AssignExpr @[0] {
      name="AssignExpr_traintimernetworktraintime";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="train_timer = network.train_time";
      result_var=$.programs.gp[0][1].vars[9]$;
      expr {
       expr="network.train_time";
      };
     };
     MethodCall @[1] {
      name="MethodCall_traintimerStartTimertrue";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="train_timer->StartTimer(true)";
      result_var=NULL;
      obj=$.programs.gp[0][1].vars[9]$;
      method=TimeUsed::StartTimer;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=bool;
	type="bool";
	name="reset_used";
	required=0;
	def_val="true";
	prev_expr=;
	expr {
	 expr="true";
	};
       };
      };
      meth_sig="void StartTimer(bool reset_used = true)";
      meth_desc=" record the current time as the starting time, and optionally reset the time used information";
     };
     AssignExpr @[2] {
      name="AssignExpr_nundercnt0";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="n_under_cnt = 0";
      result_var=$.programs.gp[0][1].vars[8]$;
      expr {
       expr="0";
      };
     };
     MemberAssign @[3] {
      name="MemberAssign_networktrainmodetrainmode";
      desc="set network's training mode to our local value";
      flags=CAN_REVERT_TO_CODE;
      code_string="network.train_mode = train_mode";
      obj=$.programs.gp[0][1].args[0]$;
      path="train_mode";
      expr {
       expr="train_mode";
      };
      update_after=0;
     };
     FunctionCall @[4] {
      name="FunctionCall_GetRandomSeed";
      desc="initialize random seed";
      flags=CAN_REVERT_TO_CODE;
      code_string="GetRandomSeed()";
      result_var=NULL;
      fun=$.programs.gp[0][1].functions[0]$;
      fun_args {
       name="fun_args";
       el_typ=ProgArg;
       el_def=0;
      };
     };
     If @[5] {
      name="If_ifnoprompts";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="if (no_prompts)";
      cond {
       expr="no_prompts";
      };
      true_code {
       name="true_code";
       el_typ=ProgCode;
       el_def=0;
       MethodCall @[0] {
	name="MethodCall_networkInitWeights";
	desc="initialize network weights: could also load pre-set weights or something else here";
	flags=CAN_REVERT_TO_CODE;
	code_string="network->Init_Weights()";
	result_var=NULL;
	obj=$.programs.gp[0][1].args[0]$;
	method=Network::Init_Weights;
	meth_args {
	 name="meth_args";
	 el_typ=ProgArg;
	 el_def=0;
	};
	meth_sig="void Init_Weights()";
	meth_desc=" Initialize the weights -- also inits acts, counters and stats -- does unit level threaded and then does Layers after";
       };
       PrintExpr @[1] {
	name="PrintExpr_Printnetworkname_ghtsInitialized";
	desc=;
	flags=CAN_REVERT_TO_CODE;
	code_string="Print network.name << \" Weights Initialized\"";
	expr {
	 expr="network.name << \" Weights Initialized\"";
	};
	debug=0;
       };
      };
     };
     AssignExpr @[6] {
      name="AssignExpr_epochnetworkepoch";
      desc="grab the official network epoch counter: will be initialized if needed by now";
      flags=CAN_REVERT_TO_CODE;
      code_string="epoch = network.epoch";
      result_var=$.programs.gp[0][1].vars[1]$;
      expr {
       expr="network.epoch";
      };
     };
     WhileLoop @[7] {
      name="WhileLoop_whileepochmaxepoch";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="while (epoch < max_epoch)";
      loop_code {
       name="loop_code";
       el_typ=ProgCode;
       el_def=0;
       ProgramCall @[0] {
	name="ProgramCall_BpEpochnetworkinputdata";
	desc=;
	flags=CAN_REVERT_TO_CODE;
	code_string="BpEpoch(network, input_data)";
	prog_args {
	 name="prog_args";
	 el_typ=ProgArg;
	 el_def=0;
	 ProgArg @[0] {
	  arg_type=BpNetwork;
	  type="BpNetwork*";
	  name="network";
	  required=1;
	  def_val=;
	  prev_expr=;
	  expr {
	   expr="network";
	  };
	 };
	 ProgArg @[1] {
	  arg_type=DataTable;
	  type="DataTable*";
	  name="input_data";
	  required=1;
	  def_val=;
	  prev_expr=;
	  expr {
	   expr="input_data";
	  };
	 };
	};
	target=.programs.gp[0][2]$$;
	targ_ld_init="*BpEpoch*";
       };
       NetCounterIncr @[1] {
	name="NetCounterIncr_NetCounterIncrepoch";
	desc="increment the epoch counter";
	flags=CAN_REVERT_TO_CODE;
	code_string="Net Counter Incr: epoch";
	network_var=$.programs.gp[0][1].args[0]$;
	local_ctr_var=$.programs.gp[0][1].vars[1]$;
	counter=Network::epoch;
	update_after=0;
       };
       If @[2] {
	name="If_ifnetworkavgsseavgerrstopcrit";
	desc=;
	flags=CAN_REVERT_TO_CODE;
	code_string="if (network.avg_sse.avg <= err_stopcrit)";
	cond {
	 expr="network.avg_sse.avg <= err_stopcrit";
	};
	true_code {
	 name="true_code";
	 el_typ=ProgCode;
	 el_def=0;
	 VarIncr @[0] {
	  name="VarIncr_nundercnt1";
	  desc=;
	  flags=CAN_REVERT_TO_CODE;
	  code_string="n_under_cnt += 1";
	  var=$.programs.gp[0][1].vars[8]$;
	  expr {
	   expr="1";
	  };
	 };
	 IfBreak @[1] {
	  name="IfBreak_ifnundercntnunderthrbreak";
	  desc="stop if errors go below stopping criterion (note: could use sse or avg_sse here too)";
	  flags=CAN_REVERT_TO_CODE;
	  code_string="if(n_under_cnt >=  n_under_thr) break";
	  cond {
	   expr="n_under_cnt >=  n_under_thr";
	  };
	 };
	};
       };
       Else @[3] {
	name="Else_If_ifnetworkavgsseavgerrstopcrit";
	desc=;
	flags=CAN_REVERT_TO_CODE;
	code_string="else";
	cond {
	 expr=;
	};
	true_code {
	 name="true_code";
	 el_typ=ProgCode;
	 el_def=0;
	 AssignExpr @[0] {
	  name="AssignExpr_nundercnt0";
	  desc=;
	  flags=CAN_REVERT_TO_CODE;
	  code_string="n_under_cnt = 0";
	  result_var=$.programs.gp[0][1].vars[8]$;
	  expr {
	   expr="0";
	  };
	 };
	};
       };
       If @[4] {
	name="If_ifsavewtsinterval1";
	desc=;
	flags=CAN_REVERT_TO_CODE;
	code_string="if (save_wts_interval >= 1)";
	cond {
	 expr="save_wts_interval >= 1";
	};
	true_code {
	 name="true_code";
	 el_typ=ProgCode;
	 el_def=0;
	 If @[0] {
	  name="If_ifepochsavewtsinterval0";
	  desc=;
	  flags=CAN_REVERT_TO_CODE;
	  code_string="if (epoch % save_wts_interval == 0)";
	  cond {
	   expr="epoch % save_wts_interval == 0";
	  };
	  true_code {
	   name="true_code";
	   el_typ=ProgCode;
	   el_def=0;
	   ProgramCall @[0] {
	    name="ProgramCall_SaveWeightsnetwork";
	    desc=;
	    flags=CAN_REVERT_TO_CODE;
	    code_string="SaveWeights(network)";
	    prog_args {
	     name="prog_args";
	     el_typ=ProgArg;
	     el_def=0;
	     ProgArg @[0] {
	      arg_type=Network;
	      type="BpNetwork*";
	      name="network";
	      required=1;
	      def_val=;
	      prev_expr=;
	      expr {
	       expr="network";
	      };
	     };
	    };
	    target=$.programs.gp[0][7]$;
	    targ_ld_init="*SaveWeights*";
	   };
	  };
	 };
	};
       };
      };
      test {
       expr="epoch < max_epoch";
      };
     };
     If @[8] {
      name="If_ifsavefinalwts";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="if (save_final_wts)";
      cond {
       expr="save_final_wts";
      };
      true_code {
       name="true_code";
       el_typ=ProgCode;
       el_def=0;
       ProgramCall @[0] {
	name="ProgramCall_SaveWeightsnetwork";
	desc=;
	flags=CAN_REVERT_TO_CODE;
	code_string="SaveWeights(network)";
	prog_args {
	 name="prog_args";
	 el_typ=ProgArg;
	 el_def=0;
	 ProgArg @[0] {
	  arg_type=Network;
	  type="BpNetwork*";
	  name="network";
	  required=1;
	  def_val=;
	  prev_expr=;
	  expr {
	   expr="network";
	  };
	 };
	};
	target=$.programs.gp[0][7]$;
	targ_ld_init="*SaveWeights*";
       };
      };
     };
     MethodCall @[9] {
      name="MethodCall_traintimerEndTimer";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="train_timer->EndTimer()";
      result_var=NULL;
      obj=$.programs.gp[0][1].vars[9]$;
      method=TimeUsed::EndTimer;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
      };
      meth_sig="void EndTimer()";
      meth_desc=" record the current time as the ending time, and compute difference as the time used";
     };
    };
    step_prog=NULL;
    step_n=1;
    doc {
     name="doc";
     desc=;
     web_doc=1;
     wiki="emergent";
     url="BpTrain";
     full_url="https://grey.colorado.edu/emergent/index.php/BpTrain";
     text_size=1;
     text=;
     html_text=;
    };
   };
   Program @[2] {
    UserDataItem_List @*(.user_data_) {
     name=;
     el_typ=UserData_DocLink;
     el_def=0;
     UserData_DocLink @[0] {name="DocLink": doc=.programs.gp[0][2].doc$$: };
    };
    name="BpEpoch";
    short_nm="Epoch";
    tags="Bp, Std";
    desc="iterates over all of the items in a data table and calls BpTrial process on them";
    version {
     major=0;
     minor=0;
     step=0;
    };
    author=;
    email=;
    flags=0;
    stop_step_cond {
     expr=;
    };
    objs {
     name="objs";
     el_typ=taNBase;
     el_def=0;
    };
    objs_vars {
     name="objs_vars";
     el_typ=ProgVar;
     el_def=0;
    };
    types {
     name="types";
     el_typ=DynEnumType;
     el_def=0;
    };
    args {
     name="args";
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="network";
      var_type=T_Object;
      object_type=BpNetwork;
      object_val=$.networks[0]$;
      object_scope=NULL;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL|PGRM_ARG;
      reference=0;
      desc="network to operate on";
      init_from=NULL;
     };
     ProgVar @[1] {
      name="input_data";
      var_type=T_Object;
      object_type=DataTable;
      object_val=$.data.gp[0][1]$;
      object_scope=NULL;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL|PGRM_ARG;
      reference=0;
      desc="table of patterns to present to the network, one row at a time";
      init_from=NULL;
     };
    };
    vars {
     name="vars";
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="data_loop_order";
      var_type=T_HardEnum;
      int_val=1;
      object_scope=NULL;
      hard_enum_type=DataLoop::Order;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc="controls the order in which events (rows of the input data datatable) are presented to the network
(SEQUENTIAL, PERMUTED, RANDOM)";
      init_from=NULL;
     };
     ProgVar @[1] {
      name="trial";
      var_type=T_Int;
      int_val=1205;
      object_scope=NULL;
      flags=CTRL_PANEL|CTRL_READ_ONLY|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc="current trial (event) within the epoch -- increments automatically";
      init_from=NULL;
     };
     ProgVar @[2] {
      name="trial_mon_data";
      var_type=T_Object;
      object_type=DataTable;
      object_val=$.data.gp[1][0]$;
      object_scope=NULL;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc="trial-level output data -- we reset it every epoch by default, so it just contains last epoch of data";
      init_from=NULL;
     };
     ProgVar @[3] {
      name="epoch_timer";
      var_type=T_Object;
      object_type=TimeUsed;
      object_val=.networks[0].epoch_time$$;
      object_scope=NULL;
      objs_ptr=0;
      flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc="timer to record time required to perform one epoch of processing (object is on network -- this is a pointer to it)";
      init_from=NULL;
     };
     ProgVar @[4] {
      name="data_loop_index";
      var_type=T_Int;
      int_val=1205;
      object_scope=NULL;
      flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc="index counter for the looping over items in the input_data datatable (not always the same as trial counter, depending on distributed memory computation)";
      init_from=NULL;
     };
    };
    functions {
     name="functions";
     el_typ=Function;
     el_def=0;
    };
    init_code {
     name="init_code";
     el_typ=ProgCode;
     el_def=0;
     NetCounterInit @[0] {
      name="NetCounterInit_NetCounterInittrial";
      desc="initialize trial counter (local variable and in the network)";
      flags=CAN_REVERT_TO_CODE;
      code_string="Net Counter Init: trial";
      network_var=.programs.gp[0][2].args[0]$$;
      local_ctr_var=.programs.gp[0][2].vars[1]$$;
      counter=Network::trial;
      update_after=0;
     };
     AssignExpr @[1] {
      name="AssignExpr_epochtimernetworkepochtime";
      desc="get pointer to epoch timer object on network";
      flags=CAN_REVERT_TO_CODE;
      code_string="epoch_timer = network.epoch_time";
      result_var=.programs.gp[0][2].vars[3]$$;
      expr {
       expr="network.epoch_time";
      };
     };
    };
    prog_code {
     name="prog_code";
     el_typ=ProgCode;
     el_def=0;
     NetCounterInit @[0] {
      name="NetCounterInit_NetCounterInittrial";
      desc="initialize trial counter (local variable and in the network)";
      flags=CAN_REVERT_TO_CODE;
      code_string="Net Counter Init: trial";
      network_var=$.programs.gp[0][2].args[0]$;
      local_ctr_var=$.programs.gp[0][2].vars[1]$;
      counter=Network::trial;
      update_after=0;
     };
     AssignExpr @[1] {
      name="AssignExpr_epochtimernetworkepochtime";
      desc="get pointer to epoch timer object on network";
      flags=CAN_REVERT_TO_CODE;
      code_string="epoch_timer = network.epoch_time";
      result_var=$.programs.gp[0][2].vars[3]$;
      expr {
       expr="network.epoch_time";
      };
     };
     MethodCall @[2] {
      name="MethodCall_epochtimerStartTimertrue";
      desc="start the epoch timer to record computation time per epoch";
      flags=CAN_REVERT_TO_CODE;
      code_string="epoch_timer->StartTimer(true)";
      result_var=NULL;
      obj=$.programs.gp[0][2].vars[3]$;
      method=TimeUsed::StartTimer;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=bool;
	type="bool";
	name="reset_used";
	required=0;
	def_val="true";
	prev_expr=;
	expr {
	 expr="true";
	};
       };
      };
      meth_sig="void StartTimer(bool reset_used = true)";
      meth_desc=" record the current time as the starting time, and optionally reset the time used information";
     };
     MethodCall @[3] {
      name="MethodCall_trialmondataResetData";
      desc="reset trial-level monitor data every epoch, so it reflects only the most recent epoch's worth of data (turn flags OFF to accumulate trial data across entire training run)";
      flags=CAN_REVERT_TO_CODE;
      code_string="trial_mon_data->ResetData()";
      result_var=NULL;
      obj=.programs.gp[0][2].vars[2]$$;
      method=DataTable::ResetData;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
      };
      meth_sig="void ResetData()";
      meth_desc=" deletes all the data (rows), but keeps the column structure -- this cannot be undone!";
     };
     NetDataLoop @[4] {
      name="NetDataLoop_NetDataLoopPERMU_ardatalooporder";
      desc="iterates over the events/rows of input_data, according to data_loop_order variable";
      flags=CAN_REVERT_TO_CODE;
      code_string="Net Data Loop (PERMUTED):  table=input_data  index=data_loop_index  order_var=data_loop_order ";
      loop_code {
       name="loop_code";
       el_typ=ProgCode;
       el_def=0;
       ProgramCall @[0] {
	name="ProgramCall_BpTrialnetworkinputdata";
	desc="run the trial program, passing network and input_data";
	flags=CAN_REVERT_TO_CODE;
	code_string="BpTrial(network, input_data)";
	prog_args {
	 name="prog_args";
	 el_typ=ProgArg;
	 el_def=0;
	 ProgArg @[0] {
	  arg_type=BpNetwork;
	  type="BpNetwork*";
	  name="network";
	  required=1;
	  def_val=;
	  prev_expr=;
	  expr {
	   expr="network";
	  };
	 };
	 ProgArg @[1] {
	  arg_type=DataTable;
	  type="DataTable*";
	  name="input_data";
	  required=1;
	  def_val=;
	  prev_expr=;
	  expr {
	   expr="input_data";
	  };
	 };
	};
	target=$.programs.gp[0][3]$;
	targ_ld_init="*BpTrial*";
       };
       If @[1] {
	name="If_ifnetworkCompute_ightsTesttrial1";
	desc="test if it is time to update the weight values from delta weights (dWt) computed over trials";
	flags=CAN_REVERT_TO_CODE;
	code_string="if (network.Compute_Weights_Test(trial+1))";
	cond {
	 expr="network.Compute_Weights_Test(trial+1)";
	};
	true_code {
	 name="true_code";
	 el_typ=ProgCode;
	 el_def=0;
	 MethodCall @[0] {
	  name="MethodCall_networkComputeWeights";
	  desc="update the weight values based on changes computed by trial program";
	  flags=CAN_REVERT_TO_CODE;
	  code_string="network->Compute_Weights()";
	  result_var=NULL;
	  obj=$.programs.gp[0][2].args[0]$;
	  method=Network::Compute_Weights;
	  meth_args {
	   name="meth_args";
	   el_typ=ProgArg;
	   el_def=0;
	  };
	  meth_sig="void Compute_Weights()";
	  meth_desc=" update weights for whole net: calls DMem_SumDWts before doing update if in dmem mode";
	 };
	};
       };
      };
      data_var=.programs.gp[0][2].args[1]$$;
      index_var=.programs.gp[0][2].vars[4]$$;
      order_var=.programs.gp[0][2].vars[0]$$;
      order=PERMUTED;
      update_after=0;
      dmem_nprocs=1;
      dmem_this_proc=0;
      grouped=0;
      group_col 9 0="Group";
      group_index_var=NULL;
      group_order_var=NULL;
      group_order=PERMUTED;
      group_idx_list{       };
     };
     If @[5] {
      name="If_ifnetworkwtupdateNetworkBATCH";
      desc="if full batch mode, update only at end of epoch";
      flags=CAN_REVERT_TO_CODE;
      code_string="if (network.wt_update == Network::BATCH)";
      cond {
       expr="network.wt_update == Network::BATCH";
      };
      true_code {
       name="true_code";
       el_typ=ProgCode;
       el_def=0;
       MethodCall @[0] {
	name="MethodCall_networkComputeWeights";
	desc="final update of weights based on accumulated changes";
	flags=CAN_REVERT_TO_CODE;
	code_string="network->Compute_Weights()";
	result_var=NULL;
	obj=$.programs.gp[0][2].args[0]$;
	method=Network::Compute_Weights;
	meth_args {
	 name="meth_args";
	 el_typ=ProgArg;
	 el_def=0;
	};
	meth_sig="void Compute_Weights()";
	meth_desc=" update weights for whole net: calls DMem_SumDWts before doing update if in dmem mode";
       };
      };
     };
     MethodCall @[6] {
      name="MethodCall_networkComputeEpochStats";
      desc="network accumulates some core statistics over the epoch -- this finalizes that process and computes summary stats";
      flags=CAN_REVERT_TO_CODE;
      code_string="network->Compute_EpochStats()";
      result_var=NULL;
      obj=$.programs.gp[0][2].args[0]$;
      method=LeabraNetwork::Compute_EpochStats;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
      };
      meth_sig="void Compute_EpochStats()";
      meth_desc=" compute epoch-level statistics; calls DMem_ComputeAggs (if dmem) and EpochSSE -- specific algos may add more compute epoch-level statistics, including SSE, AvgExtRew and AvgCycles";
     };
     MethodCall @[7] {
      name="MethodCall_epochtimerEndTimer";
      desc="done with the computation in the epoch -- record time it took";
      flags=CAN_REVERT_TO_CODE;
      code_string="epoch_timer->EndTimer()";
      result_var=NULL;
      obj=$.programs.gp[0][2].vars[3]$;
      method=TimeUsed::EndTimer;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
      };
      meth_sig="void EndTimer()";
      meth_desc=" record the current time as the ending time, and compute difference as the time used";
     };
     ProgramCall @[8] {
      name="ProgramCall_BpEpochMonitornetwork";
      desc="run program that records data from network and possibly other sources about the epoch";
      flags=CAN_REVERT_TO_CODE;
      code_string="BpEpochMonitor(network)";
      prog_args {
       name="prog_args";
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=Network;
	type="BpNetwork*";
	name="network";
	required=1;
	def_val=;
	prev_expr=;
	expr {
	 expr="network";
	};
       };
      };
      target=.programs.gp[0][6]$$;
      targ_ld_init="*BpEpochMonitor*";
     };
    };
    step_prog=NULL;
    step_n=1;
    doc {
     name="doc";
     desc=;
     web_doc=0;
     wiki=;
     url="local";
     full_url="local";
     text_size=1;
     text=;
     html_text=;
    };
   };
   Program @[3] {
    UserDataItem_List @*(.user_data_) {
     name=;
     el_typ=UserData_DocLink;
     el_def=0;
     UserData_DocLink @[0] {name="DocLink": doc=.programs.gp[0][3].doc$$: };
    };
    name="BpTrial";
    short_nm="Trial";
    tags="Bp, Std";
    desc="Backpropagation processing of a single input/output event or external information";
    version {
     major=0;
     minor=0;
     step=0;
    };
    author=;
    email=;
    flags=0;
    stop_step_cond {
     expr=;
    };
    objs {
     name="objs";
     el_typ=taNBase;
     el_def=0;
    };
    objs_vars {
     name="objs_vars";
     el_typ=ProgVar;
     el_def=0;
    };
    types {
     name="types";
     el_typ=DynEnumType;
     el_def=0;
    };
    args {
     name="args";
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="network";
      var_type=T_Object;
      object_type=BpNetwork;
      object_val=$.networks[0]$;
      object_scope=NULL;
      objs_ptr=0;
      flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL|PGRM_ARG;
      reference=0;
      desc="network to operate on -- typically set by higher-level calling programs";
      init_from=NULL;
     };
     ProgVar @[1] {
      name="input_data";
      var_type=T_Object;
      object_type=DataTable;
      object_val=$.data.gp[0][1]$;
      object_scope=NULL;
      objs_ptr=0;
      flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL|PGRM_ARG;
      reference=0;
      desc="datatable containing training input/output patterns";
      init_from=NULL;
     };
    };
    vars {
     name="vars";
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="update_net_view";
      var_type=T_Bool;
      bool_val=1;
      object_scope=NULL;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc="determines whether to update any network view displays after trial is completed";
      init_from=NULL;
     };
    };
    functions {
     name="functions";
     el_typ=Function;
     el_def=0;
    };
    init_code {
     name="init_code";
     el_typ=ProgCode;
     el_def=0;
    };
    prog_code {
     name="prog_code";
     el_typ=ProgCode;
     el_def=0;
     MethodCall @[0] {
      name="MethodCall_networkInitInputData";
      desc="resets input data, before getting new external inputs data from apply inputs call";
      flags=CAN_REVERT_TO_CODE;
      code_string="network->Init_InputData()";
      result_var=NULL;
      obj=.programs.gp[0][3].args[0]$$;
      method=Network::Init_InputData;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
      };
      meth_sig="void Init_InputData()";
      meth_desc=" Initializes external and target inputs";
     };
     ProgramCall @[1] {
      name="ProgramCall_ApplyInputsnetworkinputdata";
      desc="apply external input activations from the input_data table to the network
this program can be extended to do arbitrary things to generate data and apply it to network layers";
      flags=CAN_REVERT_TO_CODE;
      code_string="ApplyInputs(network, input_data)";
      prog_args {
       name="prog_args";
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=LeabraNetwork;
	type="BpNetwork*";
	name="network";
	required=1;
	def_val=;
	prev_expr=;
	expr {
	 expr="network";
	};
       };
       ProgArg @[1] {
	arg_type=DataTable;
	type="DataTable*";
	name="input_data";
	required=1;
	def_val=;
	prev_expr=;
	expr {
	 expr="input_data";
	};
       };
      };
      target=.programs.gp[0][4]$$;
      targ_ld_init="*ApplyInputs*";
     };
     MethodCall @[2] {
      name="MethodCall_networkTrialRun";
      desc="initializes various counters at start of trial";
      flags=CAN_REVERT_TO_CODE;
      code_string="network->Trial_Run()";
      result_var=NULL;
      obj=$.programs.gp[0][3].args[0]$;
      method=BpNetwork::Trial_Run;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
      };
      meth_sig="void Trial_Run()";
      meth_desc=" run one trial of Bp: calls SetCurLrate, Compute_NetinAct, Compute_dEdA_dEdNet, and, if train_mode == TRAIN, Compute_dWt. If you want to save some speed just for testing, you can just call Compute_NetinAct and skip the other two (esp Compute_dEdA_dEdNet, which does a full backprop and is expensive, but often useful for visualization & testing)";
     };
     MethodCall @[3] {
      name="MethodCall_networkComputeTrialStats";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="network->Compute_TrialStats()";
      result_var=NULL;
      obj=$.programs.gp[0][3].args[0]$;
      method=LeabraNetwork::Compute_TrialStats;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
      };
      meth_sig="void Compute_TrialStats()";
      meth_desc=" compute trial-level statistics (SSE and others defined by specific algorithms) do not call this function anymore -- it is obsolete -- please use Compute_PhaseStats or Compute_MinusStats / Compute_PlusStats for more appropriate stats computation at the right time";
     };
     ProgramCall @[4] {
      name="ProgramCall_BpTrialMonitornetwork";
      desc="records data about the trial-level processing to a datatable for graphing/processing";
      flags=CAN_REVERT_TO_CODE;
      code_string="BpTrialMonitor(network)";
      prog_args {
       name="prog_args";
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=Network;
	type="BpNetwork*";
	name="network";
	required=1;
	def_val=;
	prev_expr=;
	expr {
	 expr="network";
	};
       };
      };
      target=.programs.gp[0][5]$$;
      targ_ld_init="*BpTrialMonitor*";
     };
     NetUpdateView @[5] {
      name="NetUpdateView_NetUpdateView";
      desc="update the network view(s) (only if update_net_view is true)";
      flags=CAN_REVERT_TO_CODE;
      code_string="Net Update View";
      network_var=$.programs.gp[0][3].args[0]$;
      update_var=.programs.gp[0][3].vars[0]$$;
     };
    };
    step_prog=NULL;
    step_n=1;
    doc {
     name="doc";
     desc=;
     web_doc=0;
     wiki=;
     url="local";
     full_url="local";
     text_size=1;
     text=;
     html_text=;
    };
   };
   Program @[4] {
    UserDataItem_List @*(.user_data_) {
     name=;
     el_typ=UserData_DocLink;
     el_def=0;
     UserData_DocLink @[0] {name="DocLink": doc=.programs.gp[0][4].doc$$: };
    };
    name="ApplyInputs";
    short_nm="AplyIn";
    tags="Network, InputData, Apply";
    desc="apply the current input data to the network as external input and target values";
    version {
     major=0;
     minor=0;
     step=0;
    };
    author=;
    email=;
    flags=NO_STOP_STEP;
    stop_step_cond {
     expr=;
    };
    objs {
     name="objs";
     el_typ=LayerWriter;
     el_def=0;
     LayerWriter @[0] {
      name="LayerWriter_0";
      data=$.data.gp[0][1]$;
      network=$.networks[0]$;
      layer_data {
       name="layer_data";
       el_typ=LayerWriterEl;
       el_def=0;
       LayerWriterEl @[0] {
	col_name="Input";
	net_target=LAYER;
	layer_name="Input";
	offset {x=0: y=0: };
	use_layer_type=1;
	quiet=0;
	na_by_range=0;
	ext_flags=EXT;
	noise {name="noise": type=NONE: mean=0: var=0.5: par=1: };
       };
       LayerWriterEl @[1] {
	col_name="Output";
	net_target=LAYER;
	layer_name="Output";
	offset {x=0: y=0: };
	use_layer_type=1;
	quiet=0;
	na_by_range=0;
	ext_flags=TARG;
	noise {name="noise": type=NONE: mean=0: var=0.5: par=1: };
       };
       LayerWriterEl @[2] {
	col_name="Name";
	net_target=TRIAL_NAME;
	layer_name="Name";
	offset {x=0: y=0: };
	use_layer_type=1;
	quiet=0;
	na_by_range=0;
	ext_flags=0;
	noise {name="noise": type=NONE: mean=0: var=0.5: par=1: };
       };
      };
     };
    };
    objs_vars {
     name="objs_vars";
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="layer_writer_0";
      var_type=T_Object;
      object_type=LayerWriter;
      object_val=.programs.gp[0][4].objs[0]$$;
      object_scope=NULL;
      objs_ptr=1;
      flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc="this is a pointer to the LayerWriter object in objs -- edit that object to determine how information is presented to the network";
      init_from=NULL;
     };
    };
    types {
     name="types";
     el_typ=DynEnumType;
     el_def=0;
    };
    args {
     name="args";
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="network";
      var_type=T_Object;
      object_type=LeabraNetwork;
      object_val=$.networks[0]$;
      object_scope=NULL;
      objs_ptr=0;
      flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL|PGRM_ARG;
      reference=0;
      desc="network to apply inputs to -- typically set by calling program";
      init_from=NULL;
     };
     ProgVar @[1] {
      name="input_data";
      var_type=T_Object;
      object_type=DataTable;
      object_val=$.data.gp[0][1]$;
      object_scope=NULL;
      objs_ptr=0;
      flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL|PGRM_ARG;
      reference=0;
      desc="input datatable containing input/output patterns";
      init_from=NULL;
     };
    };
    vars {
     name="vars";
     el_typ=ProgVar;
     el_def=0;
    };
    functions {
     name="functions";
     el_typ=Function;
     el_def=0;
    };
    init_code {
     name="init_code";
     el_typ=ProgCode;
     el_def=0;
     MethodCall @[0] {
      name="MethodCall_layerwriter0SetD_nputdatanetwork";
      desc="sets the datatable and network for the layer writer, so it knows what to write to";
      flags=CAN_REVERT_TO_CODE;
      code_string="layer_writer_0->SetDataNetwork(input_data, network)";
      result_var=NULL;
      obj=.programs.gp[0][4].objs_vars[0]$$;
      method=LayerWriter::SetDataNetwork;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=DataTable_ptr;
	type="DataTable*";
	name="db";
	required=1;
	def_val=;
	prev_expr=;
	expr {
	 expr="input_data";
	};
       };
       ProgArg @[1] {
	arg_type=Network_ptr;
	type="Network*";
	name="net";
	required=1;
	def_val=;
	prev_expr=;
	expr {
	 expr="network";
	};
       };
      };
      meth_sig="void SetDataNetwork(DataTable* db, Network* net)";
      meth_desc=" set the data table and network pointers -- convenience function for programs ";
     };
     MethodCall @[1] {
      name="MethodCall_layerwriter0CheckConfigfalse";
      desc="check the configuration of the layer writer -- will emit warnings and errors for missing or misconfigured items";
      flags=CAN_REVERT_TO_CODE;
      code_string="layer_writer_0->CheckConfig(false)";
      result_var=NULL;
      obj=$.programs.gp[0][4].objs_vars[0]$;
      method=taList_impl::CheckConfig;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=bool;
	type="bool";
	name="quiet";
	required=0;
	def_val="false";
	prev_expr=;
	expr {
	 expr="false";
	};
       };
      };
      meth_sig="bool CheckConfig(bool quiet = false)";
      meth_desc=" check the configuration of this object and all its children (defaults to no confirm of success)";
     };
    };
    prog_code {
     name="prog_code";
     el_typ=ProgCode;
     el_def=0;
     MethodCall @[0] {
      name="MethodCall_layerwriter0ApplyInputData";
      desc="apply inputs to the network!  layer writer has all the key specs";
      flags=CAN_REVERT_TO_CODE;
      code_string="layer_writer_0->ApplyInputData()";
      result_var=NULL;
      obj=$.programs.gp[0][4].objs_vars[0]$;
      method=LayerWriter::ApplyInputData;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
      };
      meth_sig="bool ApplyInputData()";
      meth_desc=" apply data to the layers, using the network's current context settings (TEST,TRAIN,etc) -- returns success";
     };
    };
    step_prog=NULL;
    step_n=1;
    doc {
     name="doc";
     desc=;
     web_doc=0;
     wiki=;
     url="local";
     full_url="local";
     text_size=1;
     text=;
     html_text=;
    };
   };
   Program @[5] {
    UserDataItem_List @*(.user_data_) {
     name=;
     el_typ=UserData_DocLink;
     el_def=0;
     UserData_DocLink @[0] {name="DocLink": doc=.programs.gp[0][5].doc$$: };
    };
    name="BpTrialMonitor";
    short_nm="TrlMon";
    tags="Bp, Std, Monitor";
    desc="monitor trial-level data from the network (and potentially other sources) -- stores results in datatable (TrialOutputData typically) that can be used for graph/grid views and further analysis ";
    version {
     major=0;
     minor=0;
     step=0;
    };
    author=;
    email=;
    flags=NO_STOP_STEP;
    stop_step_cond {
     expr=;
    };
    objs {
     name="objs";
     el_typ=NetMonitor;
     el_def=0;
     NetMonitor @[0] {
      name="trial_netmon";
      items {
       name="items";
       el_typ=NetMonItem;
       el_def=0;
       NetMonItem @[0] {
	name="batch";
	computed=0;
	object_type=LeabraNetwork;
	object=$.networks[0]$;
	variable="batch";
	var_label=;
	name_style=AUTO_NAME;
	max_name_len=6;
	options=HIDDEN_LAYERS|OUTPUT_LAYERS|TARGET_LAYERS;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	data_agg=0;
	data_src=NULL;
	agg_col {
	 col_name=;
	};
	agg {name="agg": op=NONE: rel={name="rel": rel=LESSTHANOREQUAL: val=0: val_string="": use_var=0: var=NULL: }: };
	select_rows=0;
	select_spec {
	 col_name=;
	 name="_EQUAL_";
	 on=1;
	 rel=EQUAL;
	 use_var=0;
	 cmp 0 1;
	 var=NULL;
	 enable_var=NULL;
	};
	pre_proc_1 {name="pre_proc_1": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {name="pre_proc_2": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {name="pre_proc_3": opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[1] {
	name="epoch";
	computed=0;
	object_type=LeabraNetwork;
	object=$.networks[0]$;
	variable="epoch";
	var_label=;
	name_style=AUTO_NAME;
	max_name_len=6;
	options=HIDDEN_LAYERS|OUTPUT_LAYERS|TARGET_LAYERS;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	data_agg=0;
	data_src=NULL;
	agg_col {
	 col_name=;
	};
	agg {name="agg": op=NONE: rel={name="rel": rel=LESSTHANOREQUAL: val=0: val_string="": use_var=0: var=NULL: }: };
	select_rows=0;
	select_spec {
	 col_name=;
	 name="_EQUAL_";
	 on=1;
	 rel=EQUAL;
	 use_var=0;
	 cmp 0 1;
	 var=NULL;
	 enable_var=NULL;
	};
	pre_proc_1 {name="pre_proc_1": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {name="pre_proc_2": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {name="pre_proc_3": opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[2] {
	name="trial";
	computed=0;
	object_type=LeabraNetwork;
	object=$.networks[0]$;
	variable="trial";
	var_label=;
	name_style=AUTO_NAME;
	max_name_len=6;
	options=HIDDEN_LAYERS|OUTPUT_LAYERS|TARGET_LAYERS;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	data_agg=0;
	data_src=NULL;
	agg_col {
	 col_name=;
	};
	agg {name="agg": op=NONE: rel={name="rel": rel=LESSTHANOREQUAL: val=0: val_string="": use_var=0: var=NULL: }: };
	select_rows=0;
	select_spec {
	 col_name=;
	 name="_EQUAL_";
	 on=1;
	 rel=EQUAL;
	 use_var=0;
	 cmp 0 1;
	 var=NULL;
	 enable_var=NULL;
	};
	pre_proc_1 {name="pre_proc_1": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {name="pre_proc_2": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {name="pre_proc_3": opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[3] {
	name="trial_name";
	computed=0;
	object_type=LeabraNetwork;
	object=$.networks[0]$;
	variable="trial_name";
	var_label=;
	name_style=AUTO_NAME;
	max_name_len=6;
	options=HIDDEN_LAYERS|OUTPUT_LAYERS|TARGET_LAYERS;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	data_agg=0;
	data_src=NULL;
	agg_col {
	 col_name=;
	};
	agg {name="agg": op=NONE: rel={name="rel": rel=LESSTHANOREQUAL: val=0: val_string="": use_var=0: var=NULL: }: };
	select_rows=0;
	select_spec {
	 col_name=;
	 name="_EQUAL_";
	 on=1;
	 rel=EQUAL;
	 use_var=0;
	 cmp 0 1;
	 var=NULL;
	 enable_var=NULL;
	};
	pre_proc_1 {name="pre_proc_1": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {name="pre_proc_2": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {name="pre_proc_3": opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[4] {
	name="group_name";
	computed=0;
	object_type=LeabraNetwork;
	object=$.networks[0]$;
	variable="group_name";
	var_label=;
	name_style=AUTO_NAME;
	max_name_len=6;
	options=HIDDEN_LAYERS|OUTPUT_LAYERS|TARGET_LAYERS;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	data_agg=0;
	data_src=NULL;
	agg_col {
	 col_name=;
	};
	agg {name="agg": op=NONE: rel={name="rel": rel=LESSTHANOREQUAL: val=0: val_string="": use_var=0: var=NULL: }: };
	select_rows=0;
	select_spec {
	 col_name=;
	 name="_EQUAL_";
	 on=1;
	 rel=EQUAL;
	 use_var=0;
	 cmp 0 1;
	 var=NULL;
	 enable_var=NULL;
	};
	pre_proc_1 {name="pre_proc_1": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {name="pre_proc_2": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {name="pre_proc_3": opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[5] {
	name="sse";
	computed=0;
	object_type=LeabraNetwork;
	object=$.networks[0]$;
	variable="sse";
	var_label=;
	name_style=AUTO_NAME;
	max_name_len=6;
	options=HIDDEN_LAYERS|OUTPUT_LAYERS|TARGET_LAYERS;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	data_agg=0;
	data_src=NULL;
	agg_col {
	 col_name=;
	};
	agg {name="agg": op=NONE: rel={name="rel": rel=LESSTHANOREQUAL: val=0: val_string="": use_var=0: var=NULL: }: };
	select_rows=0;
	select_spec {
	 col_name=;
	 name="_EQUAL_";
	 on=1;
	 rel=EQUAL;
	 use_var=0;
	 cmp 0 1;
	 var=NULL;
	 enable_var=NULL;
	};
	pre_proc_1 {name="pre_proc_1": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {name="pre_proc_2": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {name="pre_proc_3": opr=NONE: arg=0: lw=-1: hi=1: };
       };
      };
      network=$.networks[0]$;
      data=$.data.gp[1][0]$;
      rmv_orphan_cols=1;
     };
    };
    objs_vars {
     name="objs_vars";
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="trial_netmon";
      var_type=T_Object;
      object_type=NetMonitor;
      object_val=.programs.gp[0][5].objs[0]$$;
      object_scope=NULL;
      objs_ptr=1;
      flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc="pointer to the NetMonitor object in objs secton of this program that contains configuration for what to record and where to get it";
      init_from=NULL;
     };
    };
    types {
     name="types";
     el_typ=DynEnumType;
     el_def=0;
    };
    args {
     name="args";
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="network";
      var_type=T_Object;
      object_type=Network;
      object_val=$.networks[0]$;
      object_scope=NULL;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL|PGRM_ARG;
      reference=0;
      desc="network to record data from";
      init_from=NULL;
     };
    };
    vars {
     name="vars";
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="trial_mon_data";
      var_type=T_Object;
      object_type=DataTable;
      object_val=$.data.gp[1][0]$;
      object_scope=NULL;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc="data table to record trial-level data to (this program writes new data to this table!)";
      init_from=NULL;
     };
    };
    functions {
     name="functions";
     el_typ=Function;
     el_def=0;
    };
    init_code {
     name="init_code";
     el_typ=ProgCode;
     el_def=0;
     MethodCall @[0] {
      name="MethodCall_trialnetmonSetDa_lmondatanetwork";
      desc="set the network and datatable for the NetMonitor";
      flags=CAN_REVERT_TO_CODE;
      code_string="trial_netmon->SetDataNetwork(trial_mon_data, network)";
      result_var=NULL;
      obj=.programs.gp[0][5].objs_vars[0]$$;
      method=NetMonitor::SetDataNetwork;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=DataTable_ptr;
	type="DataTable*";
	name="dt";
	required=1;
	def_val=;
	prev_expr=;
	expr {
	 expr="trial_mon_data";
	};
       };
       ProgArg @[1] {
	arg_type=Network_ptr;
	type="Network*";
	name="net";
	required=1;
	def_val=;
	prev_expr=;
	expr {
	 expr="network";
	};
       };
      };
      meth_sig="void SetDataNetwork(DataTable* dt, Network* net)";
      meth_desc=" set both the data table and network -- convenient for programs -- calls ResetDataTableCols too -- don't call if columns are manually added or this is adding additional rows to a table";
     };
     MethodCall @[1] {
      name="MethodCall_trialnetmonCheckConfigfalse";
      desc="check the configuration of the network monitor -- will emit warnings and errors for misconfigurations";
      flags=CAN_REVERT_TO_CODE;
      code_string="trial_netmon->CheckConfig(false)";
      result_var=NULL;
      obj=$.programs.gp[0][5].objs_vars[0]$;
      method=taBase::CheckConfig;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=bool;
	type="bool";
	name="quiet";
	required=0;
	def_val="false";
	prev_expr=;
	expr {
	 expr="false";
	};
       };
      };
      meth_sig="bool CheckConfig(bool quiet = false)";
      meth_desc=" check the configuration of this object and all its children (defaults to no confirm of success)";
     };
     MethodCall @[2] {
      name="MethodCall_trialnetmonUpdateMonitorstrue";
      desc="update the monitor items and data schema based on current settings of the NetMonitor object";
      flags=CAN_REVERT_TO_CODE;
      code_string="trial_netmon->UpdateMonitors(true)";
      result_var=NULL;
      obj=$.programs.gp[0][5].objs_vars[0]$;
      method=NetMonitor::UpdateMonitors;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=bool;
	type="bool";
	name="reset_first";
	required=0;
	def_val="false";
	prev_expr=;
	expr {
	 expr="true";
	};
       };
      };
      meth_sig="void UpdateMonitors(bool reset_first = false)";
      meth_desc=" old name for UpdateDataTable";
     };
    };
    prog_code {
     name="prog_code";
     el_typ=ProgCode;
     el_def=0;
     MethodCall @[0] {
      name="MethodCall_trialmondataAddBlankRow";
      desc="add a new blank row to the data";
      flags=CAN_REVERT_TO_CODE;
      code_string="trial_mon_data->AddBlankRow()";
      result_var=NULL;
      obj=.programs.gp[0][5].vars[0]$$;
      method=DataTable::AddBlankRow;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
      };
      meth_sig="int AddBlankRow()";
      meth_desc=" add a new row to the data table, sets read (source) and write (sink) index to this last row (as in ReadItem or WriteItem), so that subsequent data routines refer to this new row, and returns row ";
     };
     MethodCall @[1] {
      name="MethodCall_trialnetmonGetMonVals";
      desc="get the new monitor data from the network and other sources -- this does the main work";
      flags=CAN_REVERT_TO_CODE;
      code_string="trial_netmon->GetMonVals()";
      result_var=NULL;
      obj=$.programs.gp[0][5].objs_vars[0]$;
      method=NetMonitor::GetMonVals;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
      };
      meth_sig="void GetMonVals()";
      meth_desc=" get all the values and store in current row of data table -- call in program to get new data";
     };
     MethodCall @[2] {
      name="MethodCall_trialmondataWriteClose";
      desc="update views and other things after writing new data to monitor data table";
      flags=CAN_REVERT_TO_CODE;
      code_string="trial_mon_data->WriteClose()";
      result_var=NULL;
      obj=$.programs.gp[0][5].vars[0]$;
      method=DataTable::WriteClose;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
      };
      meth_sig="void WriteClose()";
      meth_desc=" closes up a write operation -- call when done writing data -- performs any post-writing cleanup/closing of files, etc";
     };
     MethodCall @[3] {
      name="MethodCall_networkDMemShare_tatrialmondata1";
      desc="only functional for dmem projects: synchronizes trial data across processes so that all distributed memory processors have the same trial-level data, despite having run only a subset of them each";
      flags=CAN_REVERT_TO_CODE;
      code_string="network->DMem_ShareTrialData(trial_mon_data, 1)";
      result_var=NULL;
      obj=.programs.gp[0][5].args[0]$$;
      method=Network::DMem_ShareTrialData;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=DataTable_ptr;
	type="DataTable*";
	name="dt";
	required=1;
	def_val=;
	prev_expr=;
	expr {
	 expr="trial_mon_data";
	};
       };
       ProgArg @[1] {
	arg_type=int;
	type="int";
	name="n_rows";
	required=0;
	def_val="1";
	prev_expr=;
	expr {
	 expr="1";
	};
       };
      };
      meth_sig="void DMem_ShareTrialData(DataTable* dt, int n_rows = 1)";
      meth_desc=" share trial data from given datatable across the trial-level dmem communicator (outer loop) -- each processor gets data from all other processors; if called every trial with n_rows = 1, data will be identical to non-dmem; if called at end of epoch with n_rows = -1 data will be grouped by processor but this is more efficient";
     };
    };
    step_prog=NULL;
    step_n=1;
    doc {
     name="doc";
     desc=;
     web_doc=0;
     wiki=;
     url="local";
     full_url="local";
     text_size=1;
     text=;
     html_text=;
    };
   };
   Program @[6] {
    UserDataItem_List @*(.user_data_) {
     name=;
     el_typ=UserData_DocLink;
     el_def=0;
     UserData_DocLink @[0] {name="DocLink": doc=.programs.gp[0][6].doc$$: };
    };
    name="BpEpochMonitor";
    short_nm="EpcMon";
    tags="Bp, Std, Monitor";
    desc="monitor epoch-level data from the network to a datatable (EpochOutputData typically) for use in graphing and viewing and further analysis";
    version {
     major=0;
     minor=0;
     step=0;
    };
    author=;
    email=;
    flags=NO_STOP_STEP;
    stop_step_cond {
     expr=;
    };
    objs {
     name="objs";
     el_typ=NetMonitor;
     el_def=0;
     NetMonitor @[0] {
      name="epoch_netmon";
      items {
       name="items";
       el_typ=NetMonItem;
       el_def=0;
       NetMonItem @[0] {
	name="batch";
	computed=0;
	object_type=LeabraNetwork;
	object=$.networks[0]$;
	variable="batch";
	var_label=;
	name_style=AUTO_NAME;
	max_name_len=6;
	options=HIDDEN_LAYERS|OUTPUT_LAYERS|TARGET_LAYERS;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	data_agg=0;
	data_src=NULL;
	agg_col {
	 col_name=;
	};
	agg {name="agg": op=NONE: rel={name="rel": rel=LESSTHANOREQUAL: val=0: val_string="": use_var=0: var=NULL: }: };
	select_rows=0;
	select_spec {
	 col_name=;
	 name="_EQUAL_";
	 on=1;
	 rel=EQUAL;
	 use_var=0;
	 cmp 0 1;
	 var=NULL;
	 enable_var=NULL;
	};
	pre_proc_1 {name="pre_proc_1": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {name="pre_proc_2": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {name="pre_proc_3": opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[1] {
	name="epoch";
	computed=0;
	object_type=LeabraNetwork;
	object=$.networks[0]$;
	variable="epoch";
	var_label=;
	name_style=AUTO_NAME;
	max_name_len=6;
	options=HIDDEN_LAYERS|OUTPUT_LAYERS|TARGET_LAYERS;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	data_agg=0;
	data_src=NULL;
	agg_col {
	 col_name=;
	};
	agg {name="agg": op=NONE: rel={name="rel": rel=LESSTHANOREQUAL: val=0: val_string="": use_var=0: var=NULL: }: };
	select_rows=0;
	select_spec {
	 col_name=;
	 name="_EQUAL_";
	 on=1;
	 rel=EQUAL;
	 use_var=0;
	 cmp 0 1;
	 var=NULL;
	 enable_var=NULL;
	};
	pre_proc_1 {name="pre_proc_1": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {name="pre_proc_2": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {name="pre_proc_3": opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[2] {
	name="avg_sse";
	computed=0;
	object_type=LeabraNetwork;
	object=$.networks[0]$;
	variable="avg_sse";
	var_label=;
	name_style=AUTO_NAME;
	max_name_len=6;
	options=HIDDEN_LAYERS|OUTPUT_LAYERS|TARGET_LAYERS;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	data_agg=0;
	data_src=NULL;
	agg_col {
	 col_name=;
	};
	agg {name="agg": op=NONE: rel={name="rel": rel=LESSTHANOREQUAL: val=0: val_string="": use_var=0: var=NULL: }: };
	select_rows=0;
	select_spec {
	 col_name=;
	 name="_EQUAL_";
	 on=1;
	 rel=EQUAL;
	 use_var=0;
	 cmp 0 1;
	 var=NULL;
	 enable_var=NULL;
	};
	pre_proc_1 {name="pre_proc_1": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {name="pre_proc_2": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {name="pre_proc_3": opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[3] {
	name="cnt_err";
	computed=0;
	object_type=LeabraNetwork;
	object=$.networks[0]$;
	variable="cnt_err";
	var_label=;
	name_style=AUTO_NAME;
	max_name_len=6;
	options=HIDDEN_LAYERS|OUTPUT_LAYERS|TARGET_LAYERS;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	data_agg=0;
	data_src=NULL;
	agg_col {
	 col_name=;
	};
	agg {name="agg": op=NONE: rel={name="rel": rel=LESSTHANOREQUAL: val=0: val_string="": use_var=0: var=NULL: }: };
	select_rows=0;
	select_spec {
	 col_name=;
	 name="_EQUAL_";
	 on=1;
	 rel=EQUAL;
	 use_var=0;
	 cmp 0 1;
	 var=NULL;
	 enable_var=NULL;
	};
	pre_proc_1 {name="pre_proc_1": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {name="pre_proc_2": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {name="pre_proc_3": opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[4] {
	name="epoch_time_tot";
	computed=1;
	object_type=NULL;
	object=NULL;
	variable="act";
	var_label=;
	name_style=MY_NAME;
	max_name_len=6;
	options=HIDDEN_LAYERS|OUTPUT_LAYERS|TARGET_LAYERS;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	data_agg=0;
	data_src=NULL;
	agg_col {
	 col_name=;
	};
	agg {name="agg": op=NONE: rel={name="rel": rel=LESSTHANOREQUAL: val=0: val_string="": use_var=0: var=NULL: }: };
	select_rows=0;
	select_spec {
	 col_name=;
	 name="_EQUAL_";
	 on=1;
	 rel=EQUAL;
	 use_var=0;
	 cmp 0 1;
	 var=NULL;
	 enable_var=NULL;
	};
	pre_proc_1 {name="pre_proc_1": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {name="pre_proc_2": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {name="pre_proc_3": opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[5] {
	name="epoch_time_usr";
	computed=1;
	object_type=NULL;
	object=NULL;
	variable="act";
	var_label=;
	name_style=MY_NAME;
	max_name_len=6;
	options=HIDDEN_LAYERS|OUTPUT_LAYERS|TARGET_LAYERS;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	data_agg=0;
	data_src=NULL;
	agg_col {
	 col_name=;
	};
	agg {name="agg": op=NONE: rel={name="rel": rel=LESSTHANOREQUAL: val=0: val_string="": use_var=0: var=NULL: }: };
	select_rows=0;
	select_spec {
	 col_name=;
	 name="_EQUAL_";
	 on=1;
	 rel=EQUAL;
	 use_var=0;
	 cmp 0 1;
	 var=NULL;
	 enable_var=NULL;
	};
	pre_proc_1 {name="pre_proc_1": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {name="pre_proc_2": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {name="pre_proc_3": opr=NONE: arg=0: lw=-1: hi=1: };
       };
      };
      network=$.networks[0]$;
      data=$.data.gp[1][1]$;
      rmv_orphan_cols=1;
     };
    };
    objs_vars {
     name="objs_vars";
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="epoch_netmon";
      var_type=T_Object;
      object_type=NetMonitor;
      object_val=.programs.gp[0][6].objs[0]$$;
      object_scope=NULL;
      objs_ptr=1;
      flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc="network monitor object that contains full specs for what to record and where to get it";
      init_from=NULL;
     };
    };
    types {
     name="types";
     el_typ=DynEnumType;
     el_def=0;
    };
    args {
     name="args";
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="network";
      var_type=T_Object;
      object_type=Network;
      object_val=$.networks[0]$;
      object_scope=NULL;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL|PGRM_ARG;
      reference=0;
      desc="network to get data from";
      init_from=NULL;
     };
    };
    vars {
     name="vars";
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="epoch_mon_data";
      var_type=T_Object;
      object_type=DataTable;
      object_val=$.data.gp[1][1]$;
      object_scope=NULL;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc="data table to write the epoch data to";
      init_from=NULL;
     };
     ProgVar @[1] {
      name="epoch_timer";
      var_type=T_Object;
      object_type=TimeUsed;
      object_val=$.networks[0].epoch_time$;
      object_scope=NULL;
      objs_ptr=0;
      flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc="pointer to the network's epoch-level timer, to record how long it took to process an epoch";
      init_from=NULL;
     };
    };
    functions {
     name="functions";
     el_typ=Function;
     el_def=0;
    };
    init_code {
     name="init_code";
     el_typ=ProgCode;
     el_def=0;
     AssignExpr @[0] {
      name="AssignExpr_epochtimernetworkepochtime";
      desc="get the epoch timer from current network";
      flags=CAN_REVERT_TO_CODE;
      code_string="epoch_timer = network.epoch_time";
      result_var=.programs.gp[0][6].vars[1]$$;
      expr {
       expr="network.epoch_time";
      };
     };
     MethodCall @[1] {
      name="MethodCall_epochnetmonSetDa_hmondatanetwork";
      desc="set data and network on NetMonitor object";
      flags=CAN_REVERT_TO_CODE;
      code_string="epoch_netmon->SetDataNetwork(epoch_mon_data, network)";
      result_var=NULL;
      obj=.programs.gp[0][6].objs_vars[0]$$;
      method=NetMonitor::SetDataNetwork;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=DataTable_ptr;
	type="DataTable*";
	name="dt";
	required=1;
	def_val=;
	prev_expr=;
	expr {
	 expr="epoch_mon_data";
	};
       };
       ProgArg @[1] {
	arg_type=Network_ptr;
	type="Network*";
	name="net";
	required=1;
	def_val=;
	prev_expr=;
	expr {
	 expr="network";
	};
       };
      };
      meth_sig="void SetDataNetwork(DataTable* dt, Network* net)";
      meth_desc=" set both the data table and network -- convenient for programs -- calls ResetDataTableCols too -- don't call if columns are manually added or this is adding additional rows to a table";
     };
     MethodCall @[2] {
      name="MethodCall_epochnetmonCheckConfigfalse";
      desc="check configuration and emit errors/warnings for problems";
      flags=CAN_REVERT_TO_CODE;
      code_string="epoch_netmon->CheckConfig(false)";
      result_var=NULL;
      obj=$.programs.gp[0][6].objs_vars[0]$;
      method=taBase::CheckConfig;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=bool;
	type="bool";
	name="quiet";
	required=0;
	def_val="false";
	prev_expr=;
	expr {
	 expr="false";
	};
       };
      };
      meth_sig="bool CheckConfig(bool quiet = false)";
      meth_desc=" check the configuration of this object and all its children (defaults to no confirm of success)";
     };
     MethodCall @[3] {
      name="MethodCall_epochnetmonUpdateMonitorstrue";
      desc="update the monitor items and data schema based on current settings of NetMonitor";
      flags=CAN_REVERT_TO_CODE;
      code_string="epoch_netmon->UpdateMonitors(true)";
      result_var=NULL;
      obj=$.programs.gp[0][6].objs_vars[0]$;
      method=NetMonitor::UpdateMonitors;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=bool;
	type="bool";
	name="reset_first";
	required=0;
	def_val="false";
	prev_expr=;
	expr {
	 expr="true";
	};
       };
      };
      meth_sig="void UpdateMonitors(bool reset_first = false)";
      meth_desc=" old name for UpdateDataTable";
     };
    };
    prog_code {
     name="prog_code";
     el_typ=ProgCode;
     el_def=0;
     MethodCall @[0] {
      name="MethodCall_epochmondataAddBlankRow";
      desc="add a new blank row to the data";
      flags=CAN_REVERT_TO_CODE;
      code_string="epoch_mon_data->AddBlankRow()";
      result_var=NULL;
      obj=.programs.gp[0][6].vars[0]$$;
      method=DataTable::AddBlankRow;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
      };
      meth_sig="int AddBlankRow()";
      meth_desc=" add a new row to the data table, sets read (source) and write (sink) index to this last row (as in ReadItem or WriteItem), so that subsequent data routines refer to this new row, and returns row ";
     };
     MethodCall @[1] {
      name="MethodCall_epochnetmonGetMonVals";
      desc="get the new monitor data and stor it into the data table -- this does the main job here";
      flags=CAN_REVERT_TO_CODE;
      code_string="epoch_netmon->GetMonVals()";
      result_var=NULL;
      obj=$.programs.gp[0][6].objs_vars[0]$;
      method=NetMonitor::GetMonVals;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
      };
      meth_sig="void GetMonVals()";
      meth_desc=" get all the values and store in current row of data table -- call in program to get new data";
     };
     AssignExpr @[2] {
      name="AssignExpr_epochtimernetworkepochtime";
      desc="get the epoch timer from current network";
      flags=CAN_REVERT_TO_CODE;
      code_string="epoch_timer = network.epoch_time";
      result_var=$.programs.gp[0][6].vars[1]$;
      expr {
       expr="network.epoch_time";
      };
     };
     MethodCall @[3] {
      name="MethodCall_epochmondataSetV_csepochtimetot1";
      desc="set the total time to compute the epoch (epoch_time_tot -- wall clock time) to time used data from network timer";
      flags=CAN_REVERT_TO_CODE;
      code_string="epoch_mon_data->SetValColName(epoch_timer.used.GetTotSecs(), \"epoch_time_tot\", -1, )";
      result_var=NULL;
      obj=$.programs.gp[0][6].vars[0]$;
      method=DataTable::SetValColName;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=const_Variant_ref;
	type="Variant&";
	name="val";
	required=1;
	def_val=;
	prev_expr=;
	expr {
	 expr="epoch_timer.used.GetTotSecs()";
	};
       };
       ProgArg @[1] {
	arg_type=const_taString_ref;
	type="taString&";
	name="col_name";
	required=1;
	def_val="\"\"";
	prev_expr=;
	expr {
	 expr="\"epoch_time_tot\"";
	};
       };
       ProgArg @[2] {
	arg_type=int;
	type="int";
	name="row";
	required=1;
	def_val=;
	prev_expr=;
	expr {
	 expr="-1";
	};
       };
       ProgArg @[3] {
	arg_type=bool;
	type="bool";
	name="quiet";
	required=0;
	def_val="false";
	prev_expr=;
	expr {
	 expr=;
	};
       };
      };
      meth_sig="bool SetValColName(Variant& val, taString& col_name, int row, bool quiet = false)";
      meth_desc=" set data of scalar type, in Variant form (any data type, use for Programs), for given column name, row; returns 'true' if valid access and set is successful -- quiet = fail quietly";
     };
     MethodCall @[4] {
      name="MethodCall_epochmondataSetV_csepochtimeusr1";
      desc="set the user process time (cpu time for this process, epoch_time_usr) to time used data from network timer";
      flags=CAN_REVERT_TO_CODE;
      code_string="epoch_mon_data->SetValColName(epoch_timer.used.GetUsrSecs(), \"epoch_time_usr\", -1, )";
      result_var=NULL;
      obj=$.programs.gp[0][6].vars[0]$;
      method=DataTable::SetValColName;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=const_Variant_ref;
	type="Variant&";
	name="val";
	required=1;
	def_val=;
	prev_expr=;
	expr {
	 expr="epoch_timer.used.GetUsrSecs()";
	};
       };
       ProgArg @[1] {
	arg_type=const_taString_ref;
	type="taString&";
	name="col_name";
	required=1;
	def_val="\"\"";
	prev_expr=;
	expr {
	 expr="\"epoch_time_usr\"";
	};
       };
       ProgArg @[2] {
	arg_type=int;
	type="int";
	name="row";
	required=1;
	def_val=;
	prev_expr=;
	expr {
	 expr="-1";
	};
       };
       ProgArg @[3] {
	arg_type=bool;
	type="bool";
	name="quiet";
	required=0;
	def_val="false";
	prev_expr=;
	expr {
	 expr=;
	};
       };
      };
      meth_sig="bool SetValColName(Variant& val, taString& col_name, int row, bool quiet = false)";
      meth_desc=" set data of scalar type, in Variant form (any data type, use for Programs), for given column name, row; returns 'true' if valid access and set is successful -- quiet = fail quietly";
     };
     MethodCall @[5] {
      name="MethodCall_epochmondataWriteClose";
      desc="update after writing new data to monitor data table";
      flags=CAN_REVERT_TO_CODE;
      code_string="epoch_mon_data->WriteClose()";
      result_var=NULL;
      obj=$.programs.gp[0][6].vars[0]$;
      method=DataTable::WriteClose;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
      };
      meth_sig="void WriteClose()";
      meth_desc=" closes up a write operation -- call when done writing data -- performs any post-writing cleanup/closing of files, etc";
     };
    };
    step_prog=NULL;
    step_n=1;
    doc {
     name="doc";
     desc=;
     web_doc=0;
     wiki=;
     url="local";
     full_url="local";
     text_size=1;
     text=;
     html_text=;
    };
   };
   Program @[7] {
    UserDataItem_List @*(.user_data_) {
     name=;
     el_typ=UserData_DocLink;
     el_def=0;
     UserData_DocLink @[0] {name="DocLink": doc=.programs.gp[0][7].doc$$: };
    };
    name="SaveWeights";
    short_nm="SvWts";
    tags="Network, Weights";
    desc="save network's current weight values to file using WriteWeights function, with file name based on project name + batch + epoch values";
    version {
     major=0;
     minor=0;
     step=0;
    };
    author=;
    email=;
    flags=NO_STOP_STEP;
    stop_step_cond {
     expr=;
    };
    objs {
     name="objs";
     el_typ=taNBase;
     el_def=0;
    };
    objs_vars {
     name="objs_vars";
     el_typ=ProgVar;
     el_def=0;
    };
    types {
     name="types";
     el_typ=DynEnumType;
     el_def=0;
    };
    args {
     name="args";
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="network";
      var_type=T_Object;
      object_type=Network;
      object_val=$.networks[0]$;
      object_scope=NULL;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL|PGRM_ARG;
      reference=0;
      desc=;
      init_from=NULL;
     };
    };
    vars {
     name="vars";
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="output_weights_file";
      var_type=T_String;
      string_val=;
      object_scope=NULL;
      flags=CTRL_PANEL|CTRL_READ_ONLY|NULL_CHECK|SAVE_VAL|USED;
      reference=0;
      desc="weights file for loading";
      init_from=$.programs[0]$;
     };
     ProgVar @[1] {
      name="tag";
      var_type=T_String;
      string_val="_gui";
      object_scope=NULL;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc="user-provided tag (startup script will set this!)";
      init_from=NULL;
     };
     ProgVar @[2] {
      name="wts_subdir";
      var_type=T_String;
      string_val="weights";
      object_scope=NULL;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|EDIT_VAL;
      reference=0;
      desc="user-provided subdirectory to save weights in";
      init_from=NULL;
     };
     ProgVar @[3] {
      name="fname";
      var_type=T_String;
      string_val=;
      object_scope=NULL;
      flags=CTRL_PANEL|CTRL_READ_ONLY|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc="final generated file name -- do not edit!";
      init_from=NULL;
     };
     ProgVar @[4] {
      name="epoch_str";
      var_type=T_String;
      string_val="0000";
      object_scope=NULL;
      flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc="string rep of epoch with leading zeros";
      init_from=NULL;
     };
     ProgVar @[5] {
      name="batch_str";
      var_type=T_String;
      string_val="00";
      object_scope=NULL;
      flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc="string rep of batch with leading zeros";
      init_from=NULL;
     };
     ProgVar @[6] {
      name="final_tag";
      var_type=T_String;
      string_val="_gui.00_0000";
      object_scope=NULL;
      flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc="batch + epoch";
      init_from=NULL;
     };
    };
    functions {
     name="functions";
     el_typ=Function;
     el_def=0;
    };
    init_code {
     name="init_code";
     el_typ=ProgCode;
     el_def=0;
    };
    prog_code {
     name="prog_code";
     el_typ=ProgCode;
     el_def=0;
     If @[0] {
      name="If_iftaMiscdmemproc0";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="if (taMisc::dmem_proc > 0)";
      cond {
       expr="taMisc::dmem_proc > 0";
      };
      true_code {
       name="true_code";
       el_typ=ProgCode;
       el_def=0;
       ReturnExpr @[0] {
	name="ReturnExpr_return";
	desc=;
	flags=CAN_REVERT_TO_CODE;
	code_string="return ";
	expr {
	 expr=;
	};
       };
      };
     };
     MiscCall @[1] {
      name="MiscCall_batchstrtaMiscLe_osnetworkbatch2";
      desc="get current batch counter for file name, with leading zeros to length 3";
      flags=CAN_REVERT_TO_CODE;
      code_string="batch_str = taMisc::LeadingZeros(network.batch, 2)";
      result_var=.programs.gp[0][7].vars[5]$$;
      object_type=taMisc;
      method=taMisc::LeadingZeros;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=int;
	type="int";
	name="num";
	required=1;
	def_val=;
	prev_expr=;
	expr {
	 expr="network.batch";
	};
       };
       ProgArg @[1] {
	arg_type=int;
	type="int";
	name="len";
	required=1;
	def_val=;
	prev_expr=;
	expr {
	 expr="2";
	};
       };
      };
     };
     MiscCall @[2] {
      name="MiscCall_epochstrtaMiscLe_osnetworkepoch4";
      desc="get current epoch counter with leading zeros to length 4";
      flags=CAN_REVERT_TO_CODE;
      code_string="epoch_str = taMisc::LeadingZeros(network.epoch, 4)";
      result_var=.programs.gp[0][7].vars[4]$$;
      object_type=taMisc;
      method=taMisc::LeadingZeros;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=int;
	type="int";
	name="num";
	required=1;
	def_val=;
	prev_expr=;
	expr {
	 expr="network.epoch";
	};
       };
       ProgArg @[1] {
	arg_type=int;
	type="int";
	name="len";
	required=1;
	def_val=;
	prev_expr=;
	expr {
	 expr="4";
	};
       };
      };
     };
     AssignExpr @[3] {
      name="AssignExpr_finaltagtagbatchstrepochstr";
      desc="string 'tag' to identify the batch, epoch, and other user id info for the weights";
      flags=CAN_REVERT_TO_CODE;
      code_string="final_tag = tag + \".\" + batch_str + \"_\" + epoch_str";
      result_var=.programs.gp[0][7].vars[6]$$;
      expr {
       expr="tag + \".\" + batch_str + \"_\" + epoch_str";
      };
     };
     AssignExpr @[4] {
      name="AssignExpr_fnameoutputweightsfile";
      desc="get a file name based on the project's current file name, for saving the weights";
      flags=CAN_REVERT_TO_CODE;
      code_string="fname = output_weights_file";
      result_var=.programs.gp[0][7].vars[3]$$;
      expr {
       expr="output_weights_file";
      };
     };
     MethodCall @[5] {
      name="MethodCall_networkSaveWeigh_meNetworkNETFMT";
      desc="save the weights to that file name";
      flags=CAN_REVERT_TO_CODE;
      code_string="network->SaveWeights(fname, Network::NET_FMT)";
      result_var=NULL;
      obj=.programs.gp[0][7].args[0]$$;
      method=Network::SaveWeights;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=const_taString_ref;
	type="taString&";
	name="fname";
	required=0;
	def_val="\"\"";
	prev_expr=;
	expr {
	 expr="fname";
	};
       };
       ProgArg @[1] {
	arg_type=Network::WtSaveFormat;
	type="Network::WtSaveFormat";
	name="fmt";
	required=0;
	def_val="Network::NET_FMT";
	prev_expr=;
	expr {
	 expr="Network::NET_FMT";
	};
       };
      };
      meth_sig="void SaveWeights(taString& fname, Network::WtSaveFormat fmt = NET_FMT)";
      meth_desc=" write weight values out in a simple ordered list of weights (optionally in binary fmt) (leave fname empty to pull up file chooser)";
     };
    };
    step_prog=NULL;
    step_n=1;
    doc {
     name="doc";
     desc=;
     web_doc=0;
     wiki=;
     url="local";
     full_url="local";
     text_size=1;
     text=;
     html_text=;
    };
   };
   Program @[8] {
    UserDataItem_List @*(.user_data_) {
     name=;
     el_typ=UserData_DocLink;
     el_def=0;
     UserData_DocLink @[0] {name="DocLink": doc=.programs.gp[0][8].doc$$: };
    };
    name="ExportData";
    short_nm="ExData";
    tags=;
    desc="exports data to a CSV file";
    version {
     major=0;
     minor=0;
     step=0;
    };
    author=;
    email=;
    flags=0;
    stop_step_cond {
     expr=;
    };
    objs {
     name="objs";
     el_typ=taNBase;
     el_def=0;
    };
    objs_vars {
     name="objs_vars";
     el_typ=ProgVar;
     el_def=0;
    };
    types {
     name="types";
     el_typ=DynEnumType;
     el_def=0;
    };
    args {
     name="args";
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="FinalData";
      var_type=T_Object;
      object_type=DataTable;
      object_val=$.data.gp[1][0]$;
      object_scope=NULL;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL|PGRM_ARG;
      reference=0;
      desc=;
      init_from=NULL;
     };
     ProgVar @[1] {
      name="output_file";
      var_type=T_String;
      string_val=;
      object_scope=NULL;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL|PGRM_ARG;
      reference=0;
      desc=;
      init_from=NULL;
     };
    };
    vars {
     name="vars";
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="output_file2";
      var_type=T_String;
      string_val=;
      object_scope=NULL;
      flags=CTRL_PANEL|CTRL_READ_ONLY|NULL_CHECK|SAVE_VAL;
      reference=0;
      desc="output file of export data";
      init_from=$.programs[0]$;
     };
    };
    functions {
     name="functions";
     el_typ=Function;
     el_def=0;
    };
    init_code {
     name="init_code";
     el_typ=ProgCode;
     el_def=0;
    };
    prog_code {
     name="prog_code";
     el_typ=ProgCode;
     el_def=0;
     RegisterArgs @[0] {
      name="RegisterArgs_RegisterArgs";
      desc="This is KEY!!! actually processes all args, including those from ProgVarFmArg guys below";
      flags=CAN_REVERT_TO_CODE;
      code_string="Register Args";
     };
     ProgVarFmArg @[1] {
      name="ProgVarFmArg_SetVaroutputfile_omArgoutputfile";
      desc=;
      flags=VERBOSE|CAN_REVERT_TO_CODE;
      code_string="Set Var:output_file in Program:ExportData from Arg:output_file";
      prog=$.programs.gp[0][8]$;
      var_name="output_file";
      arg_name="output_file";
     };
     PrintExpr @[2] {
      name="PrintExpr_PrintfromExportD_tfileoutputfile";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="Print \"from ExportData output_file: \" << output_file";
      expr {
       expr="\"from ExportData output_file: \" << output_file";
      };
      debug=0;
     };
     MethodCall @[3] {
      name="MethodCall_FinalDataExportD_utfileFinalData";
      desc=;
      flags=VERBOSE|CAN_REVERT_TO_CODE;
      code_string="FinalData->ExportData(output_file, FinalData, , )";
      result_var=NULL;
      obj=.programs.gp[0][8].args[0]$$;
      method=DataTable::ExportData;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=const_taString_ref;
	type="taString&";
	name="fname";
	required=0;
	def_val="\"\"";
	prev_expr=;
	expr {
	 expr="output_file";
	};
       };
       ProgArg @[1] {
	arg_type=DataTable::Delimiters;
	type="DataTable::Delimiters";
	name="delim";
	required=0;
	def_val="DataTable::COMMA";
	prev_expr=;
	expr {
	 expr="FinalData";
	};
       };
       ProgArg @[2] {
	arg_type=bool;
	type="bool";
	name="quote_str";
	required=0;
	def_val="true";
	prev_expr=;
	expr {
	 expr=;
	};
       };
       ProgArg @[3] {
	arg_type=bool;
	type="bool";
	name="headers";
	required=0;
	def_val="true";
	prev_expr=;
	expr {
	 expr=;
	};
       };
      };
      meth_sig="void ExportData(taString& fname, DataTable::Delimiters delim = COMMA, bool quote_str = true, bool headers = true)";
      meth_desc=" exports data with given delimiter and string quoting format options in a format suitable for importing into other applications (spreadsheets, etc) -- does NOT include the emergent native header/data row markers and extended header info, so is not good for loading back into emergent (use SaveData for that)";
     };
    };
    step_prog=NULL;
    step_n=1;
    doc {
     name="doc";
     desc=;
     web_doc=0;
     wiki=;
     url="local";
     full_url="local";
     text_size=1;
     text=;
     html_text=;
    };
   };
   Program @[9] {
    UserDataItem_List @*(.user_data_) {
     name=;
     el_typ=UserData_DocLink;
     el_def=0;
     UserData_DocLink @[0] {name="DocLink": doc=.programs.gp[0][9].doc$$: };
    };
    name="ImportData";
    short_nm="impData";
    tags=;
    desc="imports data from a DAT file";
    version {
     major=0;
     minor=0;
     step=0;
    };
    author=;
    email=;
    flags=0;
    stop_step_cond {
     expr=;
    };
    objs {
     name="objs";
     el_typ=taNBase;
     el_def=0;
    };
    objs_vars {
     name="objs_vars";
     el_typ=ProgVar;
     el_def=0;
    };
    types {
     name="types";
     el_typ=DynEnumType;
     el_def=0;
    };
    args {
     name="args";
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="NewData";
      var_type=T_Object;
      object_type=DataTable;
      object_val=$.data.gp[0][1]$;
      object_scope=NULL;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL|PGRM_ARG;
      reference=0;
      desc=;
      init_from=NULL;
     };
     ProgVar @[1] {
      name="inputFile";
      var_type=T_String;
      string_val=;
      object_scope=NULL;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL|PGRM_ARG;
      reference=0;
      desc=;
      init_from=NULL;
     };
    };
    vars {
     name="vars";
     el_typ=ProgVar;
     el_def=0;
    };
    functions {
     name="functions";
     el_typ=Function;
     el_def=0;
    };
    init_code {
     name="init_code";
     el_typ=ProgCode;
     el_def=0;
    };
    prog_code {
     name="prog_code";
     el_typ=ProgCode;
     el_def=0;
     MethodCall @[0] {
      name="MethodCall_NewDataImportDatainputFile";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="NewData->ImportData(inputFile, , , )";
      result_var=NULL;
      obj=.programs.gp[0][9].args[0]$$;
      method=DataTable::ImportData;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=const_taString_ref;
	type="taString&";
	name="fname";
	required=0;
	def_val="\"\"";
	prev_expr=;
	expr {
	 expr="inputFile";
	};
       };
       ProgArg @[1] {
	arg_type=bool;
	type="bool";
	name="headers";
	required=0;
	def_val="true";
	prev_expr=;
	expr {
	 expr=;
	};
       };
       ProgArg @[2] {
	arg_type=DataTable::LoadDelimiters;
	type="DataTable::LoadDelimiters";
	name="delim";
	required=0;
	def_val="DataTable::LD_AUTO";
	prev_expr=;
	expr {
	 expr=;
	};
       };
       ProgArg @[3] {
	arg_type=DataTable::LoadQuotes;
	type="DataTable::LoadQuotes";
	name="quote_str";
	required=0;
	def_val="DataTable::LQ_AUTO";
	prev_expr=;
	expr {
	 expr=;
	};
       };
      };
      meth_sig="void ImportData(taString& fname, bool headers = true, DataTable::LoadDelimiters delim = LD_AUTO, DataTable::LoadQuotes quote_str = LQ_AUTO)";
      meth_desc=" imports externally-generated data in delimited text file format -- if headers is selected, then first row is treated as column headers -- auto defaults are typically fine (see also Load Any Data or Load Any Data Append -- same functionality with all AUTO defaults)";
     };
    };
    step_prog=NULL;
    step_n=1;
    doc {
     name="doc";
     desc=;
     web_doc=0;
     wiki=;
     url="local";
     full_url="local";
     text_size=1;
     text=;
     html_text=;
    };
   };
   Program @[10] {
    UserDataItem_List @*(.user_data_) {
     name=;
     el_typ=UserData_DocLink;
     el_def=0;
     UserData_DocLink @[0] {name="DocLink": doc=.programs.gp[0][10].doc$$: };
    };
    name="LoadWeights";
    short_nm="LWghts";
    tags=;
    desc=;
    version {
     major=0;
     minor=0;
     step=0;
    };
    author=;
    email=;
    flags=0;
    stop_step_cond {
     expr=;
    };
    objs {
     name="objs";
     el_typ=taNBase;
     el_def=0;
    };
    objs_vars {
     name="objs_vars";
     el_typ=ProgVar;
     el_def=0;
    };
    types {
     name="types";
     el_typ=DynEnumType;
     el_def=0;
    };
    args {
     name="args";
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="input_weights_file";
      var_type=T_String;
      string_val="/home/jwgorman/Files1/SolarNetwork/emergent/weights/consumption_bp7f_nogui_20140802a_test2_gui.00_0000.wts.gz";
      object_scope=NULL;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL|PGRM_ARG;
      reference=0;
      desc=;
      init_from=NULL;
     };
     ProgVar @[1] {
      name="network";
      var_type=T_Object;
      object_type=Network;
      object_val=$.networks[0]$;
      object_scope=NULL;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL|PGRM_ARG;
      reference=0;
      desc=;
      init_from=NULL;
     };
    };
    vars {
     name="vars";
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="input_weights_file";
      var_type=T_String;
      string_val=;
      object_scope=NULL;
      flags=CTRL_PANEL|CTRL_READ_ONLY|NULL_CHECK|SAVE_VAL|USED;
      reference=0;
      desc="weights file for loading";
      init_from=$.programs[0]$;
     };
    };
    functions {
     name="functions";
     el_typ=Function;
     el_def=0;
    };
    init_code {
     name="init_code";
     el_typ=ProgCode;
     el_def=0;
    };
    prog_code {
     name="prog_code";
     el_typ=ProgCode;
     el_def=0;
     MethodCall @[0] {
      name="MethodCall_networkLoadWeights";
      desc="load weights from that file name";
      flags=VERBOSE;
      code_string=;
      result_var=NULL;
      obj=.programs.gp[0][10].args[1]$$;
      method=Network::LoadWeights;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=const_taString_ref;
	type="taString&";
	name="fname";
	required=0;
	def_val="\"\"";
	prev_expr=;
	expr {
	 expr=;
	};
       };
       ProgArg @[1] {
	arg_type=bool;
	type="bool";
	name="quiet";
	required=0;
	def_val="false";
	prev_expr=;
	expr {
	 expr=;
	};
       };
      };
      meth_sig="bool LoadWeights(taString& fname, bool quiet = false)";
      meth_desc=" read weight values in from a simple ordered list of weights (fmt is read from file) (leave fname empty to pull up file chooser)";
     };
    };
    step_prog=NULL;
    step_n=1;
    doc {
     name="doc";
     desc=;
     web_doc=0;
     wiki=;
     url="local";
     full_url="local";
     text_size=1;
     text=;
     html_text=;
    };
   };
  };
  Program_Group @.gp[1] {
   name="BpAll_Test";
   el_typ=Program;
   el_def=0;
   tags="Bp, Std, All, Test";
   desc="The full set of programs for testing a standard Backpropagation network (starting with Epoch)";
   debug_mode=0;
   Program @[0] {
    UserDataItem_List @*(.user_data_) {
     name=;
     el_typ=UserData_DocLink;
     el_def=0;
     UserData_DocLink @[0] {name="DocLink": doc=.programs.gp[1][0].doc$$: };
    };
    name="BpEpochTest";
    short_nm="pchTst";
    tags="Bp, Std";
    desc="iterates over all of the items in a data table and calls BpTrial process on them";
    version {
     major=0;
     minor=0;
     step=0;
    };
    author=;
    email=;
    flags=0;
    stop_step_cond {
     expr=;
    };
    objs {
     name="objs";
     el_typ=taNBase;
     el_def=0;
    };
    objs_vars {
     name="objs_vars";
     el_typ=ProgVar;
     el_def=0;
    };
    types {
     name="types";
     el_typ=DynEnumType;
     el_def=0;
    };
    args {
     name="args";
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="network";
      var_type=T_Object;
      object_type=BpNetwork;
      object_val=$.networks[0]$;
      object_scope=NULL;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL|PGRM_ARG;
      reference=0;
      desc="network to operate on";
      init_from=NULL;
     };
    };
    vars {
     name="vars";
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="input_data";
      var_type=T_Object;
      object_type=DataTable;
      object_val=$.data.gp[0][1]$;
      object_scope=NULL;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc="table of patterns to present to the network, one row at a time";
      init_from=NULL;
     };
     ProgVar @[1] {
      name="output_file";
      var_type=T_String;
      string_val=;
      object_scope=NULL;
      flags=CTRL_PANEL|CTRL_READ_ONLY|NULL_CHECK|SAVE_VAL|USED;
      reference=0;
      desc="output file of export data";
      init_from=$.programs[0]$;
     };
     ProgVar @[2] {
      name="data_loop_order";
      var_type=T_HardEnum;
      int_val=0;
      object_scope=NULL;
      hard_enum_type=DataLoop::Order;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc="controls the order in which events (rows of the input data datatable) are presented to the network
(SEQUENTIAL, PERMUTED, RANDOM)";
      init_from=NULL;
     };
     ProgVar @[3] {
      name="trial";
      var_type=T_Int;
      int_val=0;
      object_scope=NULL;
      flags=CTRL_PANEL|CTRL_READ_ONLY|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc="current trial (event) within the epoch -- increments automatically";
      init_from=NULL;
     };
     ProgVar @[4] {
      name="trial_mon_data";
      var_type=T_Object;
      object_type=DataTable;
      object_val=.data.gp[1][2]$$;
      object_scope=NULL;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc="trial-level output data -- we reset it every epoch by default, so it just contains last epoch of data";
      init_from=NULL;
     };
     ProgVar @[5] {
      name="epoch_timer";
      var_type=T_Object;
      object_type=TimeUsed;
      object_val=$.networks[0].epoch_time$;
      object_scope=NULL;
      objs_ptr=0;
      flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc="timer to record time required to perform one epoch of processing (object is on network -- this is a pointer to it)";
      init_from=NULL;
     };
     ProgVar @[6] {
      name="data_loop_index";
      var_type=T_Int;
      int_val=3792;
      object_scope=NULL;
      flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc="index counter for the looping over items in the input_data datatable (not always the same as trial counter, depending on distributed memory computation)";
      init_from=NULL;
     };
    };
    functions {
     name="functions";
     el_typ=Function;
     el_def=0;
    };
    init_code {
     name="init_code";
     el_typ=ProgCode;
     el_def=0;
     NetCounterInit @[0] {
      name="NetCounterInit_NetCounterInittrial";
      desc="initialize trial counter (local variable and in the network)";
      flags=CAN_REVERT_TO_CODE;
      code_string="Net Counter Init: trial";
      network_var=.programs.gp[1][0].args[0]$$;
      local_ctr_var=.programs.gp[1][0].vars[3]$$;
      counter=Network::trial;
      update_after=0;
     };
     AssignExpr @[1] {
      name="AssignExpr_epochtimernetworkepochtime";
      desc="get pointer to epoch timer object on network";
      flags=CAN_REVERT_TO_CODE;
      code_string="epoch_timer = network.epoch_time";
      result_var=.programs.gp[1][0].vars[5]$$;
      expr {
       expr="network.epoch_time";
      };
     };
    };
    prog_code {
     name="prog_code";
     el_typ=ProgCode;
     el_def=0;
     NetCounterInit @[0] {
      name="NetCounterInit_NetCounterInittrial";
      desc="initialize trial counter (local variable and in the network)";
      flags=OFF;
      code_string=;
      network_var=$.programs.gp[1][0].args[0]$;
      local_ctr_var=$.programs.gp[1][0].vars[3]$;
      counter=Network::trial;
      update_after=0;
     };
     MemberAssign @[1] {
      name="MemberAssign_networktrainmodeNetworkTEST";
      desc="set to testing mode";
      flags=NEW_EL|CAN_REVERT_TO_CODE;
      code_string="network.train_mode = Network::TEST";
      obj=$.programs.gp[1][0].args[0]$;
      path="train_mode";
      expr {
       expr="Network::TEST";
      };
      update_after=0;
     };
     AssignExpr @[2] {
      name="AssignExpr_epochtimernetworkepochtime";
      desc="get pointer to epoch timer object on network";
      flags=CAN_REVERT_TO_CODE;
      code_string="epoch_timer = network.epoch_time";
      result_var=$.programs.gp[1][0].vars[5]$;
      expr {
       expr="network.epoch_time";
      };
     };
     MethodCall @[3] {
      name="MethodCall_epochtimerStartTimertrue";
      desc="start the epoch timer to record computation time per epoch";
      flags=CAN_REVERT_TO_CODE;
      code_string="epoch_timer->StartTimer(true)";
      result_var=NULL;
      obj=$.programs.gp[1][0].vars[5]$;
      method=TimeUsed::StartTimer;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=bool;
	type="bool";
	name="reset_used";
	required=0;
	def_val="true";
	prev_expr=;
	expr {
	 expr="true";
	};
       };
      };
      meth_sig="void StartTimer(bool reset_used = true)";
      meth_desc=" record the current time as the starting time, and optionally reset the time used information";
     };
     MethodCall @[4] {
      name="MethodCall_trialmondataResetData";
      desc="reset trial-level monitor data every epoch, so it reflects only the most recent epoch's worth of data (turn flags OFF to accumulate trial data across entire training run)";
      flags=CAN_REVERT_TO_CODE;
      code_string="trial_mon_data->ResetData()";
      result_var=NULL;
      obj=.programs.gp[1][0].vars[4]$$;
      method=DataTable::ResetData;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
      };
      meth_sig="void ResetData()";
      meth_desc=" deletes all the data (rows), but keeps the column structure -- this cannot be undone!";
     };
     NetDataLoop @[5] {
      name="NetDataLoop_NetDataLoopSEQUE_ardatalooporder";
      desc="iterates over the events/rows of input_data, according to data_loop_order variable";
      flags=CAN_REVERT_TO_CODE;
      code_string="Net Data Loop (SEQUENTIAL):  table=input_data  index=data_loop_index  order_var=data_loop_order ";
      loop_code {
       name="loop_code";
       el_typ=ProgCode;
       el_def=0;
       ProgramCall @[0] {
	name="ProgramCall_BpTrialTestnetworkinputdata";
	desc="run the trial program, passing network and input_data";
	flags=CAN_REVERT_TO_CODE;
	code_string="BpTrialTest(network, input_data)";
	prog_args {
	 name="prog_args";
	 el_typ=ProgArg;
	 el_def=0;
	 ProgArg @[0] {
	  arg_type=BpNetwork;
	  type="BpNetwork*";
	  name="network";
	  required=1;
	  def_val=;
	  prev_expr=;
	  expr {
	   expr="network";
	  };
	 };
	 ProgArg @[1] {
	  arg_type=DataTable;
	  type="DataTable*";
	  name="input_data";
	  required=1;
	  def_val=;
	  prev_expr=;
	  expr {
	   expr="input_data";
	  };
	 };
	};
	target=.programs.gp[1][1]$$;
	targ_ld_init="*BpTrial*";
       };
       If @[1] {
	name="If_ifnetworkCompute_ightsTesttrial1";
	desc="test if it is time to update the weight values from delta weights (dWt) computed over trials";
	flags=CAN_REVERT_TO_CODE;
	code_string="if (network.Compute_Weights_Test(trial+1))";
	cond {
	 expr="network.Compute_Weights_Test(trial+1)";
	};
	true_code {
	 name="true_code";
	 el_typ=ProgCode;
	 el_def=0;
	 MethodCall @[0] {
	  name="MethodCall_networkComputeWeights";
	  desc="update the weight values based on changes computed by trial program";
	  flags=CAN_REVERT_TO_CODE;
	  code_string="network->Compute_Weights()";
	  result_var=NULL;
	  obj=$.programs.gp[1][0].args[0]$;
	  method=Network::Compute_Weights;
	  meth_args {
	   name="meth_args";
	   el_typ=ProgArg;
	   el_def=0;
	  };
	  meth_sig="void Compute_Weights()";
	  meth_desc=" update weights for whole net: calls DMem_SumDWts before doing update if in dmem mode";
	 };
	};
       };
      };
      data_var=.programs.gp[1][0].vars[0]$$;
      index_var=.programs.gp[1][0].vars[6]$$;
      order_var=.programs.gp[1][0].vars[2]$$;
      order=SEQUENTIAL;
      update_after=0;
      dmem_nprocs=1;
      dmem_this_proc=0;
      grouped=0;
      group_col 9 0="Group";
      group_index_var=NULL;
      group_order_var=NULL;
      group_order=PERMUTED;
      group_idx_list{       };
     };
     If @[6] {
      name="If_ifnetworkwtupdateNetworkBATCH";
      desc="if full batch mode, update only at end of epoch";
      flags=CAN_REVERT_TO_CODE;
      code_string="if (network.wt_update == Network::BATCH)";
      cond {
       expr="network.wt_update == Network::BATCH";
      };
      true_code {
       name="true_code";
       el_typ=ProgCode;
       el_def=0;
       MethodCall @[0] {
	name="MethodCall_networkComputeWeights";
	desc="final update of weights based on accumulated changes";
	flags=CAN_REVERT_TO_CODE;
	code_string="network->Compute_Weights()";
	result_var=NULL;
	obj=$.programs.gp[1][0].args[0]$;
	method=Network::Compute_Weights;
	meth_args {
	 name="meth_args";
	 el_typ=ProgArg;
	 el_def=0;
	};
	meth_sig="void Compute_Weights()";
	meth_desc=" update weights for whole net: calls DMem_SumDWts before doing update if in dmem mode";
       };
      };
     };
     MethodCall @[7] {
      name="MethodCall_networkComputeEpochStats";
      desc="network accumulates some core statistics over the epoch -- this finalizes that process and computes summary stats";
      flags=CAN_REVERT_TO_CODE;
      code_string="network->Compute_EpochStats()";
      result_var=NULL;
      obj=$.programs.gp[1][0].args[0]$;
      method=LeabraNetwork::Compute_EpochStats;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
      };
      meth_sig="void Compute_EpochStats()";
      meth_desc=" compute epoch-level statistics; calls DMem_ComputeAggs (if dmem) and EpochSSE -- specific algos may add more compute epoch-level statistics, including SSE, AvgExtRew and AvgCycles";
     };
     MethodCall @[8] {
      name="MethodCall_epochtimerEndTimer";
      desc="done with the computation in the epoch -- record time it took";
      flags=CAN_REVERT_TO_CODE;
      code_string="epoch_timer->EndTimer()";
      result_var=NULL;
      obj=$.programs.gp[1][0].vars[5]$;
      method=TimeUsed::EndTimer;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
      };
      meth_sig="void EndTimer()";
      meth_desc=" record the current time as the ending time, and compute difference as the time used";
     };
     ProgramCall @[9] {
      name="ProgramCall_BpEpochMonitorTestnetwork";
      desc="run program that records data from network and possibly other sources about the epoch";
      flags=CAN_REVERT_TO_CODE;
      code_string="BpEpochMonitorTest(network)";
      prog_args {
       name="prog_args";
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=Network;
	type="BpNetwork*";
	name="network";
	required=1;
	def_val=;
	prev_expr=;
	expr {
	 expr="network";
	};
       };
      };
      target=.programs.gp[1][4]$$;
      targ_ld_init="*BpEpochMonitor*";
     };
     ProgramCall @[10] {
      name="ProgramCall_ExportDatatrialmondataoutputfile";
      desc="run program that records data from network and possibly other sources about the epoch";
      flags=CAN_REVERT_TO_CODE;
      code_string="ExportData(trial_mon_data, output_file)";
      prog_args {
       name="prog_args";
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=DataTable;
	type="DataTable*";
	name="FinalData";
	required=1;
	def_val=;
	prev_expr="trial_mon_data";
	expr {
	 expr="trial_mon_data";
	};
       };
       ProgArg @[1] {
	arg_type=taString;
	type="String";
	name="output_file";
	required=1;
	def_val=;
	prev_expr=;
	expr {
	 expr="output_file";
	};
       };
      };
      target=$.programs.gp[0][8]$;
      targ_ld_init="*ExportData*";
     };
     MemberAssign @[11] {
      name="MemberAssign_networktrainmodeNetworkTRAIN";
      desc="set back to training mode";
      flags=NEW_EL|CAN_REVERT_TO_CODE;
      code_string="network.train_mode = Network::TRAIN";
      obj=$.programs.gp[1][0].args[0]$;
      path="train_mode";
      expr {
       expr="Network::TRAIN";
      };
      update_after=0;
     };
    };
    step_prog=$.programs.gp[1][1]$;
    step_n=1;
    doc {
     name="doc";
     desc=;
     web_doc=0;
     wiki=;
     url="local";
     full_url="local";
     text_size=1;
     text=;
     html_text=;
    };
   };
   Program @[1] {
    UserDataItem_List @*(.user_data_) {
     name=;
     el_typ=UserData_DocLink;
     el_def=0;
     UserData_DocLink @[0] {name="DocLink": doc=.programs.gp[1][1].doc$$: };
    };
    name="BpTrialTest";
    short_nm="TrlTst";
    tags="Bp, Std";
    desc="Backpropagation processing of a single input/output event or external information";
    version {
     major=0;
     minor=0;
     step=0;
    };
    author=;
    email=;
    flags=0;
    stop_step_cond {
     expr=;
    };
    objs {
     name="objs";
     el_typ=taNBase;
     el_def=0;
    };
    objs_vars {
     name="objs_vars";
     el_typ=ProgVar;
     el_def=0;
    };
    types {
     name="types";
     el_typ=DynEnumType;
     el_def=0;
    };
    args {
     name="args";
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="network";
      var_type=T_Object;
      object_type=BpNetwork;
      object_val=$.networks[0]$;
      object_scope=NULL;
      objs_ptr=0;
      flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL|PGRM_ARG;
      reference=0;
      desc="network to operate on -- typically set by higher-level calling programs";
      init_from=NULL;
     };
     ProgVar @[1] {
      name="input_data";
      var_type=T_Object;
      object_type=DataTable;
      object_val=$.data.gp[0][1]$;
      object_scope=NULL;
      objs_ptr=0;
      flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL|PGRM_ARG;
      reference=0;
      desc="datatable containing training input/output patterns";
      init_from=NULL;
     };
    };
    vars {
     name="vars";
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="update_net_view";
      var_type=T_Bool;
      bool_val=1;
      object_scope=NULL;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc="determines whether to update any network view displays after trial is completed";
      init_from=NULL;
     };
    };
    functions {
     name="functions";
     el_typ=Function;
     el_def=0;
    };
    init_code {
     name="init_code";
     el_typ=ProgCode;
     el_def=0;
    };
    prog_code {
     name="prog_code";
     el_typ=ProgCode;
     el_def=0;
     MethodCall @[0] {
      name="MethodCall_networkInitInputData";
      desc="resets input data, before getting new external inputs data from apply inputs call";
      flags=CAN_REVERT_TO_CODE;
      code_string="network->Init_InputData()";
      result_var=NULL;
      obj=.programs.gp[1][1].args[0]$$;
      method=Network::Init_InputData;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
      };
      meth_sig="void Init_InputData()";
      meth_desc=" Initializes external and target inputs";
     };
     ProgramCall @[1] {
      name="ProgramCall_ApplyInputsTestnetworkinputdata";
      desc="apply external input activations from the input_data table to the network
this program can be extended to do arbitrary things to generate data and apply it to network layers";
      flags=CAN_REVERT_TO_CODE;
      code_string="ApplyInputsTest(network, input_data)";
      prog_args {
       name="prog_args";
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=LeabraNetwork;
	type="BpNetwork*";
	name="network";
	required=1;
	def_val=;
	prev_expr=;
	expr {
	 expr="network";
	};
       };
       ProgArg @[1] {
	arg_type=DataTable;
	type="DataTable*";
	name="input_data";
	required=1;
	def_val=;
	prev_expr=;
	expr {
	 expr="input_data";
	};
       };
      };
      target=.programs.gp[1][2]$$;
      targ_ld_init="*ApplyInputs*";
     };
     MethodCall @[2] {
      name="MethodCall_networkTrialRun";
      desc="initializes various counters at start of trial";
      flags=CAN_REVERT_TO_CODE;
      code_string="network->Trial_Run()";
      result_var=NULL;
      obj=$.programs.gp[1][1].args[0]$;
      method=BpNetwork::Trial_Run;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
      };
      meth_sig="void Trial_Run()";
      meth_desc=" run one trial of Bp: calls SetCurLrate, Compute_NetinAct, Compute_dEdA_dEdNet, and, if train_mode == TRAIN, Compute_dWt. If you want to save some speed just for testing, you can just call Compute_NetinAct and skip the other two (esp Compute_dEdA_dEdNet, which does a full backprop and is expensive, but often useful for visualization & testing)";
     };
     MethodCall @[3] {
      name="MethodCall_networkComputeTrialStats";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="network->Compute_TrialStats()";
      result_var=NULL;
      obj=$.programs.gp[1][1].args[0]$;
      method=LeabraNetwork::Compute_TrialStats;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
      };
      meth_sig="void Compute_TrialStats()";
      meth_desc=" compute trial-level statistics (SSE and others defined by specific algorithms) do not call this function anymore -- it is obsolete -- please use Compute_PhaseStats or Compute_MinusStats / Compute_PlusStats for more appropriate stats computation at the right time";
     };
     ProgramCall @[4] {
      name="ProgramCall_BpTrialMonitorTestnetwork";
      desc="records data about the trial-level processing to a datatable for graphing/processing";
      flags=CAN_REVERT_TO_CODE;
      code_string="BpTrialMonitorTest(network)";
      prog_args {
       name="prog_args";
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=Network;
	type="BpNetwork*";
	name="network";
	required=1;
	def_val=;
	prev_expr=;
	expr {
	 expr="network";
	};
       };
      };
      target=.programs.gp[1][3]$$;
      targ_ld_init="*BpTrialMonitor*";
     };
     NetUpdateView @[5] {
      name="NetUpdateView_NetUpdateView";
      desc="update the network view(s) (only if update_net_view is true)";
      flags=CAN_REVERT_TO_CODE;
      code_string="Net Update View";
      network_var=$.programs.gp[1][1].args[0]$;
      update_var=.programs.gp[1][1].vars[0]$$;
     };
    };
    step_prog=NULL;
    step_n=1;
    doc {
     name="doc";
     desc=;
     web_doc=0;
     wiki=;
     url="local";
     full_url="local";
     text_size=1;
     text=;
     html_text=;
    };
   };
   Program @[2] {
    UserDataItem_List @*(.user_data_) {
     name=;
     el_typ=UserData_DocLink;
     el_def=0;
     UserData_DocLink @[0] {name="DocLink": doc=.programs.gp[1][2].doc$$: };
    };
    name="ApplyInputsTest";
    short_nm="AplyIn";
    tags="Network, InputData, Apply";
    desc="apply the current input data to the network as external input and target values";
    version {
     major=0;
     minor=0;
     step=0;
    };
    author=;
    email=;
    flags=NO_STOP_STEP;
    stop_step_cond {
     expr=;
    };
    objs {
     name="objs";
     el_typ=LayerWriter;
     el_def=0;
     LayerWriter @[0] {
      name="LayerWriter_0";
      data=$.data.gp[0][1]$;
      network=$.networks[0]$;
      layer_data {
       name="layer_data";
       el_typ=LayerWriterEl;
       el_def=0;
       LayerWriterEl @[0] {
	col_name="Input";
	net_target=LAYER;
	layer_name="Input";
	offset {x=0: y=0: };
	use_layer_type=1;
	quiet=0;
	na_by_range=0;
	ext_flags=EXT;
	noise {name="noise": type=NONE: mean=0: var=0.5: par=1: };
       };
       LayerWriterEl @[1] {
	col_name="Output";
	net_target=LAYER;
	layer_name="Output";
	offset {x=0: y=0: };
	use_layer_type=1;
	quiet=0;
	na_by_range=0;
	ext_flags=TARG;
	noise {name="noise": type=NONE: mean=0: var=0.5: par=1: };
       };
       LayerWriterEl @[2] {
	col_name="Name";
	net_target=TRIAL_NAME;
	layer_name="Name";
	offset {x=0: y=0: };
	use_layer_type=1;
	quiet=0;
	na_by_range=0;
	ext_flags=0;
	noise {name="noise": type=NONE: mean=0: var=0.5: par=1: };
       };
      };
     };
    };
    objs_vars {
     name="objs_vars";
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="layer_writer_0";
      var_type=T_Object;
      object_type=LayerWriter;
      object_val=.programs.gp[1][2].objs[0]$$;
      object_scope=NULL;
      objs_ptr=1;
      flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc="this is a pointer to the LayerWriter object in objs -- edit that object to determine how information is presented to the network";
      init_from=NULL;
     };
    };
    types {
     name="types";
     el_typ=DynEnumType;
     el_def=0;
    };
    args {
     name="args";
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="network";
      var_type=T_Object;
      object_type=LeabraNetwork;
      object_val=$.networks[0]$;
      object_scope=NULL;
      objs_ptr=0;
      flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL|PGRM_ARG;
      reference=0;
      desc="network to apply inputs to -- typically set by calling program";
      init_from=NULL;
     };
     ProgVar @[1] {
      name="input_data";
      var_type=T_Object;
      object_type=DataTable;
      object_val=$.data.gp[0][1]$;
      object_scope=NULL;
      objs_ptr=0;
      flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL|PGRM_ARG;
      reference=0;
      desc="input datatable containing input/output patterns";
      init_from=NULL;
     };
    };
    vars {
     name="vars";
     el_typ=ProgVar;
     el_def=0;
    };
    functions {
     name="functions";
     el_typ=Function;
     el_def=0;
    };
    init_code {
     name="init_code";
     el_typ=ProgCode;
     el_def=0;
     MethodCall @[0] {
      name="MethodCall_layerwriter0SetD_nputdatanetwork";
      desc="sets the datatable and network for the layer writer, so it knows what to write to";
      flags=CAN_REVERT_TO_CODE;
      code_string="layer_writer_0->SetDataNetwork(input_data, network)";
      result_var=NULL;
      obj=.programs.gp[1][2].objs_vars[0]$$;
      method=LayerWriter::SetDataNetwork;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=DataTable_ptr;
	type="DataTable*";
	name="db";
	required=1;
	def_val=;
	prev_expr=;
	expr {
	 expr="input_data";
	};
       };
       ProgArg @[1] {
	arg_type=Network_ptr;
	type="Network*";
	name="net";
	required=1;
	def_val=;
	prev_expr=;
	expr {
	 expr="network";
	};
       };
      };
      meth_sig="void SetDataNetwork(DataTable* db, Network* net)";
      meth_desc=" set the data table and network pointers -- convenience function for programs ";
     };
     MethodCall @[1] {
      name="MethodCall_layerwriter0CheckConfigfalse";
      desc="check the configuration of the layer writer -- will emit warnings and errors for missing or misconfigured items";
      flags=CAN_REVERT_TO_CODE;
      code_string="layer_writer_0->CheckConfig(false)";
      result_var=NULL;
      obj=$.programs.gp[1][2].objs_vars[0]$;
      method=taList_impl::CheckConfig;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=bool;
	type="bool";
	name="quiet";
	required=0;
	def_val="false";
	prev_expr=;
	expr {
	 expr="false";
	};
       };
      };
      meth_sig="bool CheckConfig(bool quiet = false)";
      meth_desc=" check the configuration of this object and all its children (defaults to no confirm of success)";
     };
    };
    prog_code {
     name="prog_code";
     el_typ=ProgCode;
     el_def=0;
     MethodCall @[0] {
      name="MethodCall_layerwriter0ApplyInputData";
      desc="apply inputs to the network!  layer writer has all the key specs";
      flags=CAN_REVERT_TO_CODE;
      code_string="layer_writer_0->ApplyInputData()";
      result_var=NULL;
      obj=$.programs.gp[1][2].objs_vars[0]$;
      method=LayerWriter::ApplyInputData;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
      };
      meth_sig="bool ApplyInputData()";
      meth_desc=" apply data to the layers, using the network's current context settings (TEST,TRAIN,etc) -- returns success";
     };
    };
    step_prog=NULL;
    step_n=1;
    doc {
     name="doc";
     desc=;
     web_doc=0;
     wiki=;
     url="local";
     full_url="local";
     text_size=1;
     text=;
     html_text=;
    };
   };
   Program @[3] {
    UserDataItem_List @*(.user_data_) {
     name=;
     el_typ=UserData_DocLink;
     el_def=0;
     UserData_DocLink @[0] {name="DocLink": doc=.programs.gp[1][3].doc$$: };
    };
    name="BpTrialMonitorTest";
    short_nm="TrlMon";
    tags="Bp, Std, Monitor";
    desc="monitor trial-level data from the network (and potentially other sources) -- stores results in datatable (TrialOutputData typically) that can be used for graph/grid views and further analysis ";
    version {
     major=0;
     minor=0;
     step=0;
    };
    author=;
    email=;
    flags=NO_STOP_STEP;
    stop_step_cond {
     expr=;
    };
    objs {
     name="objs";
     el_typ=NetMonitor;
     el_def=0;
     NetMonitor @[0] {
      name="trial_netmon";
      items {
       name="items";
       el_typ=NetMonItem;
       el_def=0;
       NetMonItem @[0] {
	name="batch";
	computed=0;
	object_type=LeabraNetwork;
	object=$.networks[0]$;
	variable="batch";
	var_label=;
	name_style=AUTO_NAME;
	max_name_len=6;
	options=HIDDEN_LAYERS|OUTPUT_LAYERS|TARGET_LAYERS;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	data_agg=0;
	data_src=NULL;
	agg_col {
	 col_name=;
	};
	agg {name="agg": op=NONE: rel={name="rel": rel=LESSTHANOREQUAL: val=0: val_string="": use_var=0: var=NULL: }: };
	select_rows=0;
	select_spec {
	 col_name=;
	 name="_EQUAL_";
	 on=1;
	 rel=EQUAL;
	 use_var=0;
	 cmp 0 1;
	 var=NULL;
	 enable_var=NULL;
	};
	pre_proc_1 {name="pre_proc_1": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {name="pre_proc_2": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {name="pre_proc_3": opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[1] {
	name="epoch";
	computed=0;
	object_type=LeabraNetwork;
	object=$.networks[0]$;
	variable="epoch";
	var_label=;
	name_style=AUTO_NAME;
	max_name_len=6;
	options=HIDDEN_LAYERS|OUTPUT_LAYERS|TARGET_LAYERS;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	data_agg=0;
	data_src=NULL;
	agg_col {
	 col_name=;
	};
	agg {name="agg": op=NONE: rel={name="rel": rel=LESSTHANOREQUAL: val=0: val_string="": use_var=0: var=NULL: }: };
	select_rows=0;
	select_spec {
	 col_name=;
	 name="_EQUAL_";
	 on=1;
	 rel=EQUAL;
	 use_var=0;
	 cmp 0 1;
	 var=NULL;
	 enable_var=NULL;
	};
	pre_proc_1 {name="pre_proc_1": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {name="pre_proc_2": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {name="pre_proc_3": opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[2] {
	name="trial";
	computed=0;
	object_type=LeabraNetwork;
	object=$.networks[0]$;
	variable="trial";
	var_label=;
	name_style=AUTO_NAME;
	max_name_len=6;
	options=HIDDEN_LAYERS|OUTPUT_LAYERS|TARGET_LAYERS;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	data_agg=0;
	data_src=NULL;
	agg_col {
	 col_name=;
	};
	agg {name="agg": op=NONE: rel={name="rel": rel=LESSTHANOREQUAL: val=0: val_string="": use_var=0: var=NULL: }: };
	select_rows=0;
	select_spec {
	 col_name=;
	 name="_EQUAL_";
	 on=1;
	 rel=EQUAL;
	 use_var=0;
	 cmp 0 1;
	 var=NULL;
	 enable_var=NULL;
	};
	pre_proc_1 {name="pre_proc_1": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {name="pre_proc_2": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {name="pre_proc_3": opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[3] {
	name="trial_name";
	computed=0;
	object_type=LeabraNetwork;
	object=$.networks[0]$;
	variable="trial_name";
	var_label=;
	name_style=AUTO_NAME;
	max_name_len=6;
	options=HIDDEN_LAYERS|OUTPUT_LAYERS|TARGET_LAYERS;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	data_agg=0;
	data_src=NULL;
	agg_col {
	 col_name=;
	};
	agg {name="agg": op=NONE: rel={name="rel": rel=LESSTHANOREQUAL: val=0: val_string="": use_var=0: var=NULL: }: };
	select_rows=0;
	select_spec {
	 col_name=;
	 name="_EQUAL_";
	 on=1;
	 rel=EQUAL;
	 use_var=0;
	 cmp 0 1;
	 var=NULL;
	 enable_var=NULL;
	};
	pre_proc_1 {name="pre_proc_1": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {name="pre_proc_2": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {name="pre_proc_3": opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[4] {
	name="group_name";
	computed=0;
	object_type=LeabraNetwork;
	object=$.networks[0]$;
	variable="group_name";
	var_label=;
	name_style=AUTO_NAME;
	max_name_len=6;
	options=HIDDEN_LAYERS|OUTPUT_LAYERS|TARGET_LAYERS;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	data_agg=0;
	data_src=NULL;
	agg_col {
	 col_name=;
	};
	agg {name="agg": op=NONE: rel={name="rel": rel=LESSTHANOREQUAL: val=0: val_string="": use_var=0: var=NULL: }: };
	select_rows=0;
	select_spec {
	 col_name=;
	 name="_EQUAL_";
	 on=1;
	 rel=EQUAL;
	 use_var=0;
	 cmp 0 1;
	 var=NULL;
	 enable_var=NULL;
	};
	pre_proc_1 {name="pre_proc_1": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {name="pre_proc_2": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {name="pre_proc_3": opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[5] {
	name="sse";
	computed=0;
	object_type=LeabraNetwork;
	object=$.networks[0]$;
	variable="sse";
	var_label=;
	name_style=AUTO_NAME;
	max_name_len=6;
	options=HIDDEN_LAYERS|OUTPUT_LAYERS|TARGET_LAYERS;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	data_agg=0;
	data_src=NULL;
	agg_col {
	 col_name=;
	};
	agg {name="agg": op=NONE: rel={name="rel": rel=LESSTHANOREQUAL: val=0: val_string="": use_var=0: var=NULL: }: };
	select_rows=0;
	select_spec {
	 col_name=;
	 name="_EQUAL_";
	 on=1;
	 rel=EQUAL;
	 use_var=0;
	 cmp 0 1;
	 var=NULL;
	 enable_var=NULL;
	};
	pre_proc_1 {name="pre_proc_1": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {name="pre_proc_2": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {name="pre_proc_3": opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[6] {
	name="Output_act";
	computed=0;
	object_type=BpLayer;
	object=.networks[0].layers[2]$$;
	variable="act";
	var_label=;
	name_style=AUTO_NAME;
	max_name_len=6;
	options=HIDDEN_LAYERS|OUTPUT_LAYERS|TARGET_LAYERS;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	data_agg=0;
	data_src=NULL;
	agg_col {
	 col_name=;
	};
	agg {name="agg": op=NONE: rel={name="Relation": rel=LESSTHANOREQUAL: val=0: val_string="": use_var=0: var=NULL: }: };
	select_rows=0;
	select_spec {
	 col_name=;
	 name="_EQUAL_";
	 on=1;
	 rel=EQUAL;
	 use_var=0;
	 cmp 0 1;
	 var=NULL;
	 enable_var=NULL;
	};
	pre_proc_1 {name="pre_proc_1": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {name="pre_proc_2": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {name="pre_proc_3": opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[7] {
	name="Output_targ";
	computed=0;
	object_type=BpLayer;
	object=$.networks[0].layers[2]$;
	variable="targ";
	var_label=;
	name_style=AUTO_NAME;
	max_name_len=6;
	options=HIDDEN_LAYERS|OUTPUT_LAYERS|TARGET_LAYERS;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	data_agg=0;
	data_src=NULL;
	agg_col {
	 col_name=;
	};
	agg {name="agg": op=NONE: rel={name="Relation": rel=LESSTHANOREQUAL: val=0: val_string="": use_var=0: var=NULL: }: };
	select_rows=0;
	select_spec {
	 col_name=;
	 name="_EQUAL_";
	 on=1;
	 rel=EQUAL;
	 use_var=0;
	 cmp 0 1;
	 var=NULL;
	 enable_var=NULL;
	};
	pre_proc_1 {name="pre_proc_1": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {name="pre_proc_2": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {name="pre_proc_3": opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[8] {
	name="Output_Output";
	computed=0;
	object_type=BpLayer;
	object=$.networks[0].layers[2]$;
	variable="Output";
	var_label=;
	name_style=AUTO_NAME;
	max_name_len=6;
	options=HIDDEN_LAYERS|OUTPUT_LAYERS|TARGET_LAYERS;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	data_agg=0;
	data_src=NULL;
	agg_col {
	 col_name=;
	};
	agg {name="agg": op=NONE: rel={name="Relation_26": rel=LESSTHANOREQUAL: val=0: val_string="": use_var=0: var=NULL: }: };
	select_rows=0;
	select_spec {
	 col_name=;
	 name="_EQUAL_";
	 on=1;
	 rel=EQUAL;
	 use_var=0;
	 cmp 2 0=0;
	 var=NULL;
	 enable_var=NULL;
	};
	pre_proc_1 {name="pre_proc_1": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {name="pre_proc_2": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {name="pre_proc_3": opr=NONE: arg=0: lw=-1: hi=1: };
       };
      };
      network=$.networks[0]$;
      data=$.data.gp[1][2]$;
      rmv_orphan_cols=1;
     };
    };
    objs_vars {
     name="objs_vars";
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="trial_netmon";
      var_type=T_Object;
      object_type=NetMonitor;
      object_val=.programs.gp[1][3].objs[0]$$;
      object_scope=NULL;
      objs_ptr=1;
      flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc="pointer to the NetMonitor object in objs secton of this program that contains configuration for what to record and where to get it";
      init_from=NULL;
     };
    };
    types {
     name="types";
     el_typ=DynEnumType;
     el_def=0;
    };
    args {
     name="args";
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="network";
      var_type=T_Object;
      object_type=Network;
      object_val=$.networks[0]$;
      object_scope=NULL;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL|PGRM_ARG;
      reference=0;
      desc="network to record data from";
      init_from=NULL;
     };
    };
    vars {
     name="vars";
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="trial_mon_data";
      var_type=T_Object;
      object_type=DataTable;
      object_val=$.data.gp[1][2]$;
      object_scope=NULL;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc="data table to record trial-level data to (this program writes new data to this table!)";
      init_from=NULL;
     };
    };
    functions {
     name="functions";
     el_typ=Function;
     el_def=0;
    };
    init_code {
     name="init_code";
     el_typ=ProgCode;
     el_def=0;
     MethodCall @[0] {
      name="MethodCall_trialnetmonSetDa_lmondatanetwork";
      desc="set the network and datatable for the NetMonitor";
      flags=CAN_REVERT_TO_CODE;
      code_string="trial_netmon->SetDataNetwork(trial_mon_data, network)";
      result_var=NULL;
      obj=.programs.gp[1][3].objs_vars[0]$$;
      method=NetMonitor::SetDataNetwork;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=DataTable_ptr;
	type="DataTable*";
	name="dt";
	required=1;
	def_val=;
	prev_expr=;
	expr {
	 expr="trial_mon_data";
	};
       };
       ProgArg @[1] {
	arg_type=Network_ptr;
	type="Network*";
	name="net";
	required=1;
	def_val=;
	prev_expr=;
	expr {
	 expr="network";
	};
       };
      };
      meth_sig="void SetDataNetwork(DataTable* dt, Network* net)";
      meth_desc=" set both the data table and network -- convenient for programs -- calls ResetDataTableCols too -- don't call if columns are manually added or this is adding additional rows to a table";
     };
     MethodCall @[1] {
      name="MethodCall_trialnetmonCheckConfigfalse";
      desc="check the configuration of the network monitor -- will emit warnings and errors for misconfigurations";
      flags=CAN_REVERT_TO_CODE;
      code_string="trial_netmon->CheckConfig(false)";
      result_var=NULL;
      obj=$.programs.gp[1][3].objs_vars[0]$;
      method=taBase::CheckConfig;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=bool;
	type="bool";
	name="quiet";
	required=0;
	def_val="false";
	prev_expr=;
	expr {
	 expr="false";
	};
       };
      };
      meth_sig="bool CheckConfig(bool quiet = false)";
      meth_desc=" check the configuration of this object and all its children (defaults to no confirm of success)";
     };
     MethodCall @[2] {
      name="MethodCall_trialnetmonUpdateMonitorstrue";
      desc="update the monitor items and data schema based on current settings of the NetMonitor object";
      flags=CAN_REVERT_TO_CODE;
      code_string="trial_netmon->UpdateMonitors(true)";
      result_var=NULL;
      obj=$.programs.gp[1][3].objs_vars[0]$;
      method=NetMonitor::UpdateMonitors;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=bool;
	type="bool";
	name="reset_first";
	required=0;
	def_val="false";
	prev_expr=;
	expr {
	 expr="true";
	};
       };
      };
      meth_sig="void UpdateMonitors(bool reset_first = false)";
      meth_desc=" old name for UpdateDataTable";
     };
    };
    prog_code {
     name="prog_code";
     el_typ=ProgCode;
     el_def=0;
     MethodCall @[0] {
      name="MethodCall_trialmondataAddBlankRow";
      desc="add a new blank row to the data";
      flags=CAN_REVERT_TO_CODE;
      code_string="trial_mon_data->AddBlankRow()";
      result_var=NULL;
      obj=.programs.gp[1][3].vars[0]$$;
      method=DataTable::AddBlankRow;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
      };
      meth_sig="int AddBlankRow()";
      meth_desc=" add a new row to the data table, sets read (source) and write (sink) index to this last row (as in ReadItem or WriteItem), so that subsequent data routines refer to this new row, and returns row ";
     };
     MethodCall @[1] {
      name="MethodCall_trialnetmonGetMonVals";
      desc="get the new monitor data from the network and other sources -- this does the main work";
      flags=CAN_REVERT_TO_CODE;
      code_string="trial_netmon->GetMonVals()";
      result_var=NULL;
      obj=$.programs.gp[1][3].objs_vars[0]$;
      method=NetMonitor::GetMonVals;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
      };
      meth_sig="void GetMonVals()";
      meth_desc=" get all the values and store in current row of data table -- call in program to get new data";
     };
     MethodCall @[2] {
      name="MethodCall_trialmondataWriteClose";
      desc="update views and other things after writing new data to monitor data table";
      flags=CAN_REVERT_TO_CODE;
      code_string="trial_mon_data->WriteClose()";
      result_var=NULL;
      obj=$.programs.gp[1][3].vars[0]$;
      method=DataTable::WriteClose;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
      };
      meth_sig="void WriteClose()";
      meth_desc=" closes up a write operation -- call when done writing data -- performs any post-writing cleanup/closing of files, etc";
     };
     MethodCall @[3] {
      name="MethodCall_networkDMemShare_tatrialmondata1";
      desc="only functional for dmem projects: synchronizes trial data across processes so that all distributed memory processors have the same trial-level data, despite having run only a subset of them each";
      flags=CAN_REVERT_TO_CODE;
      code_string="network->DMem_ShareTrialData(trial_mon_data, 1)";
      result_var=NULL;
      obj=.programs.gp[1][3].args[0]$$;
      method=Network::DMem_ShareTrialData;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=DataTable_ptr;
	type="DataTable*";
	name="dt";
	required=1;
	def_val=;
	prev_expr=;
	expr {
	 expr="trial_mon_data";
	};
       };
       ProgArg @[1] {
	arg_type=int;
	type="int";
	name="n_rows";
	required=0;
	def_val="1";
	prev_expr=;
	expr {
	 expr="1";
	};
       };
      };
      meth_sig="void DMem_ShareTrialData(DataTable* dt, int n_rows = 1)";
      meth_desc=" share trial data from given datatable across the trial-level dmem communicator (outer loop) -- each processor gets data from all other processors; if called every trial with n_rows = 1, data will be identical to non-dmem; if called at end of epoch with n_rows = -1 data will be grouped by processor but this is more efficient";
     };
    };
    step_prog=NULL;
    step_n=1;
    doc {
     name="doc";
     desc=;
     web_doc=0;
     wiki=;
     url="local";
     full_url="local";
     text_size=1;
     text=;
     html_text=;
    };
   };
   Program @[4] {
    UserDataItem_List @*(.user_data_) {
     name=;
     el_typ=UserData_DocLink;
     el_def=0;
     UserData_DocLink @[0] {name="DocLink": doc=.programs.gp[1][4].doc$$: };
    };
    name="BpEpochMonitorTest";
    short_nm="EpcMon";
    tags="Bp, Std, Monitor";
    desc="monitor epoch-level data from the network to a datatable (EpochOutputData typically) for use in graphing and viewing and further analysis";
    version {
     major=0;
     minor=0;
     step=0;
    };
    author=;
    email=;
    flags=NO_STOP_STEP;
    stop_step_cond {
     expr=;
    };
    objs {
     name="objs";
     el_typ=NetMonitor;
     el_def=0;
     NetMonitor @[0] {
      name="epoch_netmon";
      items {
       name="items";
       el_typ=NetMonItem;
       el_def=0;
       NetMonItem @[0] {
	name="batch";
	computed=0;
	object_type=LeabraNetwork;
	object=$.networks[0]$;
	variable="batch";
	var_label=;
	name_style=AUTO_NAME;
	max_name_len=6;
	options=HIDDEN_LAYERS|OUTPUT_LAYERS|TARGET_LAYERS;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	data_agg=0;
	data_src=NULL;
	agg_col {
	 col_name=;
	};
	agg {name="agg": op=NONE: rel={name="rel": rel=LESSTHANOREQUAL: val=0: val_string="": use_var=0: var=NULL: }: };
	select_rows=0;
	select_spec {
	 col_name=;
	 name="_EQUAL_";
	 on=1;
	 rel=EQUAL;
	 use_var=0;
	 cmp 0 1;
	 var=NULL;
	 enable_var=NULL;
	};
	pre_proc_1 {name="pre_proc_1": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {name="pre_proc_2": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {name="pre_proc_3": opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[1] {
	name="epoch";
	computed=0;
	object_type=LeabraNetwork;
	object=$.networks[0]$;
	variable="epoch";
	var_label=;
	name_style=AUTO_NAME;
	max_name_len=6;
	options=HIDDEN_LAYERS|OUTPUT_LAYERS|TARGET_LAYERS;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	data_agg=0;
	data_src=NULL;
	agg_col {
	 col_name=;
	};
	agg {name="agg": op=NONE: rel={name="rel": rel=LESSTHANOREQUAL: val=0: val_string="": use_var=0: var=NULL: }: };
	select_rows=0;
	select_spec {
	 col_name=;
	 name="_EQUAL_";
	 on=1;
	 rel=EQUAL;
	 use_var=0;
	 cmp 0 1;
	 var=NULL;
	 enable_var=NULL;
	};
	pre_proc_1 {name="pre_proc_1": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {name="pre_proc_2": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {name="pre_proc_3": opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[2] {
	name="avg_sse";
	computed=0;
	object_type=LeabraNetwork;
	object=$.networks[0]$;
	variable="avg_sse";
	var_label=;
	name_style=AUTO_NAME;
	max_name_len=6;
	options=HIDDEN_LAYERS|OUTPUT_LAYERS|TARGET_LAYERS;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	data_agg=0;
	data_src=NULL;
	agg_col {
	 col_name=;
	};
	agg {name="agg": op=NONE: rel={name="rel": rel=LESSTHANOREQUAL: val=0: val_string="": use_var=0: var=NULL: }: };
	select_rows=0;
	select_spec {
	 col_name=;
	 name="_EQUAL_";
	 on=1;
	 rel=EQUAL;
	 use_var=0;
	 cmp 0 1;
	 var=NULL;
	 enable_var=NULL;
	};
	pre_proc_1 {name="pre_proc_1": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {name="pre_proc_2": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {name="pre_proc_3": opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[3] {
	name="cnt_err";
	computed=0;
	object_type=LeabraNetwork;
	object=$.networks[0]$;
	variable="cnt_err";
	var_label=;
	name_style=AUTO_NAME;
	max_name_len=6;
	options=HIDDEN_LAYERS|OUTPUT_LAYERS|TARGET_LAYERS;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	data_agg=0;
	data_src=NULL;
	agg_col {
	 col_name=;
	};
	agg {name="agg": op=NONE: rel={name="rel": rel=LESSTHANOREQUAL: val=0: val_string="": use_var=0: var=NULL: }: };
	select_rows=0;
	select_spec {
	 col_name=;
	 name="_EQUAL_";
	 on=1;
	 rel=EQUAL;
	 use_var=0;
	 cmp 0 1;
	 var=NULL;
	 enable_var=NULL;
	};
	pre_proc_1 {name="pre_proc_1": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {name="pre_proc_2": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {name="pre_proc_3": opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[4] {
	name="epoch_time_tot";
	computed=1;
	object_type=NULL;
	object=NULL;
	variable="act";
	var_label=;
	name_style=MY_NAME;
	max_name_len=6;
	options=HIDDEN_LAYERS|OUTPUT_LAYERS|TARGET_LAYERS;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	data_agg=0;
	data_src=NULL;
	agg_col {
	 col_name=;
	};
	agg {name="agg": op=NONE: rel={name="rel": rel=LESSTHANOREQUAL: val=0: val_string="": use_var=0: var=NULL: }: };
	select_rows=0;
	select_spec {
	 col_name=;
	 name="_EQUAL_";
	 on=1;
	 rel=EQUAL;
	 use_var=0;
	 cmp 0 1;
	 var=NULL;
	 enable_var=NULL;
	};
	pre_proc_1 {name="pre_proc_1": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {name="pre_proc_2": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {name="pre_proc_3": opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[5] {
	name="epoch_time_usr";
	computed=1;
	object_type=NULL;
	object=NULL;
	variable="act";
	var_label=;
	name_style=MY_NAME;
	max_name_len=6;
	options=HIDDEN_LAYERS|OUTPUT_LAYERS|TARGET_LAYERS;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	data_agg=0;
	data_src=NULL;
	agg_col {
	 col_name=;
	};
	agg {name="agg": op=NONE: rel={name="rel": rel=LESSTHANOREQUAL: val=0: val_string="": use_var=0: var=NULL: }: };
	select_rows=0;
	select_spec {
	 col_name=;
	 name="_EQUAL_";
	 on=1;
	 rel=EQUAL;
	 use_var=0;
	 cmp 0 1;
	 var=NULL;
	 enable_var=NULL;
	};
	pre_proc_1 {name="pre_proc_1": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {name="pre_proc_2": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {name="pre_proc_3": opr=NONE: arg=0: lw=-1: hi=1: };
       };
      };
      network=$.networks[0]$;
      data=.data.gp[1][3]$$;
      rmv_orphan_cols=1;
     };
    };
    objs_vars {
     name="objs_vars";
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="epoch_netmon";
      var_type=T_Object;
      object_type=NetMonitor;
      object_val=.programs.gp[1][4].objs[0]$$;
      object_scope=NULL;
      objs_ptr=1;
      flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc="network monitor object that contains full specs for what to record and where to get it";
      init_from=NULL;
     };
    };
    types {
     name="types";
     el_typ=DynEnumType;
     el_def=0;
    };
    args {
     name="args";
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="network";
      var_type=T_Object;
      object_type=Network;
      object_val=$.networks[0]$;
      object_scope=NULL;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL|PGRM_ARG;
      reference=0;
      desc="network to get data from";
      init_from=NULL;
     };
    };
    vars {
     name="vars";
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="epoch_mon_data";
      var_type=T_Object;
      object_type=DataTable;
      object_val=$.data.gp[1][3]$;
      object_scope=NULL;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc="data table to write the epoch data to";
      init_from=NULL;
     };
     ProgVar @[1] {
      name="epoch_timer";
      var_type=T_Object;
      object_type=TimeUsed;
      object_val=$.networks[0].epoch_time$;
      object_scope=NULL;
      objs_ptr=0;
      flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc="pointer to the network's epoch-level timer, to record how long it took to process an epoch";
      init_from=NULL;
     };
    };
    functions {
     name="functions";
     el_typ=Function;
     el_def=0;
    };
    init_code {
     name="init_code";
     el_typ=ProgCode;
     el_def=0;
     AssignExpr @[0] {
      name="AssignExpr_epochtimernetworkepochtime";
      desc="get the epoch timer from current network";
      flags=CAN_REVERT_TO_CODE;
      code_string="epoch_timer = network.epoch_time";
      result_var=.programs.gp[1][4].vars[1]$$;
      expr {
       expr="network.epoch_time";
      };
     };
     MethodCall @[1] {
      name="MethodCall_epochnetmonSetDa_hmondatanetwork";
      desc="set data and network on NetMonitor object";
      flags=CAN_REVERT_TO_CODE;
      code_string="epoch_netmon->SetDataNetwork(epoch_mon_data, network)";
      result_var=NULL;
      obj=.programs.gp[1][4].objs_vars[0]$$;
      method=NetMonitor::SetDataNetwork;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=DataTable_ptr;
	type="DataTable*";
	name="dt";
	required=1;
	def_val=;
	prev_expr=;
	expr {
	 expr="epoch_mon_data";
	};
       };
       ProgArg @[1] {
	arg_type=Network_ptr;
	type="Network*";
	name="net";
	required=1;
	def_val=;
	prev_expr=;
	expr {
	 expr="network";
	};
       };
      };
      meth_sig="void SetDataNetwork(DataTable* dt, Network* net)";
      meth_desc=" set both the data table and network -- convenient for programs -- calls ResetDataTableCols too -- don't call if columns are manually added or this is adding additional rows to a table";
     };
     MethodCall @[2] {
      name="MethodCall_epochnetmonCheckConfigfalse";
      desc="check configuration and emit errors/warnings for problems";
      flags=CAN_REVERT_TO_CODE;
      code_string="epoch_netmon->CheckConfig(false)";
      result_var=NULL;
      obj=$.programs.gp[1][4].objs_vars[0]$;
      method=taBase::CheckConfig;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=bool;
	type="bool";
	name="quiet";
	required=0;
	def_val="false";
	prev_expr=;
	expr {
	 expr="false";
	};
       };
      };
      meth_sig="bool CheckConfig(bool quiet = false)";
      meth_desc=" check the configuration of this object and all its children (defaults to no confirm of success)";
     };
     MethodCall @[3] {
      name="MethodCall_epochnetmonUpdateMonitorstrue";
      desc="update the monitor items and data schema based on current settings of NetMonitor";
      flags=CAN_REVERT_TO_CODE;
      code_string="epoch_netmon->UpdateMonitors(true)";
      result_var=NULL;
      obj=$.programs.gp[1][4].objs_vars[0]$;
      method=NetMonitor::UpdateMonitors;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=bool;
	type="bool";
	name="reset_first";
	required=0;
	def_val="false";
	prev_expr=;
	expr {
	 expr="true";
	};
       };
      };
      meth_sig="void UpdateMonitors(bool reset_first = false)";
      meth_desc=" old name for UpdateDataTable";
     };
    };
    prog_code {
     name="prog_code";
     el_typ=ProgCode;
     el_def=0;
     MethodCall @[0] {
      name="MethodCall_epochmondataAddBlankRow";
      desc="add a new blank row to the data";
      flags=CAN_REVERT_TO_CODE;
      code_string="epoch_mon_data->AddBlankRow()";
      result_var=NULL;
      obj=.programs.gp[1][4].vars[0]$$;
      method=DataTable::AddBlankRow;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
      };
      meth_sig="int AddBlankRow()";
      meth_desc=" add a new row to the data table, sets read (source) and write (sink) index to this last row (as in ReadItem or WriteItem), so that subsequent data routines refer to this new row, and returns row ";
     };
     MethodCall @[1] {
      name="MethodCall_epochnetmonGetMonVals";
      desc="get the new monitor data and stor it into the data table -- this does the main job here";
      flags=CAN_REVERT_TO_CODE;
      code_string="epoch_netmon->GetMonVals()";
      result_var=NULL;
      obj=$.programs.gp[1][4].objs_vars[0]$;
      method=NetMonitor::GetMonVals;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
      };
      meth_sig="void GetMonVals()";
      meth_desc=" get all the values and store in current row of data table -- call in program to get new data";
     };
     AssignExpr @[2] {
      name="AssignExpr_epochtimernetworkepochtime";
      desc="get the epoch timer from current network";
      flags=CAN_REVERT_TO_CODE;
      code_string="epoch_timer = network.epoch_time";
      result_var=$.programs.gp[1][4].vars[1]$;
      expr {
       expr="network.epoch_time";
      };
     };
     MethodCall @[3] {
      name="MethodCall_epochmondataSetV_csepochtimetot1";
      desc="set the total time to compute the epoch (epoch_time_tot -- wall clock time) to time used data from network timer";
      flags=CAN_REVERT_TO_CODE;
      code_string="epoch_mon_data->SetValColName(epoch_timer.used.GetTotSecs(), \"epoch_time_tot\", -1, )";
      result_var=NULL;
      obj=$.programs.gp[1][4].vars[0]$;
      method=DataTable::SetValColName;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=const_Variant_ref;
	type="Variant&";
	name="val";
	required=1;
	def_val=;
	prev_expr=;
	expr {
	 expr="epoch_timer.used.GetTotSecs()";
	};
       };
       ProgArg @[1] {
	arg_type=const_taString_ref;
	type="taString&";
	name="col_name";
	required=1;
	def_val="\"\"";
	prev_expr=;
	expr {
	 expr="\"epoch_time_tot\"";
	};
       };
       ProgArg @[2] {
	arg_type=int;
	type="int";
	name="row";
	required=1;
	def_val=;
	prev_expr=;
	expr {
	 expr="-1";
	};
       };
       ProgArg @[3] {
	arg_type=bool;
	type="bool";
	name="quiet";
	required=0;
	def_val="false";
	prev_expr=;
	expr {
	 expr=;
	};
       };
      };
      meth_sig="bool SetValColName(Variant& val, taString& col_name, int row, bool quiet = false)";
      meth_desc=" set data of scalar type, in Variant form (any data type, use for Programs), for given column name, row; returns 'true' if valid access and set is successful -- quiet = fail quietly";
     };
     MethodCall @[4] {
      name="MethodCall_epochmondataSetV_csepochtimeusr1";
      desc="set the user process time (cpu time for this process, epoch_time_usr) to time used data from network timer";
      flags=CAN_REVERT_TO_CODE;
      code_string="epoch_mon_data->SetValColName(epoch_timer.used.GetUsrSecs(), \"epoch_time_usr\", -1, )";
      result_var=NULL;
      obj=$.programs.gp[1][4].vars[0]$;
      method=DataTable::SetValColName;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=const_Variant_ref;
	type="Variant&";
	name="val";
	required=1;
	def_val=;
	prev_expr=;
	expr {
	 expr="epoch_timer.used.GetUsrSecs()";
	};
       };
       ProgArg @[1] {
	arg_type=const_taString_ref;
	type="taString&";
	name="col_name";
	required=1;
	def_val="\"\"";
	prev_expr=;
	expr {
	 expr="\"epoch_time_usr\"";
	};
       };
       ProgArg @[2] {
	arg_type=int;
	type="int";
	name="row";
	required=1;
	def_val=;
	prev_expr=;
	expr {
	 expr="-1";
	};
       };
       ProgArg @[3] {
	arg_type=bool;
	type="bool";
	name="quiet";
	required=0;
	def_val="false";
	prev_expr=;
	expr {
	 expr=;
	};
       };
      };
      meth_sig="bool SetValColName(Variant& val, taString& col_name, int row, bool quiet = false)";
      meth_desc=" set data of scalar type, in Variant form (any data type, use for Programs), for given column name, row; returns 'true' if valid access and set is successful -- quiet = fail quietly";
     };
     MethodCall @[5] {
      name="MethodCall_epochmondataWriteClose";
      desc="update after writing new data to monitor data table";
      flags=CAN_REVERT_TO_CODE;
      code_string="epoch_mon_data->WriteClose()";
      result_var=NULL;
      obj=$.programs.gp[1][4].vars[0]$;
      method=DataTable::WriteClose;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
      };
      meth_sig="void WriteClose()";
      meth_desc=" closes up a write operation -- call when done writing data -- performs any post-writing cleanup/closing of files, etc";
     };
    };
    step_prog=NULL;
    step_n=1;
    doc {
     name="doc";
     desc=;
     web_doc=0;
     wiki=;
     url="local";
     full_url="local";
     text_size=1;
     text=;
     html_text=;
    };
   };
  };
 };
 viewers {
  name="viewers";
  el_typ=MainWindowViewer;
  el_def=0;
  MainWindowViewer @[0] {
   UserDataItem_List @*(.user_data_) {
    name="UserDataItem_List_58";
    el_typ=UserDataItem;
    el_def=0;
    UserDataItem @[0] {name="view_win_lft": value=0: val_type_fixed=0: };
    UserDataItem @[1] {name="view_win_top": value=0.08951407: val_type_fixed=0: };
    UserDataItem @[2] {name="view_win_wd": value=1: val_type_fixed=0: };
    UserDataItem @[3] {name="view_win_ht": value=0.7127025: val_type_fixed=0: };
    UserDataItem @[4] {name="view_win_iconified": value=0: val_type_fixed=0: };
    UserDataItem @[5] {name="view_splitter_state": value=AAAA/wAAAAEAAAADAAACSQAAAa8AAAMOAQAAAAYBAAAAAQA=: val_type_fixed=0: };
   };
   name="Browser3";
   m_data=.$$;
   cur_font_size=10;
   visible=1;
   win_name=".projects[\"consumption_bp_nogui_20160321a_convert2\"] - consumption_bp_nogui_20160321a_convert2.proj [*]";
   m_is_root=0;
   m_is_viewer_xor_browser=0;
   m_is_proj_viewer=1;
   m_is_dialog=0;
   revert_to_tab_no=-1;
   toolbars {
    name="toolbars";
    el_typ=ToolBar;
    el_def=0;
    ToolBar @[0] {
     UserDataItem_List @*(.user_data_) {
      name="UserDataItem_List_59";
      el_typ=UserDataItem;
      el_def=0;
      UserDataItem @[0] {name="view_win_visible": value=0: val_type_fixed=0: };
     };
     name="Application";
     m_data=NULL;
     cur_font_size=10;
     visible=0;
     lft=0;
     top=0.0170503;
     o=Horizontal;
    };
   };
   frames {
    name="frames";
    el_typ=FrameViewer;
    el_def=0;
    BrowseViewerTaBase @[0] {
     name="Navigator";
     m_data=NULL;
     cur_font_size=10;
     visible=1;
     root_typ=BpProject;
     root_md=NULL;
     m_root=$.$;
    };
    PanelViewer @[1] {
     name="Editor";
     m_data=NULL;
     cur_font_size=10;
     visible=1;
    };
    T3PanelViewer @[2] {
     UserDataItem_List @*(.user_data_) {
      name="UserDataItem_List_60";
      el_typ=UserDataItem;
      el_def=0;
      UserDataItem @[0] {name="view_panel_selected": value=1: val_type_fixed=0: };
     };
     name="Visualizer";
     m_data=NULL;
     cur_font_size=10;
     visible=1;
     panels {
      name="panels";
      el_typ=T3Panel;
      el_def=0;
      T3Panel @[0] {
       name="Panel2";
       m_data=NULL;
       cur_font_size=10;
       visible=1;
       root_view {
	name="root_view";
	m_data=NULL;
	cur_font_size=10;
	m_transform=NULL;
	children {
	 name="children";
	 el_typ=T3DataViewMain;
	 el_def=0;
	};
       };
       bg_color {r=1: g=1: b=1: a=1: };
       text_color {r=0: g=0: b=0: a=1: };
       headlight_on=1;
       headlight_intensity=1;
       ambient_light=0;
       camera_params {field_of_view=45: near_distance=0.1: focal=5: far_distance=1000: };
       stereo_view=STEREO_NONE;
       saved_views {
	name="saved_views";
	el_typ=T3SavedView;
	el_def=0;
	T3SavedView @[0] {
	 name="Vw_0";
	 view_saved=1;
	 pos {x=0: y=0: z=-0.4765596: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=3.52344;
	};
	T3SavedView @[1] {
	 name="Vw_1";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @[2] {
	 name="Vw_2";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @[3] {
	 name="Vw_3";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @[4] {
	 name="Vw_4";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @[5] {
	 name="Vw_5";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @[6] {
	 name="Vw_6";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @[7] {
	 name="Vw_7";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @[8] {
	 name="Vw_8";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @[9] {
	 name="Vw_9";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
       };
      };
     };
    };
   };
   docks {
    name="docks";
    el_typ=DockViewer;
    el_def=0;
    ToolBoxDockViewer @[0] {
     UserDataItem_List @*(.user_data_) {
      name="UserDataItem_List_61";
      el_typ=UserDataItem;
      el_def=0;
      UserDataItem @[0] {name="view_win_lft": value=0: val_type_fixed=0: };
      UserDataItem @[1] {name="view_win_top": value=-0.005115089: val_type_fixed=0: };
      UserDataItem @[2] {name="view_win_wd": value=0.04375: val_type_fixed=0: };
      UserDataItem @[3] {name="view_win_ht": value=0.627451: val_type_fixed=0: };
      UserDataItem @[4] {name="view_win_iconified": value=0: val_type_fixed=0: };
      UserDataItem @[5] {name="view_visible": value=1: val_type_fixed=0: };
     };
     name="ProgramToolbar";
     m_data=NULL;
     cur_font_size=10;
     visible=1;
     win_name=;
     dock_flags=DV_MOVABLE|DV_FLOATABLE;
     dock_area=1;
    };
   };
  };
 };
 save_view=1;
 save_as_only=0;
 auto_name=1;
 last_change_desc="using a bp network

trying bidirectional

think it's still feed forward

set error level crit

ran test

running new training on 9, 15 and 11

trained on 4500+ trials from nodes 15,11,9

saved as bp6";
 tree_state{ .;.patches;.docs;.wizards;.ctrl_panels;.active_params;.data;.data.gp[0];.data.gp[1];.data.gp[2];.programs;.programs.break_points;.programs.gp[0];.programs.gp[0][0].prog_code;.programs.gp[0][0].prog_code[1];.programs.gp[0][0].prog_code[1].loop_code[0];.programs.gp[0][0].prog_code[1].loop_code[0].prog_args[0];.programs.gp[0][0].prog_code[1].loop_code[0].prog_args[1];.programs.gp[0][0].prog_code[1].loop_code[0].prog_args[2];.networks;.networks[0];.networks[0].spec_tables;.networks[0].specs;.networks[0].param_seqs;.networks[0].layers;.networks[0].layers[0];.networks[0].layers[1];.networks[0].layers[1].projections;.networks[0].weights; };
 networks {
  name="networks";
  el_typ=BpNetwork;
  el_def=0;
  BpNetwork @[0] {
   UserDataItem_List @*(.user_data_) {
    name=;
    el_typ=UserDataItem;
    el_def=0;
    UserDataItem @[0] {name="sse": value=1: val_type_fixed=1: };
    UserDataItem @[1] {name="output_name": value=1: val_type_fixed=1: };
    UserDataItem @[2] {name="trial_name": value=1: val_type_fixed=1: };
    UserDataItem @[3] {name="group_name": value=1: val_type_fixed=1: };
    UserDataItem @[4] {name="total_trials": value=1: val_type_fixed=1: };
    UserDataItem @[5] {name="time": value=1: val_type_fixed=1: };
    UserDataItem @[6] {name="cycle": value=1: val_type_fixed=1: };
    UserDataItem @[7] {name="tick": value=1: val_type_fixed=1: };
    UserDataItem @[8] {name="trial": value=1: val_type_fixed=1: };
    UserDataItem @[9] {name="group": value=1: val_type_fixed=1: };
    UserDataItem @[10] {name="epoch": value=1: val_type_fixed=1: };
    UserDataItem @[11] {name="batch": value=1: val_type_fixed=1: };
   };
   name="Network_0";
   desc=;
   specs {
    name="specs";
    el_typ=BpUnitSpec;
    el_def=0;
    BpUnitSpec @[0] {
     name="BpUnitSpec_0";
     is_used=1;
     used_status=USED;
     desc=;
     unique{      };
     saved{      };
     children {
      name="children";
      el_typ=BpUnitSpec;
      el_def=0;
     };
     act_range {min=0: max=1: range=1: scale=1: };
     bias_spec {type=BpConSpec: spec=.networks[0].specs[1]$$: };
     sse_tol=0;
     act_fun=SIGMOID;
     error_fun=SQUARED_ERR;
     err_tol=0;
     save_err=0;
     nlxx1 {ramp_start=-3: ramp_max=0.1: ramp_gain=-0.03333334: };
     gauss {mean=0: std_dev=1: std_dev_r=1: };
     noise_type=NO_NOISE;
     noise {name="noise": type=UNIFORM: mean=0: var=1: par=1: };
    };
    BpConSpec @[1] {
     name="BpConSpec_0";
     is_used=1;
     used_status=USED;
     desc=;
     unique{      };
     saved{      };
     children {
      name="children";
      el_typ=BpConSpec;
      el_def=0;
     };
     rnd {name="rnd": type=UNIFORM: mean=0: var=0.5: par=1: };
     wt_limits {type=NONE: min=-1: max=1: sym=0: sym_fm_top=0: };
     lrate=0.25;
     cur_lrate=0.25;
     lrate_sched {
      name="lrate_sched";
      el_typ=SchedItem;
      el_def=0;
      default_val=1;
      interpolate=0;
     };
     momentum=0.9;
     decay_type=NO_DECAY;
     decay=0;
     wt_updt=WU_MOMENT;
    };
    FullPrjnSpec @[2] {
     name="FullPrjnSpec_0";
     is_used=1;
     used_status=USED;
     desc=;
     unique{      };
     saved{      };
     children {
      name="children";
      el_typ=FullPrjnSpec;
      el_def=0;
     };
     self_con=0;
     init_wts=0;
     set_scale=0;
     init_wt_val=1;
     add_rnd_var=0;
     renorm_wts {on=0: mult_norm=1: avg_wt=0.5: };
    };
   };
   param_seqs {
    name="param_seqs";
    el_typ=ParamSeq;
    el_def=0;
   };
   layers {
    name="layers";
    el_typ=BpLayer;
    el_def=0;
    pos {x=0: y=0: z=0: };
    pos2d {x=0: y=0: };
    max_disp_size {x=25: y=1: z=1: };
    max_disp_size2d {x=25: y=1: };
    BpLayer @[0] {
     name="Input";
     desc=;
     flags=0;
     layer_type=INPUT;
     pos_rel {rel=ABS_POS: other=NULL: x_align=LEFT: x_off=0: y_align=FRONT: y_off=0: space=2: };
     pos {x=0: y=0: z=0: };
     pos_abs {x=0: y=0: z=0: };
     pos2d {x=0: y=0: };
     pos2d_abs {x=0: y=0: };
     disp_scale=1;
     un_geom {x=17: y=1: n_not_xy=0: n=17: };
     unit_groups=0;
     virt_groups=1;
     gp_geom {x=1: y=1: n_not_xy=0: n=1: };
     gp_spc {x=1: y=1: };
     flat_geom {x=17: y=1: n_not_xy=0: n=17: };
     disp_geom {x=17: y=1: n_not_xy=0: n=17: };
     scaled_disp_geom {x=17: y=1: n_not_xy=0: n=17: };
     n_recv_prjns=0;
     n_send_prjns=1;
     projections {
      name="projections";
      el_typ=Projection;
      el_def=0;
     };
     send_prjns {
      name="send_prjns";
      el_typ=Projection;
      el_def=0;
      Projection_Group @. = [0] = Projection .networks[0].layers[1].projections[0];
     };
     units {
      name="units";
      el_typ=BpUnit;
      el_def=0;
      pos {x=0: y=0: z=0: };
      output_name=;
     };
     unit_spec {type=BpUnitSpec: spec=.networks[0].specs[0]$$: };
     dist {fm_input=0: fm_output=2: };
     units_lesioned=0;
     gp_unit_names_4d=0;
     brain_area=;
     voxel_fill_pct=1;
    };
    BpLayer @[1] {
     name="Hidden";
     desc=;
     flags=0;
     layer_type=HIDDEN;
     pos_rel {rel=ABS_POS: other=NULL: x_align=LEFT: x_off=0: y_align=FRONT: y_off=0: space=2: };
     pos {x=0: y=0: z=0: };
     pos_abs {x=0: y=0: z=0: };
     pos2d {x=0: y=0: };
     pos2d_abs {x=0: y=0: };
     disp_scale=1;
     un_geom {x=25: y=1: n_not_xy=0: n=25: };
     unit_groups=0;
     virt_groups=1;
     gp_geom {x=1: y=1: n_not_xy=0: n=1: };
     gp_spc {x=1: y=1: };
     flat_geom {x=25: y=1: n_not_xy=0: n=25: };
     disp_geom {x=25: y=1: n_not_xy=0: n=25: };
     scaled_disp_geom {x=25: y=1: n_not_xy=0: n=25: };
     n_recv_prjns=1;
     n_send_prjns=1;
     projections {
      name="projections";
      el_typ=Projection;
      el_def=0;
      Projection @[0] {
       name="Fm_Input";
       off=0;
       disp=1;
       notes=;
       from_type=CUSTOM;
       from=.networks[0].layers[0]$$;
       spec {type=FullPrjnSpec: spec=.networks[0].specs[2]$$: };
       con_type=BpCon;
       con_spec {type=BpConSpec: spec=$.networks[0].specs[1]$: };
       recv_idx=0;
       send_idx=0;
       recv_n=1;
       send_n=1;
       projected=1;
       dir_fixed=0;
       direction=FM_INPUT;
       prjn_clr {r=1: g=0.9: b=0.5: a=1: };
      };
     };
     send_prjns {
      name="send_prjns";
      el_typ=Projection;
      el_def=0;
      Projection_Group @. = [0] = Projection .networks[0].layers[2].projections[0];
     };
     units {
      name="units";
      el_typ=BpUnit;
      el_def=0;
      pos {x=0: y=0: z=0: };
      output_name=;
     };
     unit_spec {type=BpUnitSpec: spec=$.networks[0].specs[0]$: };
     dist {fm_input=1: fm_output=1: };
     units_lesioned=0;
     gp_unit_names_4d=0;
     brain_area=;
     voxel_fill_pct=1;
    };
    BpLayer @[2] {
     name="Output";
     desc=;
     flags=0;
     layer_type=TARGET;
     pos_rel {rel=ABS_POS: other=NULL: x_align=LEFT: x_off=0: y_align=FRONT: y_off=0: space=2: };
     pos {x=0: y=0: z=0: };
     pos_abs {x=0: y=0: z=0: };
     pos2d {x=0: y=0: };
     pos2d_abs {x=0: y=0: };
     disp_scale=1;
     un_geom {x=1: y=1: n_not_xy=0: n=1: };
     unit_groups=0;
     virt_groups=1;
     gp_geom {x=1: y=1: n_not_xy=0: n=1: };
     gp_spc {x=1: y=1: };
     flat_geom {x=1: y=1: n_not_xy=0: n=1: };
     disp_geom {x=1: y=1: n_not_xy=0: n=1: };
     scaled_disp_geom {x=1: y=1: n_not_xy=0: n=1: };
     n_recv_prjns=1;
     n_send_prjns=0;
     projections {
      name="projections";
      el_typ=Projection;
      el_def=0;
      Projection @[0] {
       name="Fm_Hidden";
       off=0;
       disp=1;
       notes=;
       from_type=CUSTOM;
       from=.networks[0].layers[1]$$;
       spec {type=FullPrjnSpec: spec=$.networks[0].specs[2]$: };
       con_type=BpCon;
       con_spec {type=BpConSpec: spec=$.networks[0].specs[1]$: };
       recv_idx=0;
       send_idx=0;
       recv_n=1;
       send_n=1;
       projected=1;
       dir_fixed=0;
       direction=FM_INPUT;
       prjn_clr {r=1: g=0.9: b=0.5: a=1: };
      };
     };
     send_prjns {
      name="send_prjns";
      el_typ=Projection;
      el_def=0;
     };
     units {
      name="units";
      el_typ=BpUnit;
      el_def=0;
      pos {x=0: y=0: z=0: };
      output_name=;
     };
     unit_spec {type=BpUnitSpec: spec=$.networks[0].specs[0]$: };
     dist {fm_input=2: fm_output=0: };
     units_lesioned=0;
     gp_unit_names_4d=0;
     brain_area=;
     voxel_fill_pct=1;
    };
   };
   weights {
    name="weights";
    el_typ=Weights;
    el_def=0;
   };
   flags=BUILD_INIT_WTS;
   unit_vars_type=BpUnitVars;
   con_group_type=ConGroup;
   auto_build=AUTO_BUILD;
   auto_load_wts=NO_AUTO_LOAD;
   auto_load_file=;
   brain_atlas_name=;
   train_mode=TRAIN;
   wt_update=ON_LINE;
   small_batch_n=10;
   stats {sse_unit_avg=0: sse_sqrt=0: cnt_err_tol=0: prerr=0: };
   threads {run_time={name="": s_used=0: n_used=0: avg_used={avg=0: sum=0: n=0: }: }: sync_time={name="": s_used=0: n_used=0: avg_used={avg=0: sum=0: n=0: }: }: total_time={name="": s_used=0: n_used=0: avg_used={avg=0: sum=0: n=0: }: }: n_wake_in_sync=0: run_time_pct=0: sync_time_pct=0: wake_in_sync_pct=-9.362986856279606e+306: };
   cuda {sync_units=0: sync_cons=0: min_threads=32: max_threads=1024: cons_per_thread=2: timers_on=0: n_threads=32: };
   usr1_save_fmt=FULL_NET;
   wt_save_fmt=TEXT;
   n_units=44;
   n_cons=450;
   max_prjns=1;
   max_disp_size {x=25: y=1: z=1: };
   max_disp_size2d {x=25: y=1: };
   bp_to_inputs=0;
  };
 };
};
